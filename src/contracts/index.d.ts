/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />
// import { BigNumber } from "bignumber.js";
import BN from 'bn.js'

export interface ERC20DetailedContract
    extends Truffle.Contract<ERC20DetailedInstance> {
    'new'(
        name: string,
        symbol: string,
        decimals: number | BN | string,
        meta?: Truffle.TransactionDetails
    ): Promise<ERC20DetailedInstance>
}

export interface ERC20DetailedInstance extends Truffle.ContractInstance {
    allowance(
        owner: string | BN,
        spender: string | BN,
        txDetails?: Truffle.TransactionDetails
    ): Promise<BN>

    approve: {
        (
            spender: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<Truffle.TransactionResponse>
        call(
            spender: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<boolean>
        sendTransaction(
            spender: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<string>
        estimateGas(
            spender: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<number>
    }

    balanceOf(
        account: string | BN,
        txDetails?: Truffle.TransactionDetails
    ): Promise<BN>

    decimals(txDetails?: Truffle.TransactionDetails): Promise<BN>

    name(txDetails?: Truffle.TransactionDetails): Promise<string>

    symbol(txDetails?: Truffle.TransactionDetails): Promise<string>

    totalSupply(txDetails?: Truffle.TransactionDetails): Promise<BN>

    transfer: {
        (
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<Truffle.TransactionResponse>
        call(
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<boolean>
        sendTransaction(
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<string>
        estimateGas(
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<number>
    }

    transferFrom: {
        (
            sender: string | BN,
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<Truffle.TransactionResponse>
        call(
            sender: string | BN,
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<boolean>
        sendTransaction(
            sender: string | BN,
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<string>
        estimateGas(
            sender: string | BN,
            recipient: string | BN,
            amount: number | BN | string,
            txDetails?: Truffle.TransactionDetails
        ): Promise<number>
    }
}
