{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get.js","../node_modules/safe-event-emitter/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/eth-json-rpc-errors/index.js","../node_modules/eth-json-rpc-errors/src/classes.js","../node_modules/json-stable-stringify/index.js","../node_modules/eth-json-rpc-errors/src/utils.js","../node_modules/jsonify/index.js","../node_modules/jsonify/lib/parse.js","../node_modules/jsonify/lib/stringify.js","../node_modules/fast-safe-stringify/index.js","../node_modules/eth-json-rpc-errors/src/errors.js"],"names":["superPropBase","_get","target","property","receiver","Reflect","get","module","exports","base","desc","Object","getOwnPropertyDescriptor","call","value","util","require","EventEmitter","R","ReflectApply","apply","args","Function","prototype","SafeEventEmitter","this","safeApply","handler","context","err","setTimeout","arrayClone","arr","n","copy","Array","i","inherits","emit","type","arguments","length","push","doError","events","_events","undefined","error","er","Error","message","len","listeners","getPrototypeOf","object","hasOwnProperty","EthereumRpcError","EthereumProviderError","serializeError","getMessageFromCode","ethErrors","ERROR_CODES","safeStringify","code","data","Number","isInteger","serialized","stack","serialize","stringifyReplacer","isValidEthProviderCode","_","json","JSON","obj","opts","cmp","space","join","f","cycles","replacer","key","node","a","b","aobj","bobj","seen","stringify","parent","level","indent","colonSeparator","toJSON","isArray","out","item","indexOf","TypeError","keys","objectKeys","sort","keyValue","splice","x","toString","has","errorValues","FALLBACK_ERROR_CODE","rpc","internal","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","codeString","isJsonRpcServerError","isValidCode","assignOriginalError","assign","fallbackError","originalError","JSON_RPC_SERVER_ERROR_MESSAGE","parse","at","ch","text","escapee","r","t","m","name","next","c","charAt","number","string","isFinite","hex","uffff","parseInt","String","fromCharCode","white","array","word","source","reviver","result","walk","holder","k","v","gap","rep","escapable","meta","quote","lastIndex","test","replace","charCodeAt","slice","str","partial","mind","default","stable","deterministicStringify","stableStringify","replacerStack","spacer","res","decirc","val","propertyDescriptor","configurable","defineProperty","pop","replaceGetterValues","part","compareFunction","tmp","deterministicDecirc","getEthJsonRpcError","validateOpts","getEthProviderError","invalidRequest","invalidParams","methodNotFound","server","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","provider","userRejectedRequest","unauthorized","unsupportedMethod","custom"],"mappings":"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","file":"static/js/0.df88d545.chunk.js","sourcesContent":["var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","const util = require('util')\nconst EventEmitter = require('events/')\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n}\n\nmodule.exports = SafeEventEmitter\n\n\nfunction SafeEventEmitter() {\n  EventEmitter.call(this)\n}\n\nutil.inherits(SafeEventEmitter, EventEmitter)\n\nSafeEventEmitter.prototype.emit = function (type) {\n  // copied from https://github.com/Gozala/events/blob/master/events.js\n  // modified lines are commented with \"edited:\"\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    // edited: using safeApply\n    safeApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      // edited: using safeApply\n      safeApply(listeners[i], this, args);\n  }\n\n  return true;\n}\n\nfunction safeApply(handler, context, args) {\n  try {\n    ReflectApply(handler, context, args)\n  } catch (err) {\n    // throw error after timeout so as not to interupt the stack\n    setTimeout(() => {\n      throw err\n    })\n  }\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n","\nconst safeStringify = require('fast-safe-stringify')\n\n/**\n * @class JsonRpcError\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP 1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor (code, message, data) {\n\n    if (!Number.isInteger(code)) throw new Error(\n      '\"code\" must be an integer.'\n    )\n    if (!message || typeof message !== 'string') throw new Error(\n      '\"message\" must be a nonempty string.'\n    )\n\n    super(message)\n    this.code = code\n    if (data !== undefined) this.data = data\n  }\n\n  /**\n   * Returns a plain object with all public class properties.\n   * \n   * @returns {object} The serialized error. \n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message,\n    }\n    if (this.data !== undefined) serialized.data = this.data\n    if (this.stack) serialized.stack = this.stack\n    return serialized\n  }\n\n  /**\n   * Return a string representation of the serialized error, omitting\n   * any circular references.\n   * \n   * @returns {string} The serialized error as a string.\n   */\n  toString() {\n    return safeStringify(\n      this.serialize(),\n      stringifyReplacer,\n      2\n    )\n  }\n}\n\n/**\n * @class EthereumRpcError\n * Error subclass implementing Ethereum Provider errors per EIP 1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code, in the [ 1000 <= 4999 ] range.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor(code, message, data) {\n\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      )\n    }\n\n    super(code, message, data)\n  }\n}\n\n// Internal\n\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999\n}\n\nfunction stringifyReplacer(_, value) {\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\n\n// Exports\n\nmodule.exports =  {\n  EthereumRpcError,\n  EthereumProviderError\n}\n","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","\nconst errorValues = require('./errorValues.json')\nconst FALLBACK_ERROR_CODE = require('./errorCodes.json').rpc.internal\nconst { EthereumRpcError } = require('./classes')\n\nconst JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.'\n\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.'\n\nconst FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n}\n\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n * \n * @param {number} code - The integer error code\n * @param {string} fallbackMessage - The fallback message\n * @return {string} The corresponding message or the fallback message\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n\n  if (Number.isInteger(code)) {\n\n    const codeString = code.toString()\n    if (errorValues[codeString]) return errorValues[codeString].message\n\n    if (isJsonRpcServerError(code)) return JSON_RPC_SERVER_ERROR_MESSAGE\n\n    // TODO: allow valid codes and messages to be extended\n    // // EIP 1193 Status Codes\n    // if (code >= 4000 && code <= 4999) return Something?\n  }\n  return fallbackMessage\n}\n\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n * \n * @param {number} code - The code to check\n * @return {boolean} true if the code is valid, false otherwise.\n */\nfunction isValidCode(code) {\n\n  if (!Number.isInteger(code)) return false\n\n  const codeString = code.toString()\n  if (errorValues[codeString]) return true\n\n  if (isJsonRpcServerError(code)) return true\n\n  // TODO: allow valid codes and messages to be extended\n  // // EIP 1193 Status Codes\n  // if (code >= 4000 && code <= 4999) return true\n\n  return false\n}\n\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n * Adds a 'stack' property if it exists on the given error.\n *\n * @param {any} error - The error to serialize.\n * @param {object} fallbackError - The custom fallback error values if the\n * given error is invalid.\n * @return {object} A standardized error object.\n */\nfunction serializeError (error, fallbackError = FALLBACK_ERROR) {\n\n  if (\n    !fallbackError || \n    !Number.isInteger(fallbackError.code) ||\n    typeof fallbackError.message !== 'string'\n  ) {\n    throw new Error(\n      'fallbackError must contain integer number code and string message.'\n    )\n  }\n\n  if (error instanceof EthereumRpcError) {\n    return error.serialize()\n  }\n\n  const serialized = {}\n\n  if (error && isValidCode(error.code)) {\n\n    serialized.code = error.code\n\n    if (error.message && typeof error.message === 'string') {\n      serialized.message = error.message\n      if (error.hasOwnProperty('data')) serialized.data = error.data\n    } else {\n      serialized.message = getMessageFromCode(serialized.code)\n      serialized.data = { originalError: assignOriginalError(error) }\n    }\n\n  } else {\n    serialized.code = fallbackError.code\n    serialized.message = (\n      error && error.message\n        ? error.message\n        : fallbackError.message\n    )\n    serialized.data = { originalError: assignOriginalError(error) }\n  }\n\n  if (error && error.stack) serialized.stack = error.stack\n  return serialized\n}\n\n// Internal\n\nfunction isJsonRpcServerError (code) {\n  return code >= -32099 && code <= -32000\n}\n\nfunction assignOriginalError (error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error)\n  }\n  return error\n}\n\n// Exports\n\nmodule.exports = {\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n}\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","\nconst { EthereumRpcError, EthereumProviderError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    parse: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.parse, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidRequest: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidRequest, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidParams: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidParams, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotFound, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    internal: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.internal, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP 1474.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    server: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.')\n      }\n      const { code } = opts\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error(\n          '\"code\" must be an integer such that: -32099 <= code <= -32005'\n        )\n      }\n      return getEthJsonRpcError(code, opts)\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidInput: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidInput, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceNotFound, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceUnavailable: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceUnavailable, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    transactionRejected: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.transactionRejected, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotSupported: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotSupported, opts\n    ),\n  },\n\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    userRejectedRequest: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.userRejectedRequest, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unauthorized: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unauthorized, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unsupportedMethod: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unsupportedMethod, opts\n      )\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} opts.message - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    custom: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.')\n      }\n      const { code, message, data } = opts\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthereumProviderError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getEthJsonRpcError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthProviderError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumProviderError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction validateOpts (opts) {\n  let message, data\n  if (opts) {\n    if (typeof opts === 'string') {\n      message = opts\n    } else if (typeof opts === 'object' && !Array.isArray(opts)) {\n      message = opts.message\n      data = opts.data\n    }\n  }\n  return [ message, data ]\n}\n"],"sourceRoot":""}