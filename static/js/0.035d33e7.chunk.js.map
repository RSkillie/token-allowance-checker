{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","secp256k1.ts","keccak.ts","../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js","hash-utils.ts","../node_modules/ethereum-cryptography/node_modules/keccak/js.js","../node_modules/ethereum-cryptography/node_modules/keccak/lib/api/index.js","../node_modules/ethereum-cryptography/node_modules/keccak/lib/api/keccak.js","../node_modules/ethereum-cryptography/node_modules/keccak/lib/api/shake.js","../node_modules/ethereum-cryptography/node_modules/keccak/lib/keccak.js","../node_modules/ethereum-cryptography/node_modules/keccak/lib/keccak-state-unroll.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js","random.ts"],"names":["unsupportedIterableToArray","module","exports","o","Symbol","iterator","Array","isArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","createKeccakHash","require","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","options","toLowerCase","Error","Transform","rate","capacity","delimitedSuffix","hashBitLength","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","chunk","encoding","callback","error","this","update","push","digest","data","Buffer","isBuffer","from","absorb","absorbLastFewBits","squeeze","undefined","toString","_resetState","clone","copy","size","dataByteLength","keccakState","state","blockSize","count","squeezing","prototype","p1600","bits","output","alloc","dest","P1600_ROUND_CONSTANTS","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","errors","assert","cond","msg","isUint8Array","name","Uint8Array","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","len","Object","call","slice","secp256k1","contextRandomize","seed","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyVerify","pubkey","publicKeyCreate","compressed","publicKeyConvert","publicKeyNegate","publicKeyCombine","pubkeys","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","sig","signatureExport","obj","outputlen","signatureImport","ecdsaSign","msg32","noncefn","signature","recid","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","ec","EC","ecparams","curve","BN","constructor","loadPublicKey","first","x","cmp","p","y","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","subarray","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","point","encode","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","keyFromPrivate","getPublic","pair","pairs","add","isInfinity","g","mul","r","nh","sigR","sigS","lenR","posR","lenS","posS","message","_noncefn","counter","nonce","d","sign","canonical","k","pers","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","hash","getX","toArray","getY","resolve"],"mappings":"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","file":"static/js/0.035d33e7.chunk.js","sourcesContent":["var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","module.exports = require('./lib')(require('./lib/elliptic'))\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map","module.exports = require('./lib/api')(require('./lib/keccak'))\n","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar randombytes = require(\"randombytes\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map"],"sourceRoot":""}