{"version":3,"sources":["features/editAllowance/EditAllowanceSlice.ts","components/AddressDisplay.tsx","features/allowancesList/TokenAllowanceItemActions.tsx","features/allowancesList/TokenAllowanceItem.tsx","utils/tokenMeta.ts","features/allowancesList/TokenAllowancesItem.tsx","components/DisplayMessage.tsx","features/allowancesList/AllowancesListContainer.tsx","features/allowancesListFilter/AllowancesListFilter.tsx","features/editAllowance/EditAllowanceForm.tsx","features/editAllowance/EditAllowanceFormContainer.tsx","utils/erc20-decimals-conversion.ts","features/allowancesList/AllowanceLister.tsx","features/onboard/OnboardGate.tsx","features/addressInput/AddressInput.tsx","features/addressInput/AddressInputContainer.tsx","components/AddressExtractor.tsx","components/NetworkSelector.tsx","features/onboard/WalletConfigModal.tsx","features/onboard/walletSelector.tsx","features/onboard/WalletSelectorContainer.tsx","features/menu/MainMenu.tsx","app/ResponsiveApp.tsx","icons/dfuse-logo.svg","icons/blocknative-logo.svg","app/Footer.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","api/apikeys.ts","features/responsiveLayout/responsiveSlice.ts","features/allowancesList/AllowancesListSlice.ts","api/dfuse/dfuseio.ts","utils/contractVerifier.ts","utils/logEventVerifier.ts","features/addressInput/AddressSlice.ts","features/onboard/onboardSlice.ts","features/transactionTracker/TransactionTrackerSlice.ts","icons/gitcoinIcon.png","../node_modules/web3-eth-accounts/src sync","utils/wellKnownContracts.ts","features/tokenContracts/tokenContractsSlice.ts","features/balances/BalancesSlice.tsx"],"names":["editAllowanceSlice","createSlice","name","initialState","showModal","editAllowanceId","reducers","openEditAllowanceModal","state","action","allowanceId","payload","closeEditAllowanceModal","actions","AddressDisplay","contractName","etherscanUrl","ethAddress","mobile","networkId","inline","address","ensName","esContractName","setClipboard","content","navigator","clipboard","writeText","then","console","log","popupTrigger","shortAddress","substr","contractNameString","ensNameString","popupContent","Item","Content","Header","Extra","Icon","link","circular","onClick","window","open","Popup","on","trigger","copyPopup","mouseEnterDelay","size","etherscanPopup","TokenAllowanceItemActions","transactionContent","actionContent","dispatch","useDispatch","allowance","useSelector","allowances","allowancesById","transaction","editTransactionId","transactions","transactionsById","undefined","walletAddressId","addresses","icon","msg","header","transactionState","TransactionStates","CONFIRMED","transactionHash","FAILED","color","error","SUBMITTED","loading","INITIAL","editEnabled","ownerId","Button","compact","primary","disabled","event","preventDefault","unlimitedAllowance","BN","pow","subn","TokenAllowanceItem","allowanceElement","criticalAllowance","positiveAllowance","allowanceValue","allowanceValuesById","tokenContract","tokenContracts","contractsById","tokenContractId","spenderAddress","addressesById","spenderId","respsonsive","onboard","useEffect","QueryStates","QUERY_STATE_INITIAL","fetchAllowanceValueThunk","QUERY_STATE_RUNNING","Loader","active","QUERY_STATE_COMPLETE","value","isZero","eq","gte","totalSupply","roundToDecimals","rounded","bnToDisplayString","decimals","QUERY_STATE_ERROR","allowanceCell","lastChangeCell","lastChangeString","Date","lastChangedTimestamp","toDateString","addressCell","Table","Cell","negative","positive","textAlign","Divider","fitted","collapsing","actionCell","Row","key","buildTokenLogoUrl","contractAddress","path","Web3","utils","toChecksumAddress","TokenAllowancesItem","tokenId","allowanceIds","tokenAddress","ownerBalance","balanceId","buildBalanceId","balances","balancesById","useState","collapsed","setCollapsed","tokenLogoUrl","setTokenLogoUrl","contractInstance","addBalanceThunk","Segment","raised","Placeholder","Line","Paragraph","tokenName","tokenBalance","queryState","bn2DisplayString","symbol","rows","forEach","push","logoImage","Image","src","onError","table","basic","celled","unstackable","HeaderCell","style","paddingBottom","Body","toggleButton","float","maxWidth","Subheader","selectable","DisplayMessage","info","warning","success","body","padded","withIcon","Message","AllowancesListContainer","message","showZeroAllowances","addressFilter","allowancesByTokenId","allowanceIdsByOwnerId","filter","filterString","toLowerCase","tokenContractAddress","addressId","includes","warn","map","groupedAllowances","_","groupBy","sortBy","allowanceArray","allowanceQueryStateByOwner","ownerAddress","items","tokenAllowances","id","currentPage","length","AllowancesListFilter","toggleShowZeroAllowances","addressFilterValue","handleAddressFilterChange","refresh","clearAddressFilter","Grid","verticalAlign","centered","columns","divided","Column","width","Checkbox","toggle","label","checked","onChange","title","Input","placeholder","fluid","stackable","EditAllowanceForm","inputElem","handleChange","tokenSymbol","spender","currentAllowance","newAllowance","handleClose","handleSubmit","spenderAddressDisplay","type","tag","labelPosition","Modal","onClose","List","Form","onSubmit","Field","required","EditAllowanceFormContainer","editAllowance","setNewAllowance","convertAllowanceToDisplaystring","useCallback","e","target","parseFloat","newValue","base","substring","Error","toString","comps","split","whole","fraction","decimalsNumber","toNumber","wholeBN","fractionBN","wei","mul","add","neg","toBaseUnit","setAllowanceThunk","AllowanceLister","checkAddressId","showEditAllowanceModal","setShowZeroAllowances","setAddressFilter","document","fetchAllowancesThunk","handleRefreshClick","loadAllowances","Fragment","OnboardGate","children","history","useHistory","onboardAPI","wallet","selectWallet","initialize","AddressInput","handleInput","addressInputStates","AddressInputContainer","web3","checkAddress","addressInputState","setAddressInputState","input","setInput","setAddressId","setEnsName","validInput","addAddressThunk","a","validAddress","test","eth","ens","getAddress","resolvedAddress","widths","Group","AddressExtractor","addressFromParams","useParams","checkAddressState","prevAddressFromParams","setPrevAddressFromParams","setAddressFromParamsThunk","redirectToAddress","CheckAddressStates","Invalid","Resolving","NetworkSelector","options","text","requiredNetworkId","networkEntry","find","Dropdown","as","data","setRequiredNetworkIdThunk","parseInt","WalletConfigModal","handleChangeWallet","handleChangeAddress","walletAddress","currentWallet","walletMsgIcon","currentAddress","msgs","Actions","WalletSelector","walletName","handleClick","gotWallet","buttonLabel","WalletSelectorContainer","showWalletConfig","setShowWalletConfig","walletAccount","accountSelect","MainMenu","Menu","fixed","inverted","Container","Link","to","padding","height","position","href","rel","ResponsiveApp","prevMobile","setPrevMobile","showSidebar","setShowSidebar","DesktopHeading","vertical","marginTop","marginBottom","fontSize","Sidebar","Pushable","animation","onHide","visible","Pusher","Responsive","Router","fireOnMount","onUpdate","isMobile","onlyMobile","setMobile","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","className","d","_ref5","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","stroke","strokeWidth","fill","fillRule","strokeLinecap","strokeLinejoin","transform","Footer","horizontal","avatar","GitcoinIcon","pkg","version","App","startButton","container","rootReducer","combineReducers","onboardReducer","addressesReducer","tokenContractReducer","allowancesReducer","balancesReducer","editAllowanceReducer","transactionTrackerReducer","responsiveLayoutReducer","customizedMiddleware","getDefaultMiddleware","serializableCheck","ignoredActions","setOnboardAPI","setWeb3Instance","setWallet","addContract","setAllowanceValue","addBalance","setBalanceValue","ignoredPaths","immutableCheck","warnAfter","store","configureStore","reducer","middleware","require","default","ReactDOM","render","getElementById","apiKeys","dfuse","1","endpoint","apikey","3","etherscan","infura","responsiveSlice","getDfuseClient","credentials","createDfuseClient","apiKey","network","createAndVerifyERC20","erc20Contract","at","balanceOf","topicHashApprove","eventABI","indexed","internalType","checkLogTopic","logEntry","topics","decodeLog","decoded","abi","slice","checkDecodedData","owner","expectedOwner","contract","defaultQueryStateByOwner","allowancesSlice","addAllowance","prepare","timestamp","buildAllowanceId","setQueryState","extraReducers","addAddress","addTransaction","transactionId","setNetworkId","getState","ERC20Data","setProvider","currentProvider","client","cursor","numPageResults","badContracts","knownContracts","knownSpenders","graphql","variables","limit","query","response","errors","edges","searchTransactions","edgeIndex","node","block","index","matchingLogs","addContractThunk","fetchEtherscanNameThunk","pageInfo","endCursor","JSON","stringify","ResolvingStates","zeroAddress","prevWalletAddressId","Initial","addressSlice","resolvingState","setResolvingState","setENSName","setCheckAddressId","setCheckAddressState","setWalletAddressId","setEtherscanContractName","apiHost","requestUrl","fetch","json","result","ContractName","resolveAndAddENSName","Promise","resolve","reject","resolveAndAddAddress","ResolvingReverse","reverseENSLookupName","resolver","ResolverContract","methods","namehash","hash","reverseENS","Resolved","replace","func","endsWith","known","values","addressEntry","Valid","setWalletAddressThunk","infuraCredentials","onboardCredentials","wallets","infuraKey","rpcUrl","appUrl","email","onboardSlice","setRequiredNetworkId","checkWallet","walletCheck","walletSelect","config","Onboard","dappId","hideBranding","subscriptions","provider","prevNetworkId","balance","heading","description","TransactionTrackerSlice","editAllowanceTransaction","updateTransaction","module","exports","webpackEmptyContext","req","code","wellKnownContracts","tokenContractSlice","uuidv4","approve","from","tx","balancesSlice","setBalanceQuerystate"],"mappings":"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","file":"static/js/main.ec3877a5.chunk.js","sourcesContent":["import { AllowanceId } from 'features/allowancesList/AllowancesListSlice'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface EditAllowanceState {\n    showModal: boolean\n    editAllowanceId: AllowanceId\n}\n\nconst initialState: EditAllowanceState = {\n    showModal: false,\n    editAllowanceId: '',\n}\n\nconst editAllowanceSlice = createSlice({\n    name: 'editAllowance',\n    initialState: initialState,\n    reducers: {\n        openEditAllowanceModal(state, action: PayloadAction<AllowanceId>) {\n            const allowanceId = action.payload\n            state.showModal = true\n            state.editAllowanceId = allowanceId\n        },\n        closeEditAllowanceModal(state) {\n            state.showModal = false\n        },\n    },\n})\nexport const {\n    openEditAllowanceModal,\n    closeEditAllowanceModal,\n} = editAllowanceSlice.actions\nexport default editAllowanceSlice.reducer\n","import React from 'react'\nimport { Icon, Popup, Item } from 'semantic-ui-react'\nimport { EthAddress } from 'features/addressInput/AddressSlice'\n\ninterface AddressDisplayProps {\n    ethAddress: EthAddress\n    mobile: boolean\n    networkId: number\n    inline?: boolean\n}\n\nconst AddressDisplay = ({\n    ethAddress,\n    mobile,\n    networkId,\n    inline,\n}: AddressDisplayProps) => {\n    const { address, ensName, esContractName } = ethAddress\n    const setClipboard = (content: string) => {\n        navigator.clipboard.writeText(content).then(\n            function() {\n                /* clipboard successfully set */\n            },\n            function() {\n                console.log(`failed to set clipboard`)\n            }\n        )\n    }\n\n    let contractName\n    if (ensName) {\n        contractName = `${ensName}`\n    } else if (esContractName) {\n        contractName = `${esContractName}`\n    }\n\n    let etherscanUrl: string\n    switch (networkId) {\n        case 3: // Ropsten\n            etherscanUrl = `https://ropsten.etherscan.io/address/${address}`\n            break\n        case 1:\n            etherscanUrl = `https://etherscan.io/address/${address}`\n            break\n        default:\n            etherscanUrl = `https://etherscan.io/address/${address}`\n    }\n\n    if (mobile) {\n        const shortAddress =\n            address.substr(0, 6) + '...' + address.substr(-6, 6)\n        const contractNameString = esContractName && (\n            <div>\n                Contract name: <strong>{esContractName}</strong>\n            </div>\n        )\n        const ensNameString = ensName && (\n            <div>\n                ENS name: <strong>{ensName}</strong>\n            </div>\n        )\n        const popupContent = (\n            <Item>\n                <Item.Content>\n                    <Item.Header>{address}</Item.Header>\n                    <Item.Content>\n                        {contractNameString}\n                        {ensNameString}\n                    </Item.Content>\n                    <Item.Extra>\n                        <Icon\n                            link\n                            circular\n                            name={'copy outline'}\n                            onClick={() => {\n                                setClipboard(address)\n                            }}\n                        />\n                        <Icon\n                            link\n                            circular\n                            name={'external square'}\n                            onClick={() => {\n                                window.open(etherscanUrl, '_blank')\n                            }}\n                        />\n                    </Item.Extra>\n                </Item.Content>\n            </Item>\n        )\n        let popupTrigger\n        if (inline) {\n            popupTrigger = <strong>{contractName ?? shortAddress}</strong>\n        } else {\n            popupTrigger = (\n                <div>\n                    <strong>{contractName ?? shortAddress}</strong>\n                </div>\n            )\n        }\n        return (\n            <Popup on={'click'} content={popupContent} trigger={popupTrigger} />\n        )\n    } else {\n        const copyPopup = (\n            <Popup\n                mouseEnterDelay={500}\n                content={'Copy to clipboard'}\n                trigger={\n                    <Icon\n                        circular\n                        name={'copy outline'}\n                        size={'small'}\n                        onClick={() => {\n                            setClipboard(address)\n                        }}\n                    />\n                }\n            />\n        )\n        const etherscanPopup = (\n            <Popup\n                mouseEnterDelay={500}\n                content={'View on Etherscan'}\n                trigger={\n                    <Icon\n                        circular\n                        name={'external square'}\n                        size={'small'}\n                        onClick={() => {\n                            window.open(etherscanUrl, '_blank')\n                        }}\n                    />\n                }\n            />\n        )\n\n        if (contractName) {\n            if (inline) {\n                return (\n                    <>\n                        <strong>{contractName}</strong> (\n                        <small>\n                            {address}&nbsp;\n                            {copyPopup}\n                            {etherscanPopup}\n                        </small>\n                        )\n                    </>\n                )\n            } else {\n                return (\n                    <>\n                        <div>\n                            <strong>{contractName}</strong>\n                        </div>\n                        <div>\n                            <small>\n                                {address}&nbsp;\n                                {copyPopup}\n                                {etherscanPopup}\n                            </small>\n                        </div>\n                    </>\n                )\n            }\n        } else {\n            if (inline) {\n                return (\n                    <span>\n                        {address}&nbsp;\n                        {copyPopup}\n                        {etherscanPopup}\n                    </span>\n                )\n            } else {\n                return (\n                    <div>\n                        {address}&nbsp;\n                        {copyPopup}\n                        {etherscanPopup}\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nexport default AddressDisplay\n","import { AllowanceId } from './AllowancesListSlice'\nimport React from 'react'\nimport { Button, Icon, Popup } from 'semantic-ui-react'\nimport { openEditAllowanceModal } from '../editAllowance/EditAllowanceSlice'\nimport { TransactionStates } from '../transactionTracker/TransactionTrackerSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../app/rootReducer'\n\ninterface TokenAllowanceItemActionsProps {\n    allowanceId: AllowanceId\n}\nconst TokenAllowanceItemActions = ({\n    allowanceId,\n}: TokenAllowanceItemActionsProps) => {\n    const dispatch = useDispatch()\n    const allowance = useSelector(\n        (state: RootState) => state.allowances.allowancesById[allowanceId]\n    )\n    const transaction = useSelector((state: RootState) =>\n        allowance.editTransactionId\n            ? state.transactions.transactionsById[allowance.editTransactionId]\n            : undefined\n    )\n    const walletAddressId = useSelector(\n        (state: RootState) => state.addresses.walletAddressId\n    )\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault()\n        dispatch(openEditAllowanceModal(allowanceId))\n    }\n\n    let transactionContent\n    if (transaction) {\n        let icon\n        let msg\n        let header\n        switch (transaction.transactionState) {\n            case TransactionStates.CONFIRMED:\n                icon = <Icon name={'check'} size={'large'} />\n                header = 'Transaction confirmed'\n                msg = `Transaction hash: ${transaction.transactionHash}`\n                break\n            case TransactionStates.FAILED:\n                icon = (\n                    <Icon\n                        name={'exclamation triangle'}\n                        color={'red'}\n                        size={'large'}\n                    />\n                )\n                header = 'Transaction failed'\n                msg = `${transaction.error}`\n                break\n            case TransactionStates.SUBMITTED:\n                icon = <Icon name={'spinner'} loading size={'large'} />\n                header = 'Transaction created'\n                msg = `Waiting for confirmation...`\n                break\n            case TransactionStates.INITIAL:\n            default:\n                icon = <Icon name={'question'} size={'large'} />\n                header = 'Transaction unknown'\n                msg = 'Tx state INITIAL'\n        }\n        transactionContent = (\n            <Popup header={header} content={msg} trigger={icon} />\n        )\n    }\n    let actionContent\n    if (transaction?.transactionState !== TransactionStates.SUBMITTED) {\n        const editEnabled = allowance.ownerId === walletAddressId\n        actionContent = (\n            <Popup\n                content={\n                    editEnabled\n                        ? 'edit allowance'\n                        : 'Only address owner can edit allowance'\n                }\n                trigger={\n                    <span>\n                        <Button\n                            icon={'edit'}\n                            size={'small'}\n                            compact\n                            primary\n                            disabled={!editEnabled}\n                            onClick={handleClick}\n                        />\n                    </span>\n                }\n            />\n        )\n    }\n\n    return (\n        <>\n            {actionContent}&nbsp;{transactionContent}\n        </>\n    )\n}\n\nexport default TokenAllowanceItemActions\n","import React, { useEffect } from 'react'\nimport {\n    AllowanceId,\n    fetchAllowanceValueThunk,\n    QueryStates,\n} from './AllowancesListSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from 'app/rootReducer'\nimport { Divider, Loader, Table } from 'semantic-ui-react'\nimport AddressDisplay from 'components/AddressDisplay'\nimport bnToDisplayString from '@triplespeeder/bn2string'\nimport BN from 'bn.js'\nimport TokenAllowanceItemActions from './TokenAllowanceItemActions'\n\ninterface TokenAllowanceItemProps {\n    allowanceId: AllowanceId\n}\n\nconst unlimitedAllowance = new BN(2).pow(new BN(256)).subn(1)\n\nconst TokenAllowanceItem = ({ allowanceId }: TokenAllowanceItemProps) => {\n    const dispatch = useDispatch()\n    const allowance = useSelector(\n        (state: RootState) => state.allowances.allowancesById[allowanceId]\n    )\n    const allowanceValue = useSelector(\n        (state: RootState) => state.allowances.allowanceValuesById[allowanceId]\n    )\n    const tokenContract = useSelector(\n        (state: RootState) =>\n            state.tokenContracts.contractsById[allowance.tokenContractId]\n    )\n    const spenderAddress = useSelector(\n        (state: RootState) => state.addresses.addressesById[allowance.spenderId]\n    )\n    const { mobile } = useSelector((state: RootState) => state.respsonsive)\n    const { networkId } = useSelector((state: RootState) => state.onboard)\n\n    // lazy-load allowance value\n    useEffect(() => {\n        if (allowanceValue.state === QueryStates.QUERY_STATE_INITIAL) {\n            dispatch(fetchAllowanceValueThunk(allowanceId))\n        }\n    }, [allowanceValue, allowanceId, dispatch])\n\n    let allowanceElement, criticalAllowance, positiveAllowance\n    switch (allowanceValue.state) {\n        case QueryStates.QUERY_STATE_RUNNING:\n            allowanceElement = <Loader active inline size={'mini'} />\n            break\n        case QueryStates.QUERY_STATE_COMPLETE:\n            positiveAllowance = allowanceValue.value.isZero()\n            criticalAllowance =\n                allowanceValue.value.eq(unlimitedAllowance) ||\n                allowanceValue.value.gte(tokenContract.totalSupply)\n            if (criticalAllowance) {\n                allowanceElement = <em>unlimited</em>\n            } else {\n                const roundToDecimals = new BN('2')\n                const { /*precise,*/ rounded } = bnToDisplayString({\n                    value: allowanceValue.value,\n                    decimals: tokenContract.decimals,\n                    roundToDecimals,\n                })\n                allowanceElement = <span>{rounded}</span>\n            }\n            break\n        case QueryStates.QUERY_STATE_ERROR:\n            allowanceElement = <span>error</span>\n            break\n        case QueryStates.QUERY_STATE_INITIAL:\n        default:\n            allowanceElement = ''\n    }\n\n    const lastChangeString = new Date(\n        allowance.lastChangedTimestamp\n    ).toDateString()\n\n    const addressCell = (\n        <Table.Cell>\n            <AddressDisplay\n                ethAddress={spenderAddress}\n                networkId={networkId}\n                mobile={mobile}\n            />\n        </Table.Cell>\n    )\n\n    let allowanceCell\n    let lastChangeCell\n    if (mobile) {\n        allowanceCell = (\n            <Table.Cell\n                negative={criticalAllowance}\n                positive={positiveAllowance}\n                textAlign={'right'}\n            >\n                {allowanceElement}\n                <Divider fitted />\n                <small>{lastChangeString}</small>\n            </Table.Cell>\n        )\n        lastChangeCell = null\n    } else {\n        allowanceCell = (\n            <Table.Cell\n                negative={criticalAllowance}\n                positive={positiveAllowance}\n                textAlign={'right'}\n            >\n                {allowanceElement}\n            </Table.Cell>\n        )\n        lastChangeCell = <Table.Cell collapsing>{lastChangeString}</Table.Cell>\n    }\n\n    const actionCell = (\n        <Table.Cell collapsing>\n            <TokenAllowanceItemActions allowanceId={allowanceId} />\n        </Table.Cell>\n    )\n\n    return (\n        <Table.Row key={`${allowanceId}`}>\n            {addressCell}\n            {allowanceCell}\n            {lastChangeCell}\n            {actionCell}\n        </Table.Row>\n    )\n}\n\nexport default TokenAllowanceItem\n","import Web3 from 'web3'\n\n/*\n * See https://github.com/trustwallet/assets for more info on assets\n */\nconst buildTokenLogoUrl = (contractAddress: string) => {\n    const host = 'https://raw.githubusercontent.com'\n    const path = `/trustwallet/assets/master/blockchains/ethereum/assets/${Web3.utils.toChecksumAddress(\n        contractAddress\n    )}/logo.png`\n    return `${host}${path}`\n}\n\nexport default buildTokenLogoUrl\n","import React, { useEffect, useState } from 'react'\nimport {\n    Header,\n    Segment,\n    Table,\n    Placeholder,\n    Icon,\n    Divider,\n    Image,\n} from 'semantic-ui-react'\nimport AddressDisplay from '../../components/AddressDisplay'\nimport BN from 'bn.js'\nimport { AddressId } from '../addressInput/AddressSlice'\nimport { AllowanceId, QueryStates } from './AllowancesListSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from 'app/rootReducer'\nimport TokenAllowanceItem from './TokenAllowanceItem'\nimport { addBalanceThunk, buildBalanceId } from '../balances/BalancesSlice'\nimport bn2DisplayString from '@triplespeeder/bn2string'\nimport buildTokenLogoUrl from '../../utils/tokenMeta'\n\ninterface TokenAllowanceItemProps {\n    tokenId: AddressId\n    ownerId: AddressId\n    allowanceIds: Array<AllowanceId>\n}\n\nconst TokenAllowancesItem = ({\n    tokenId,\n    ownerId,\n    allowanceIds,\n}: TokenAllowanceItemProps) => {\n    const dispatch = useDispatch()\n    const { mobile } = useSelector((state: RootState) => state.respsonsive)\n    const { networkId } = useSelector((state: RootState) => state.onboard)\n    const tokenContract = useSelector(\n        (state: RootState) => state.tokenContracts.contractsById[tokenId]\n    )\n    const tokenAddress = useSelector(\n        (state: RootState) => state.addresses.addressesById[tokenId]\n    )\n    const ownerBalance = useSelector((state: RootState) => {\n        const balanceId = buildBalanceId(ownerId, tokenId)\n        return state.balances.balancesById[balanceId]\n    })\n    const [collapsed, setCollapsed] = useState(true)\n    const [tokenLogoUrl, setTokenLogoUrl] = useState<string | undefined>(\n        undefined\n    )\n\n    // lazy-load owner balance when contract instance is available\n    useEffect(() => {\n        if (!ownerBalance && tokenContract?.contractInstance) {\n            dispatch(addBalanceThunk(ownerId, tokenId))\n        }\n    }, [ownerBalance, ownerId, tokenId, tokenContract, dispatch])\n\n    useEffect(() => {\n        if (tokenAddress) {\n            setTokenLogoUrl(buildTokenLogoUrl(tokenAddress.address))\n        }\n    }, [tokenAddress])\n\n    const toggleCollapse = () => {\n        setCollapsed(!collapsed)\n    }\n\n    // return placeholder if contract is not yet loaded\n    if (!tokenContract) {\n        return (\n            <Segment raised>\n                <Placeholder>\n                    <Placeholder.Header>\n                        <Placeholder.Line />\n                    </Placeholder.Header>\n                    <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                </Placeholder>\n            </Segment>\n        )\n    }\n\n    let tokenName = tokenContract.name\n    if (tokenName === '') {\n        tokenName = `Unnamed ERC20`\n    }\n\n    const roundToDecimals = new BN(2)\n    let tokenBalance\n    if (\n        !ownerBalance ||\n        ownerBalance.queryState === QueryStates.QUERY_STATE_RUNNING\n    ) {\n        tokenBalance = '(loading...)'\n    } else {\n        const { rounded } = bn2DisplayString({\n            value: ownerBalance.value,\n            decimals: tokenContract.decimals,\n            roundToDecimals,\n        })\n        tokenBalance = `(${rounded} ${tokenContract.symbol})`\n    }\n\n    // populate rows with one entry per allowance from allowanceIds\n    const rows: Array<React.ReactNode> = []\n    allowanceIds.forEach((allowanceId) => {\n        rows.push(\n            <TokenAllowanceItem key={allowanceId} allowanceId={allowanceId} />\n        )\n    })\n\n    // Set fallback token log image url\n    const onTokenLogoError = () => {\n        setTokenLogoUrl('/icon_noText.png')\n    }\n\n    const logoImage = <Image src={tokenLogoUrl} onError={onTokenLogoError} />\n\n    if (mobile) {\n        let table\n        if (!collapsed) {\n            table = (\n                <Table basic={'very'} celled unstackable compact size={'small'}>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Spender</Table.HeaderCell>\n                            <Table.HeaderCell\n                                textAlign={'center'}\n                                style={{ paddingBottom: 0 }}\n                            >\n                                Allowance\n                                <Divider fitted />\n                                <small>Last modified</small>\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>Action</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>{rows}</Table.Body>\n                </Table>\n            )\n        }\n        const toggleButton = (\n            <Icon\n                style={{ float: 'right' }}\n                name={collapsed ? 'chevron down' : 'chevron up'}\n                size={'mini'}\n                onClick={toggleCollapse}\n            />\n        )\n        return (\n            <Segment raised>\n                <Header size={'small'}>\n                    {toggleButton}\n                    {logoImage}\n                    <Header.Content style={{ maxWidth: '75%' }}>\n                        {tokenName} {tokenBalance}\n                        <Header.Subheader>\n                            <AddressDisplay\n                                ethAddress={tokenAddress}\n                                mobile={mobile}\n                                networkId={networkId}\n                            />\n                        </Header.Subheader>\n                    </Header.Content>\n                </Header>\n                {table}\n            </Segment>\n        )\n    } else {\n        return (\n            <Segment raised>\n                <Header size={'medium'}>\n                    {logoImage}\n                    <Header.Content>\n                        {tokenName} {tokenBalance}\n                        <Header.Subheader>\n                            <AddressDisplay\n                                ethAddress={tokenAddress}\n                                mobile={mobile}\n                                networkId={networkId}\n                            />\n                        </Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Table basic={'very'} celled selectable>\n                    <Table.Header>\n                        <Table.Row textAlign={'center'}>\n                            <Table.HeaderCell>Spender</Table.HeaderCell>\n                            <Table.HeaderCell textAlign={'center'}>\n                                Allowance\n                            </Table.HeaderCell>\n                            <Table.HeaderCell textAlign={'center'}>\n                                Last Change\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>Action</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>{rows}</Table.Body>\n                </Table>\n            </Segment>\n        )\n    }\n}\n\nexport default TokenAllowancesItem\n","import React from 'react'\nimport { Message, Segment } from 'semantic-ui-react'\n\ninterface DisplayMessageProps {\n    mobile: boolean\n    info?: boolean\n    warning?: boolean\n    error?: boolean\n    success?: boolean\n    icon?: React.ReactNode\n    header?: string\n    body: React.ReactNode | string\n}\n\nconst DisplayMessage = ({\n    mobile,\n    info,\n    warning,\n    error,\n    success,\n    icon,\n    header,\n    body,\n}: DisplayMessageProps) => {\n    const desktop = !mobile\n    const padded = desktop && 'very'\n    const withIcon = icon ? true : false\n    const size = mobile ? 'small' : 'huge'\n    const textAlign = mobile ? 'left' : 'center'\n\n    return (\n        <Segment basic padded={padded} textAlign={textAlign}>\n            <Message\n                warning={warning}\n                info={info}\n                error={error}\n                success={success}\n                icon={withIcon}\n                size={size}\n            >\n                {withIcon && icon}\n                <Message.Content>\n                    <Message.Header>{header}</Message.Header>\n                    {body}\n                </Message.Content>\n            </Message>\n        </Segment>\n    )\n}\n\nexport default DisplayMessage\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport _ from 'lodash'\nimport { RootState } from '../../app/rootReducer'\nimport TokenAllowancesItem from './TokenAllowancesItem'\nimport { QueryStates } from './AllowancesListSlice'\nimport { Icon } from 'semantic-ui-react'\nimport { AddressId } from '../addressInput/AddressSlice'\nimport DisplayMessage from '../../components/DisplayMessage'\nimport AddressDisplay from '../../components/AddressDisplay'\n\ninterface AllowancesListContainerProps {\n    ownerId: AddressId\n    showZeroAllowances: boolean\n    addressFilter: string\n}\n\nconst AllowancesListContainer = ({\n    ownerId,\n    showZeroAllowances,\n    addressFilter,\n}: AllowancesListContainerProps) => {\n    const allowancesByTokenId = useSelector((state: RootState) => {\n        let allowanceIds\n        if (showZeroAllowances && addressFilter === '') {\n            // no filter required, just return all IDs.\n            allowanceIds = state.allowances.allowanceIdsByOwnerId[ownerId]\n        } else {\n            // apply filter\n            allowanceIds = state.allowances.allowanceIdsByOwnerId[\n                ownerId\n            ].filter((allowanceId) => {\n                const allowance = state.allowances.allowancesById[allowanceId]\n                if (!showZeroAllowances) {\n                    const allowanceValue =\n                        state.allowances.allowanceValuesById[allowanceId]\n                    const isZeroAllowance =\n                        allowanceValue.state ===\n                            QueryStates.QUERY_STATE_COMPLETE &&\n                        allowanceValue.value.isZero()\n                    if (isZeroAllowance) {\n                        return false\n                    }\n                }\n                if (addressFilter) {\n                    const filterString = addressFilter.toLowerCase()\n                    const tokenContract =\n                        state.tokenContracts.contractsById[\n                            allowance.tokenContractId\n                        ]\n                    if (tokenContract) {\n                        const tokenContractAddress =\n                            state.addresses.addressesById[\n                                tokenContract.addressId\n                            ]\n                        const matchedFilter =\n                            tokenContract.name\n                                .toLowerCase()\n                                .includes(filterString) ||\n                            tokenContract.symbol\n                                .toLowerCase()\n                                .includes(filterString) ||\n                            tokenContractAddress.address\n                                .toLowerCase()\n                                .includes(filterString) ||\n                            tokenContractAddress.ensName\n                                ?.toLowerCase()\n                                .includes(filterString)\n                        if (!matchedFilter) {\n                            return false\n                        }\n                    } else {\n                        console.warn(\n                            `No tokencontract for ${allowance.tokenContractId}`\n                        )\n                    }\n                }\n                return true\n            })\n        }\n\n        // get allowances by their Id\n        const allowances = allowanceIds?.map(\n            (allowanceId) => state.allowances.allowancesById[allowanceId]\n        )\n\n        // group allowances by tokenID\n        const groupedAllowances = _.groupBy(allowances, 'tokenContractId')\n\n        // sort grouped allowances by token name\n        // Result: An array of an Array of Allowances\n        return _.sortBy(groupedAllowances, [\n            function (allowanceArray) {\n                const tokenContract =\n                    state.tokenContracts.contractsById[\n                        allowanceArray[0].tokenContractId\n                    ]\n                return tokenContract?.name ?? 'Z' // return 'Z' so tokens which name is still unknown appear at end\n            },\n        ])\n    })\n    const queryState = useSelector(\n        (state: RootState) =>\n            state.allowances.allowanceQueryStateByOwner[ownerId]\n    )\n    const ownerAddress = useSelector(\n        (state: RootState) => state.addresses.addressesById[ownerId]\n    )\n    const mobile = useSelector((state: RootState) => state.respsonsive.mobile)\n    const networkId = useSelector((state: RootState) => state.onboard.networkId)\n\n    if (!queryState) {\n        console.log(`No querystate available for ${ownerId}`)\n        return null\n    }\n\n    let message\n    const items: Array<React.ReactNode> = []\n    for (const tokenAllowances of allowancesByTokenId) {\n        const tokenId = tokenAllowances[0].tokenContractId\n        const allowanceIds = tokenAllowances.map((allowance) => allowance.id)\n        items.push(\n            <TokenAllowancesItem\n                key={tokenId}\n                tokenId={tokenId}\n                ownerId={ownerId}\n                allowanceIds={allowanceIds}\n            />\n        )\n    }\n\n    switch (queryState.state) {\n        case QueryStates.QUERY_STATE_RUNNING:\n            message = (\n                <DisplayMessage\n                    mobile={mobile}\n                    header={'Loading events'}\n                    body={`Querying dfuse API for ERC20 Approvals, getting page ${\n                        queryState.currentPage + 1\n                    }...`}\n                    warning={true}\n                    icon={<Icon name='circle notched' loading />}\n                />\n            )\n            break\n        case QueryStates.QUERY_STATE_ERROR:\n            message = (\n                <DisplayMessage\n                    mobile={mobile}\n                    error={true}\n                    header={'Error'}\n                    icon={<Icon name='exclamation triangle' />}\n                    body={queryState.error}\n                />\n            )\n            break\n        case QueryStates.QUERY_STATE_COMPLETE:\n            if (items.length === 0) {\n                const body = (\n                    <>\n                        <AddressDisplay\n                            ethAddress={ownerAddress}\n                            mobile={mobile}\n                            networkId={networkId}\n                            inline={true}\n                        />{' '}\n                        has no approvals.\n                    </>\n                )\n                message = (\n                    <DisplayMessage\n                        mobile={mobile}\n                        success={true}\n                        icon={<Icon name='info' />}\n                        header={'No Approvals'}\n                        body={body}\n                    />\n                )\n            }\n            break\n        case QueryStates.QUERY_STATE_INITIAL:\n        default:\n            return <div>Unhandled state!</div>\n    }\n\n    return (\n        <>\n            {message}\n            {items}\n        </>\n    )\n}\n\nexport default AllowancesListContainer\n","import React from 'react'\nimport {\n    Checkbox,\n    Grid,\n    Icon,\n    Input,\n    Button,\n    ButtonProps,\n} from 'semantic-ui-react'\nimport { InputOnChangeData } from 'semantic-ui-react/dist/commonjs/elements/Input/Input'\nimport { CheckboxProps } from 'semantic-ui-react/dist/commonjs/modules/Checkbox/Checkbox'\n\ninterface AllowancesListFilterProps {\n    addressFilterValue: string\n    showZeroAllowances: boolean\n    mobile: boolean\n    toggleShowZeroAllowances: (\n        event: React.FormEvent<HTMLInputElement>,\n        data: CheckboxProps\n    ) => void\n    handleAddressFilterChange: (\n        event: React.ChangeEvent<HTMLInputElement>,\n        data: InputOnChangeData\n    ) => void\n    clearAddressFilter: (input: void) => void\n    refresh: (event: React.MouseEvent, data: ButtonProps) => void\n}\n\nconst AllowancesListFilter = ({\n    showZeroAllowances,\n    toggleShowZeroAllowances,\n    addressFilterValue,\n    handleAddressFilterChange,\n    refresh,\n    clearAddressFilter,\n    mobile,\n}: AllowancesListFilterProps) => {\n    if (mobile) {\n        return (\n            <Grid\n                verticalAlign='middle'\n                centered\n                textAlign={'center'}\n                columns={2}\n                divided\n            >\n                <Grid.Row>\n                    <Grid.Column width={13}>\n                        <Checkbox\n                            toggle\n                            label='Include zero allowances'\n                            checked={showZeroAllowances}\n                            onChange={toggleShowZeroAllowances}\n                        />\n                    </Grid.Column>\n                    <Grid.Column width={3}>\n                        <Button\n                            circular\n                            icon={'refresh'}\n                            onClick={refresh}\n                            title={'Refresh allowances'}\n                            size={'small'}\n                            compact\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        <Input\n                            name='filter'\n                            placeholder='Filter by name, symbol or address'\n                            onChange={handleAddressFilterChange}\n                            value={addressFilterValue}\n                            icon={\n                                <Icon\n                                    name='eraser'\n                                    circular\n                                    link\n                                    onClick={clearAddressFilter}\n                                />\n                            }\n                            fluid\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    } else {\n        return (\n            <Grid\n                verticalAlign='middle'\n                centered\n                textAlign={'center'}\n                columns={3}\n                divided\n                stackable\n            >\n                <Grid.Row>\n                    <Grid.Column width={9}>\n                        <Input\n                            label='Tokenfilter'\n                            name='filter'\n                            placeholder='Enter name, symbol or contract address'\n                            onChange={handleAddressFilterChange}\n                            value={addressFilterValue}\n                            icon={\n                                <Icon\n                                    name='eraser'\n                                    circular\n                                    link\n                                    onClick={clearAddressFilter}\n                                />\n                            }\n                            fluid\n                        />\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <Checkbox\n                            toggle\n                            label='Include zero allowances'\n                            checked={showZeroAllowances}\n                            onChange={toggleShowZeroAllowances}\n                        />\n                    </Grid.Column>\n                    <Grid.Column width={1}>\n                        <Button\n                            circular\n                            icon={'refresh'}\n                            onClick={refresh}\n                            title={'Refresh allowances'}\n                            size={'small'}\n                            compact\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n\nexport default AllowancesListFilter\n","import React from 'react'\nimport { Form, Grid, Header, Input, Message, Modal } from 'semantic-ui-react'\nimport AddressDisplay from '../../components/AddressDisplay'\nimport { EthAddress } from '../addressInput/AddressSlice'\n\ninterface EditAllowanceFormProps {\n    mobile: boolean\n    tokenName: string\n    tokenSymbol: string\n    tokenAddress: string\n    spender: EthAddress\n    currentAllowance: string\n    newAllowance: string\n    handleChange: (e: React.FormEvent<EventTarget>) => void\n    handleClose: () => void\n    handleSubmit: () => void\n}\n\nconst EditAllowanceForm = ({\n    mobile,\n    tokenName,\n    handleChange,\n    tokenSymbol,\n    spender,\n    currentAllowance,\n    newAllowance,\n    handleClose,\n    handleSubmit,\n}: EditAllowanceFormProps) => {\n    const size = mobile ? 'small' : 'huge'\n    const spenderAddressDisplay = (\n        <AddressDisplay\n            ethAddress={spender}\n            mobile={mobile}\n            networkId={1}\n            inline={true}\n        />\n    )\n    let inputElem\n    if (mobile) {\n        inputElem = (\n            <>\n                <label>New Allowance</label>\n                <Input\n                    placeholder='Enter amount'\n                    type={'number'}\n                    name={'newAllowance'}\n                    onChange={handleChange}\n                    value={newAllowance}\n                    fluid={true}\n                />\n            </>\n        )\n    } else {\n        inputElem = (\n            <Input\n                label={{\n                    tag: true,\n                    content: 'Enter new allowance',\n                }}\n                labelPosition='right'\n                placeholder='Enter amount'\n                type={'number'}\n                name={'newAllowance'}\n                onChange={handleChange}\n                value={newAllowance}\n            />\n        )\n    }\n    return (\n        <Modal open={true} size={'small'} onClose={handleClose}>\n            <Header>Edit Allowance</Header>\n            <Modal.Content>\n                <Message size={size}>\n                    <Message.List>\n                        <Message.Item>\n                            Token: <strong>{tokenName}</strong>\n                        </Message.Item>\n                        <Message.Item>\n                            Spender: {spenderAddressDisplay}\n                        </Message.Item>\n                        <Message.Item>\n                            Current allowance:{' '}\n                            <strong>\n                                {currentAllowance} {tokenSymbol}\n                            </strong>\n                        </Message.Item>\n                    </Message.List>\n                </Message>\n                <Form size={'size'} onSubmit={handleSubmit}>\n                    <Form.Field required>{inputElem}</Form.Field>\n                    <Grid columns={2}>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Form.Button\n                                    type={'button'}\n                                    fluid\n                                    size={size}\n                                    negative\n                                    onClick={handleClose}\n                                >\n                                    Cancel\n                                </Form.Button>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Form.Button\n                                    type={'submit'}\n                                    fluid\n                                    size={size}\n                                    positive\n                                >\n                                    Set allowance\n                                </Form.Button>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Form>\n            </Modal.Content>\n        </Modal>\n    )\n}\n\nexport default EditAllowanceForm\n","import React, { useCallback, useState } from 'react'\nimport bnToDisplayString from '@triplespeeder/bn2string'\nimport { toBaseUnit } from '../../utils/erc20-decimals-conversion'\nimport EditAllowanceForm from './EditAllowanceForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from 'app/rootReducer'\nimport BN from 'bn.js'\nimport { closeEditAllowanceModal } from './EditAllowanceSlice'\nimport { setAllowanceThunk } from '../tokenContracts/tokenContractsSlice'\n\nconst EditAllowanceFormContainer = () => {\n    const dispatch = useDispatch()\n    const allowance = useSelector(\n        (state: RootState) =>\n            state.allowances.allowancesById[state.editAllowance.editAllowanceId]\n    )\n    const allowanceValue = useSelector(\n        (state: RootState) =>\n            state.allowances.allowanceValuesById[\n                state.editAllowance.editAllowanceId\n            ]\n    )\n    const tokenContract = useSelector(\n        (state: RootState) =>\n            state.tokenContracts.contractsById[allowance.tokenContractId]\n    )\n    const spender = useSelector(\n        (state: RootState) => state.addresses.addressesById[allowance.spenderId]\n    )\n    const mobile = useSelector((state: RootState) => state.respsonsive.mobile)\n    const [newAllowance, setNewAllowance] = useState('0')\n\n    const convertAllowanceToDisplaystring = useCallback(() => {\n        if (allowanceValue.value.gte(tokenContract.totalSupply)) {\n            return 'unlimited'\n        } else {\n            const allowanceDisplay = bnToDisplayString({\n                value: allowanceValue.value,\n                decimals: tokenContract.decimals,\n                roundToDecimals: new BN(2),\n            })\n            return allowanceDisplay.rounded\n        }\n    }, [\n        allowanceValue.value,\n        tokenContract.totalSupply,\n        tokenContract.decimals,\n    ])\n\n    const handleAllowanceInputChange = (e: React.FormEvent<EventTarget>) => {\n        let { value } = e.target as HTMLInputElement\n        // console.log(`handleChange: ${value}`)\n        if (parseFloat(value) < 0) {\n            value = '0'\n        }\n        setNewAllowance(value)\n    }\n\n    const handleClose = () => {\n        dispatch(closeEditAllowanceModal())\n    }\n\n    const handleSubmit = () => {\n        console.log(`Submitted new allowance: ${newAllowance}`)\n        // convert 'newAllowance' number to token baseunit\n        const newValue = toBaseUnit(newAllowance, tokenContract.decimals)\n        dispatch(closeEditAllowanceModal())\n        dispatch(\n            setAllowanceThunk(\n                tokenContract.addressId,\n                spender.address,\n                newValue,\n                allowance.id\n            )\n        )\n    }\n\n    const tokenName =\n        tokenContract.name !== '' ? tokenContract.name : 'Unnamed ERC20'\n\n    return (\n        <EditAllowanceForm\n            mobile={mobile}\n            newAllowance={newAllowance}\n            currentAllowance={convertAllowanceToDisplaystring()}\n            tokenAddress={tokenContract.addressId}\n            handleClose={handleClose}\n            spender={spender}\n            tokenName={tokenName}\n            handleChange={handleAllowanceInputChange}\n            handleSubmit={handleSubmit}\n            tokenSymbol={tokenContract.symbol}\n        />\n    )\n}\n\nexport default EditAllowanceFormContainer\n","import BN from 'bn.js'\n\nexport function toBaseUnit(value: string, decimals: BN) {\n    const ten = new BN(10)\n    const base = ten.pow(decimals)\n\n    // Is it negative?\n    const negative = value.substring(0, 1) === '-'\n    if (negative) {\n        value = value.substring(1)\n    }\n\n    if (value === '.') {\n        throw new Error(\n            `Invalid value ${value} cannot be converted to` +\n                ` base unit with ${decimals.toString()} decimals.`\n        )\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split('.')\n    if (comps.length > 2) {\n        throw new Error('Too many decimal points')\n    }\n    let whole = comps[0]\n    let fraction = comps[1]\n\n    if (!whole) {\n        whole = '0'\n    }\n    if (!fraction) {\n        fraction = ''\n    }\n    const decimalsNumber = decimals.toNumber()\n    if (fraction.length > decimalsNumber) {\n        throw new Error('Too many decimal places')\n    }\n\n    while (fraction.length < decimalsNumber) {\n        fraction += '0'\n    }\n\n    const wholeBN = new BN(whole)\n    const fractionBN = new BN(fraction)\n    let wei = wholeBN.mul(base).add(fractionBN)\n\n    if (negative) {\n        wei = wei.neg()\n    }\n\n    return new BN(wei.toString(10), 10)\n}\n","import React, { useEffect, useState } from 'react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Divider, Segment } from 'semantic-ui-react'\nimport AllowancesListContainer from './AllowancesListContainer'\nimport AllowancesListFilter from '../allowancesListFilter/AllowancesListFilter'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../app/rootReducer'\nimport { fetchAllowancesThunk, QueryStates } from './AllowancesListSlice'\nimport EditAllowanceFormContainer from '../editAllowance/EditAllowanceFormContainer'\n\nconst AllowanceLister = () => {\n    const dispatch = useDispatch()\n    const { mobile } = useSelector((state: RootState) => state.respsonsive)\n    const address = useSelector((state: RootState) => {\n        if (state.addresses.checkAddressId) {\n            return state.addresses.addressesById[state.addresses.checkAddressId]\n        } else {\n            return undefined\n        }\n    })\n    const queryState = useSelector((state: RootState) => {\n        if (address)\n            return state.allowances.allowanceQueryStateByOwner[address.address]\n        else return undefined\n    })\n    const showEditAllowanceModal = useSelector(\n        (state: RootState) => state.editAllowance.showModal\n    )\n\n    const [showZeroAllowances, setShowZeroAllowances] = useState(true)\n    const [addressFilter, setAddressFilter] = useState('')\n\n    const toggleShowZeroAllowances = () => {\n        setShowZeroAllowances(!showZeroAllowances)\n    }\n\n    const clearAddressFilter = () => {\n        setAddressFilter('')\n    }\n\n    const handleAddressFilterChange = (e: React.FormEvent<EventTarget>) => {\n        const { value } = e.target as HTMLInputElement\n        setAddressFilter(value)\n    }\n\n    useEffect(() => {\n        document.title = `TAC - ${address?.ensName ?? address?.address ?? ''}`\n    }, [address])\n\n    useEffect(() => {\n        if (\n            queryState &&\n            queryState.state === QueryStates.QUERY_STATE_INITIAL\n        ) {\n            if (address) dispatch(fetchAllowancesThunk(address.address))\n        }\n    }, [queryState, dispatch, address])\n\n    const loadAllowances = () => {\n        if (address) {\n            console.log(\n                `Starting query for \"${address?.ensName ?? address?.address}\"`\n            )\n            dispatch(fetchAllowancesThunk(address.address))\n        }\n    }\n\n    const handleRefreshClick = () => {\n        loadAllowances()\n    }\n\n    if (!address) {\n        return <div>No address set</div>\n    }\n\n    if (mobile) {\n        return (\n            <>\n                <Divider />\n                <AllowancesListFilter\n                    showZeroAllowances={showZeroAllowances}\n                    toggleShowZeroAllowances={toggleShowZeroAllowances}\n                    addressFilterValue={addressFilter}\n                    handleAddressFilterChange={handleAddressFilterChange}\n                    clearAddressFilter={clearAddressFilter}\n                    refresh={handleRefreshClick}\n                    mobile={mobile}\n                />\n                <Divider />\n                <AllowancesListContainer\n                    ownerId={address.address}\n                    showZeroAllowances={showZeroAllowances}\n                    addressFilter={addressFilter}\n                />\n                {showEditAllowanceModal && <EditAllowanceFormContainer />}\n            </>\n        )\n    } else {\n        return (\n            <React.Fragment>\n                <Segment basic>\n                    <h2>\n                        Allowances of {address?.ensName ?? address?.address}:\n                    </h2>\n                </Segment>\n                <AllowancesListFilter\n                    showZeroAllowances={showZeroAllowances}\n                    toggleShowZeroAllowances={toggleShowZeroAllowances}\n                    addressFilterValue={addressFilter}\n                    handleAddressFilterChange={handleAddressFilterChange}\n                    clearAddressFilter={clearAddressFilter}\n                    refresh={handleRefreshClick}\n                    mobile={mobile}\n                />\n                <AllowancesListContainer\n                    ownerId={address.address}\n                    showZeroAllowances={showZeroAllowances}\n                    addressFilter={addressFilter}\n                />\n                {showEditAllowanceModal && <EditAllowanceFormContainer />}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default AllowanceLister\n","import React, { useEffect } from 'react'\nimport { Icon } from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../app/rootReducer'\nimport { initialize, selectWallet } from './onboardSlice'\nimport DisplayMessage from '../../components/DisplayMessage'\n\ninterface OnboardGateProps {\n    children?: React.ReactNode\n}\nconst OnboardGate = ({ children }: OnboardGateProps) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const { onboardAPI, wallet } = useSelector(\n        (state: RootState) => state.onboard\n    )\n    const mobile = useSelector((state: RootState) => state.respsonsive.mobile)\n\n    useEffect(() => {\n        if (!onboardAPI) {\n            console.log(`OnboardGate: Dispatching initialize()`)\n            dispatch(initialize(history))\n        } else if (!wallet) {\n            console.log(`OnboardGate: Dispatching selectWallet`)\n            dispatch(selectWallet(history))\n        }\n    }, [onboardAPI, wallet, dispatch, history])\n\n    if (wallet) {\n        return <React.Fragment>{children}</React.Fragment>\n    } else {\n        return (\n            <DisplayMessage\n                mobile={mobile}\n                header={'Waiting for wallet'}\n                body={'Please complete wallet selection'}\n                icon={<Icon name='spinner' loading />}\n                info={true}\n            />\n        )\n    }\n}\n\nexport default OnboardGate\n","import React from 'react'\nimport { Form, Input } from 'semantic-ui-react'\n\ninterface AddressInputProps {\n    value: string\n    loading: boolean\n    error: boolean\n    success: boolean\n    handleInput: (input: string) => void\n    mobile: boolean\n}\n\nconst AddressInput = ({\n    handleInput,\n    loading,\n    error,\n    value,\n    success,\n    mobile,\n}: AddressInputProps) => {\n    const handleChange = (e: React.FormEvent<EventTarget>) => {\n        const { value } = e.target as HTMLInputElement\n        handleInput(value)\n    }\n\n    if (mobile) {\n        return (\n            <Form.Field error={error}>\n                <label>Enter address/ENS name or change wallet address</label>\n                <input\n                    onChange={handleChange}\n                    placeholder='Eth address or ENS name'\n                    value={value}\n                />\n            </Form.Field>\n        )\n    } else {\n        return (\n            <Form.Field inline width={14}>\n                <Input\n                    placeholder='Address or ENS Name'\n                    error={error}\n                    loading={loading}\n                    onChange={handleChange}\n                    value={value}\n                    type={'text'}\n                    action={{\n                        type: 'Submit',\n                        disabled: !success,\n                        content: 'Go!',\n                        positive: true,\n                    }}\n                    label={'Enter address/ENS name or select in wallet'}\n                />\n            </Form.Field>\n        )\n    }\n}\n\nexport default AddressInput\n","import React, { useEffect, useState } from 'react'\nimport AddressInput from './AddressInput'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Grid } from 'semantic-ui-react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../app/rootReducer'\nimport { addAddressThunk } from './AddressSlice'\n\nexport const addressInputStates = {\n    ADDRESS_INITIAL: 'address_initial', // no user interaction\n    ADDRESS_RESOLVING: 'address_resolving', // valid ENS name entered, waiting for resolving\n    ADDRESS_VALID: 'address_valid', // got a valid address\n    ADDRESS_INVALID: 'address_invalid',\n}\n\nconst AddressInputContainer = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { web3 } = useSelector((state: RootState) => state.onboard)\n    const { mobile } = useSelector((state: RootState) => state.respsonsive)\n    const checkAddress = useSelector((state: RootState) => {\n        if (state.addresses.checkAddressId)\n            return state.addresses.addressesById[state.addresses.checkAddressId]\n        else return undefined\n    })\n    const [addressInputState, setAddressInputState] = useState(\n        addressInputStates.ADDRESS_INITIAL\n    )\n    const [input, setInput] = useState('')\n    const [addressId, setAddressId] = useState('')\n    const [ensName, setEnsName] = useState<string | undefined>(undefined)\n\n    // keep address input field in sync with address from url params\n    useEffect(() => {\n        if (checkAddress) {\n            console.log(\n                `CheckAddress: ${checkAddress.ensName ?? checkAddress.address}`\n            )\n            setInput(checkAddress.ensName ?? checkAddress.address)\n        } else {\n            console.log(`CheckAddress undefined`)\n        }\n    }, [checkAddress, setInput])\n\n    const error = addressInputState === addressInputStates.ADDRESS_INVALID\n    const loading = addressInputState === addressInputStates.ADDRESS_RESOLVING\n    const validInput = addressInputState === addressInputStates.ADDRESS_VALID\n\n    const handleSubmit = () => {\n        if (validInput) {\n            if (ensName) {\n                dispatch(addAddressThunk(ensName, history))\n            } else {\n                dispatch(addAddressThunk(addressId, history))\n            }\n            setInput('')\n            setEnsName(undefined)\n        }\n    }\n\n    const handleInput = async (input: string) => {\n        setInput(input)\n        setEnsName(undefined)\n        if (input.length === 0) {\n            setAddressInputState(addressInputStates.ADDRESS_INITIAL)\n        } else {\n            // check for valid input (raw address and ENS name)\n            const validAddress = /^(0x)?[0-9a-f]{40}$/i.test(input)\n            const validENSName = /.*\\.eth$/i.test(input)\n            if (validENSName && web3) {\n                // resolve entered ENS name\n                setAddressInputState(addressInputStates.ADDRESS_RESOLVING)\n                try {\n                    const resolvedAddress = await web3.eth.ens.getAddress(input)\n                    console.log(`Resolved ${input} to ${resolvedAddress}`)\n                    setAddressInputState(addressInputStates.ADDRESS_VALID)\n                    setAddressId(resolvedAddress)\n                    setEnsName(input)\n                    if (mobile) {\n                        dispatch(addAddressThunk(input, history))\n                    }\n                } catch (e) {\n                    console.log('Could not resolve ' + input)\n                    setAddressInputState(addressInputStates.ADDRESS_INVALID)\n                }\n            } else if (validAddress) {\n                // use entered ethereum address\n                const addressId = input.toLowerCase()\n                setAddressId(addressId)\n                setAddressInputState(addressInputStates.ADDRESS_VALID)\n                if (mobile) {\n                    dispatch(addAddressThunk(addressId, history))\n                }\n            } else {\n                setAddressInputState(addressInputStates.ADDRESS_INVALID)\n            }\n        }\n    }\n\n    if (mobile) {\n        return (\n            <Form\n                onSubmit={handleSubmit}\n                error={error}\n                success={validInput}\n                loading={loading}\n            >\n                <AddressInput\n                    handleInput={handleInput}\n                    value={input}\n                    error={error}\n                    success={validInput}\n                    loading={loading}\n                    mobile={mobile}\n                />\n            </Form>\n        )\n    }\n\n    return (\n        <Grid textAlign={'center'} centered columns={1}>\n            <Grid.Row>\n                <Grid.Column width={14}>\n                    <Form\n                        size={'huge'}\n                        onSubmit={handleSubmit}\n                        error={error}\n                        success={validInput}\n                        widths={'equal'}\n                    >\n                        <Form.Group>\n                            <AddressInput\n                                handleInput={handleInput}\n                                value={input}\n                                error={error}\n                                success={validInput}\n                                loading={loading}\n                                mobile={mobile}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n}\n\nexport default AddressInputContainer\n","import React, { FunctionComponent, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport {\n    CheckAddressStates,\n    redirectToAddress,\n    setAddressFromParamsThunk,\n} from '../features/addressInput/AddressSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../app/rootReducer'\nimport { Icon } from 'semantic-ui-react'\nimport { useHistory } from 'react-router'\nimport DisplayMessage from './DisplayMessage'\n\ninterface AddressExtractorProps {\n    children?: React.ReactNode\n}\n\nconst AddressExtractor: FunctionComponent = ({\n    children,\n}: AddressExtractorProps) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { address: addressFromParams } = useParams()\n    const { checkAddressState } = useSelector(\n        (state: RootState) => state.addresses\n    )\n    const walletAddressId = useSelector(\n        (state: RootState) => state.addresses.walletAddressId\n    )\n    const mobile = useSelector((state: RootState) => state.respsonsive.mobile)\n    const [prevAddressFromParams, setPrevAddressFromParams] = useState('')\n\n    // watch url params address change\n    useEffect(() => {\n        if (addressFromParams) {\n            if (prevAddressFromParams !== addressFromParams) {\n                console.log(\n                    `AddressExtractor: Setting new address ${addressFromParams}`\n                )\n                dispatch(setAddressFromParamsThunk(addressFromParams))\n                setPrevAddressFromParams(addressFromParams)\n            } else {\n                console.log(\n                    `AddressExtractor: ${addressFromParams} already dispatched.`\n                )\n            }\n        } else if (walletAddressId) {\n            console.log(`No address in params. Trying fallback to wallet.`)\n            // no address provided via url. Fall back to wallet address.\n            dispatch(redirectToAddress(walletAddressId, history, true))\n        }\n    }, [\n        addressFromParams,\n        prevAddressFromParams,\n        walletAddressId,\n        history,\n        dispatch,\n    ])\n\n    if (checkAddressState === CheckAddressStates.Invalid) {\n        return (\n            <DisplayMessage\n                mobile={mobile}\n                header={'Invalid address'}\n                body={`Address ${addressFromParams} is invalid`}\n                icon={<Icon name='exclamation triangle' />}\n                error={true}\n            />\n        )\n    }\n\n    if (checkAddressState === CheckAddressStates.Resolving) {\n        return (\n            <DisplayMessage\n                mobile={mobile}\n                header={'Checking address'}\n                body={`Checking address ${addressFromParams}`}\n                icon={<Icon name='circle notched' loading />}\n                warning={true}\n            />\n        )\n    }\n\n    return <React.Fragment>{children}</React.Fragment>\n}\n\nexport default AddressExtractor\n","import React, { SyntheticEvent } from 'react'\nimport { Button, Dropdown, DropdownProps } from 'semantic-ui-react'\nimport { RootState } from '../app/rootReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setRequiredNetworkIdThunk } from 'features/onboard/onboardSlice'\n\nconst NetworkSelector = () => {\n    const options = [\n        { key: 1, text: 'Mainnet', value: 1 },\n        { key: 2, text: 'Ropsten', value: 3 },\n    ]\n\n    const dispatch = useDispatch()\n    const { requiredNetworkId, wallet } = useSelector(\n        (state: RootState) => state.onboard\n    )\n\n    const handleChange = (\n        event: SyntheticEvent<HTMLElement, Event>,\n        data: DropdownProps\n    ) => {\n        const { value } = data\n        console.log(`Selected value: ${value}`)\n        dispatch(setRequiredNetworkIdThunk(parseInt(`${value}`)))\n    }\n\n    const networkEntry = options.find(\n        (value) => value.value === requiredNetworkId\n    )\n    const text = 'Network: ' + networkEntry?.text ?? 'select'\n\n    return (\n        <Dropdown\n            as={Button}\n            disabled={!wallet}\n            text={text}\n            options={options}\n            onChange={handleChange}\n            value={requiredNetworkId}\n            fluid\n        />\n    )\n}\n\nexport default NetworkSelector\n","import React from 'react'\nimport { Button, Message, Modal, Icon } from 'semantic-ui-react'\nimport AddressDisplay from '../../components/AddressDisplay'\nimport { Wallet } from 'bnc-onboard/dist/src/interfaces'\nimport { EthAddress } from '../addressInput/AddressSlice'\n\ninterface WalletConfigModalProps {\n    handleChangeWallet: () => void\n    handleChangeAddress: () => void\n    handleClose: () => void\n    wallet?: Wallet\n    walletAddress?: EthAddress\n    mobile: boolean\n    networkId: number\n}\n\nconst WalletConfigModal = ({\n    handleChangeWallet,\n    handleChangeAddress,\n    handleClose,\n    mobile,\n    networkId,\n    wallet,\n    walletAddress,\n}: WalletConfigModalProps) => {\n    const currentWallet = wallet?.name ? (\n        <p>\n            Connected to <strong>{wallet.name}</strong>.\n        </p>\n    ) : (\n        <p>No wallet connected.</p>\n    )\n\n    const walletMsgIcon = wallet?.name ? 'linkify' : 'unlinkify'\n\n    const currentAddress = walletAddress ? (\n        <AddressDisplay\n            ethAddress={walletAddress}\n            mobile={mobile}\n            networkId={networkId}\n        />\n    ) : (\n        'None'\n    )\n\n    const size = mobile ? 'small' : 'large'\n\n    const msgs = []\n    msgs.push(\n        <Message icon info size={size} key={1}>\n            <Icon name={walletMsgIcon} />\n            <Message.Content>\n                <Message.Header>Wallet</Message.Header>\n                {currentWallet}\n                <Button primary size={'small'} onClick={handleChangeWallet}>\n                    Change Wallet\n                </Button>\n            </Message.Content>\n        </Message>\n    )\n    if (wallet?.type === 'hardware') {\n        msgs.push(\n            <Message icon info size={size} key={2}>\n                <Icon name='id card outline' />\n                <Message.Content>\n                    <Message.Header>Wallet address</Message.Header>\n                    <p>{wallet?.name} wallet supports multiple addresses.</p>\n                    <p>Current address: {currentAddress}</p>\n                    <Button\n                        primary\n                        size={'small'}\n                        onClick={handleChangeAddress}\n                    >\n                        Change Address\n                    </Button>\n                </Message.Content>\n            </Message>\n        )\n    }\n\n    const modal = (\n        <Modal open={true} size={size} onClose={handleClose}>\n            <Modal.Header>Wallet configuration</Modal.Header>\n            <Modal.Content>{msgs}</Modal.Content>\n            <Modal.Actions>\n                <Button size={'small'} onClick={handleClose}>\n                    Close\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    )\n\n    return modal\n}\n\nexport default WalletConfigModal\n","import { Button } from 'semantic-ui-react'\nimport React from 'react'\nimport { EthAddress } from '../addressInput/AddressSlice'\n\ninterface WalletSelectorProps {\n    walletName?: string | null\n    walletAccount?: EthAddress\n    handleClick: () => void\n}\n\nconst WalletSelector = ({ walletName, handleClick }: WalletSelectorProps) => {\n    const gotWallet = !!walletName\n    const buttonLabel = walletName ? `Wallet: ${walletName}` : 'Connect wallet'\n\n    return (\n        <Button fluid positive={gotWallet} onClick={handleClick}>\n            {buttonLabel}\n        </Button>\n    )\n}\n\nexport default WalletSelector\n","import React, { useState } from 'react'\nimport WalletConfigModal from './WalletConfigModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../app/rootReducer'\nimport { selectWallet } from './onboardSlice'\nimport { useHistory } from 'react-router-dom'\nimport WalletSelector from './walletSelector'\n\nconst WalletSelectorContainer = () => {\n    const [showWalletConfig, setShowWalletConfig] = useState(false)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { wallet, onboardAPI, networkId } = useSelector(\n        (state: RootState) => state.onboard\n    )\n    const walletAddress = useSelector((state: RootState) => {\n        if (state.addresses.walletAddressId) {\n            return state.addresses.addressesById[\n                state.addresses.walletAddressId\n            ]\n        } else {\n            return undefined\n        }\n    })\n    const { mobile } = useSelector((state: RootState) => state.respsonsive)\n    const handleWalletConfig = () => {\n        setShowWalletConfig(true)\n    }\n\n    const handleCloseWalletConfig = () => {\n        setShowWalletConfig(false)\n    }\n\n    const handleSelectWallet = () => {\n        setShowWalletConfig(false)\n        dispatch(selectWallet(history))\n    }\n\n    const handleSelectAddress = () => {\n        setShowWalletConfig(false)\n        onboardAPI?.accountSelect()\n    }\n\n    return (\n        <>\n            <WalletSelector\n                handleClick={handleWalletConfig}\n                walletName={wallet?.name}\n                walletAccount={walletAddress}\n            />\n            {showWalletConfig && (\n                <WalletConfigModal\n                    handleClose={handleCloseWalletConfig}\n                    handleChangeWallet={handleSelectWallet}\n                    handleChangeAddress={handleSelectAddress}\n                    mobile={mobile}\n                    networkId={networkId}\n                    wallet={wallet}\n                    walletAddress={walletAddress}\n                />\n            )}\n        </>\n    )\n}\n\nexport default WalletSelectorContainer\n","import React from 'react'\nimport { Container, Icon, Image, Menu } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport NetworkSelector from '../../components/NetworkSelector'\nimport WalletSelectorContainer from '../onboard/WalletSelectorContainer'\n\nconst MainMenu: React.FC = () => {\n    return (\n        <Menu fixed='top' inverted size='huge'>\n            <Container>\n                <Menu.Item\n                    header\n                    as={Link}\n                    to='/'\n                    title={'Home'}\n                    style={{ padding: '0px' }}\n                >\n                    <Image src={'/logo192.png'} width={60} height={60} />\n                </Menu.Item>\n                <Menu.Item as={Link} to='/address/' title={'Check Allowances'}>\n                    <Icon name='search' size={'large'} /> Check Allowances\n                </Menu.Item>\n                <Menu.Menu position='right'>\n                    <Menu.Item>\n                        <WalletSelectorContainer />\n                    </Menu.Item>\n                    <Menu.Item>\n                        <NetworkSelector />\n                    </Menu.Item>\n                    <Menu.Item>\n                        <a\n                            href='https://github.com/TripleSpeeder/token-allowance-checker'\n                            title='github.com/TripleSpeeder/token-allowance-checker'\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <Icon name='github' size='big' />\n                        </a>\n                    </Menu.Item>\n                </Menu.Menu>\n            </Container>\n        </Menu>\n    )\n}\n\nexport default MainMenu\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from './rootReducer'\nimport { ResponsiveOnUpdateData } from 'semantic-ui-react/dist/commonjs/addons/Responsive/Responsive'\nimport {\n    Container,\n    Header,\n    Icon,\n    Image,\n    Menu,\n    Responsive,\n    Segment,\n    Sidebar,\n    Button,\n} from 'semantic-ui-react'\nimport { setMobile } from '../features/responsiveLayout/responsiveSlice'\nimport { HashRouter as Router, Link, useHistory } from 'react-router-dom'\nimport MainMenu from '../features/menu/MainMenu'\nimport WalletSelectorContainer from '../features/onboard/WalletSelectorContainer'\nimport NetworkSelector from '../components/NetworkSelector'\nimport { initialize } from '../features/onboard/onboardSlice'\n\ninterface ResponsiveAppProps {\n    children?: React.ReactNode\n}\nconst ResponsiveApp = ({ children }: ResponsiveAppProps) => {\n    const [prevMobile, setPrevMobile] = useState<boolean | undefined>(undefined)\n    const [showSidebar, setShowSidebar] = useState(false)\n    const { mobile } = useSelector((state: RootState) => state.respsonsive)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    // initialize onboard.js\n    useEffect(() => {\n        dispatch(initialize(history))\n    }, [dispatch, history])\n\n    const onResponsiveUpdate = (\n        event: React.SyntheticEvent<HTMLElement>,\n        data: ResponsiveOnUpdateData\n    ) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const isMobile = data.width <= Responsive.onlyMobile.maxWidth\n        if (isMobile !== prevMobile) {\n            dispatch(setMobile(isMobile))\n            setPrevMobile(isMobile)\n        }\n    }\n\n    const DesktopHeading = (\n        <Segment textAlign='center' vertical basic>\n            <MainMenu />\n            <Container\n                text\n                style={{\n                    marginTop: '4em',\n                    marginBottom: '2em',\n                }}\n            >\n                <Header\n                    as='h1'\n                    inverted={false}\n                    style={{\n                        fontSize: '3em',\n                        marginTop: '0.5em',\n                    }}\n                >\n                    Token Allowance Checker\n                    <Header.Subheader>\n                        Control your token approvals\n                    </Header.Subheader>\n                </Header>\n            </Container>\n        </Segment>\n    )\n\n    let content\n    if (mobile) {\n        // No extra page header, use sidebar for menu\n        content = (\n            <Sidebar.Pushable>\n                <Menu fixed='top' inverted size='small'>\n                    <Menu.Item onClick={() => setShowSidebar(true)}>\n                        <Icon name={'bars'} />\n                    </Menu.Item>\n                    <Menu.Item style={{ padding: '0' }}>\n                        <Link to={'/'}>\n                            <Image\n                                src={'/logo192.png'}\n                                width={40}\n                                height={40}\n                            />\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item>Token Allowance Checker</Menu.Item>\n                </Menu>\n                <Sidebar\n                    as={Menu}\n                    animation={'overlay'}\n                    inverted\n                    onHide={() => setShowSidebar(false)}\n                    vertical\n                    visible={showSidebar}\n                >\n                    <Menu.Item>\n                        <WalletSelectorContainer />\n                    </Menu.Item>\n                    <Menu.Item>\n                        <NetworkSelector />\n                    </Menu.Item>\n                    <Menu.Item>\n                        <Button\n                            icon\n                            fluid\n                            as={'a'}\n                            href='https://github.com/TripleSpeeder/token-allowance-checker'\n                            title='github.com/TripleSpeeder/token-allowance-checker'\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <Icon name='github' /> TAC on Github\n                        </Button>\n                    </Menu.Item>\n                </Sidebar>\n\n                <Sidebar.Pusher style={{ marginTop: '3em' }}>\n                    {children}\n                </Sidebar.Pusher>\n            </Sidebar.Pushable>\n        )\n    } else {\n        // use page header with classic menu\n        content = (\n            <>\n                {DesktopHeading}\n                {children}\n            </>\n        )\n    }\n\n    return (\n        <Responsive\n            as={Router}\n            fireOnMount={true}\n            onUpdate={onResponsiveUpdate}\n        >\n            {content}\n        </Responsive>\n    )\n}\n\nexport default ResponsiveApp\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\n      .cls-1 {\\n        fill: #ff4660;\\n      }\\n    \"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"dfuse-logo-01\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M606.8,178.6V359.7H577.5V342.9a46.9,46.9,0,0,1-18.7,13.9,62.9,62.9,0,0,1-24.5,4.6,69.08,69.08,0,0,1-33.8-8.3A59,59,0,0,1,477,329.6c-5.7-10.2-8.5-21.8-8.5-35s2.8-24.8,8.5-34.9a59.43,59.43,0,0,1,23.5-23.4,69.08,69.08,0,0,1,33.8-8.3,62.88,62.88,0,0,1,23.7,4.4,46.32,46.32,0,0,1,18.3,13.2V178.7h30.5Zm-49,151.6a35.47,35.47,0,0,0,13.9-14.3,47.87,47.87,0,0,0,0-43,36.78,36.78,0,0,0-13.9-14.3,41.7,41.7,0,0,0-39.6,0,35.47,35.47,0,0,0-13.9,14.3,47.87,47.87,0,0,0,0,43,36.78,36.78,0,0,0,13.9,14.3,39.62,39.62,0,0,0,19.8,5A38.87,38.87,0,0,0,557.8,330.2Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M680.5,222.5v7.8h35.9v24.4H681.5V359.6H651V254.7H629.5V230.3H651V222c0-14,4.1-25,12.2-33.1s19.6-12.1,34.4-12.1c11.7,0,20.9,2.4,27.6,7.1l-8.5,22.9a29,29,0,0,0-16.8-5.4C686.9,201.5,680.5,208.5,680.5,222.5Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M863,229.3V359.6H834V343a47.55,47.55,0,0,1-18.3,13.5,58.38,58.38,0,0,1-23.7,4.8c-17.4,0-31.1-4.8-41.1-14.5s-15-24-15-43.1V229.3h30.5v70.3c0,11.7,2.6,20.5,7.9,26.2s12.8,8.7,22.6,8.7c10.9,0,19.6-3.4,26-10.1s9.6-16.5,9.6-29.2V229.3Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M912.3,357.2c-10.1-2.8-18.1-6.3-24.2-10.5l11.7-23.2a77.38,77.38,0,0,0,21.1,9.4,86,86,0,0,0,24.3,3.5q27.3,0,27.3-14.4c0-4.6-2.3-7.7-7-9.5s-12.1-3.5-22.3-5.1a178.78,178.78,0,0,1-26.2-5.6,40,40,0,0,1-17.6-11.1c-5-5.3-7.4-12.6-7.4-22.1,0-12.4,5.2-22.2,15.5-29.6s24.3-11.1,41.8-11.1a116.69,116.69,0,0,1,26.8,3.1c8.9,2,16.3,4.8,22,8.2l-11.7,23.2a72.39,72.39,0,0,0-37.3-9.8c-8.9,0-15.7,1.3-20.4,4s-7,6.2-7,10.6c0,4.9,2.5,8.3,7.4,10.4s12.6,3.9,23.1,5.7a177.4,177.4,0,0,1,25.6,5.6A40.11,40.11,0,0,1,995,299.6c4.8,5,7.2,12.2,7.2,21.5,0,12.2-5.3,22-15.9,29.3s-25,11-43.2,11A123.58,123.58,0,0,1,912.3,357.2Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M1150.7,304.2H1048.5a35.63,35.63,0,0,0,14,22.8q11.4,8.4,28.2,8.4c14.3,0,26.1-4.7,35.4-14.2l16.3,18.8a55.94,55.94,0,0,1-22.2,15.9q-13.35,5.4-30.3,5.4c-14.3,0-26.9-2.8-37.8-8.5a61.85,61.85,0,0,1-25.3-23.8,71.64,71.64,0,0,1-.2-68.8,61.69,61.69,0,0,1,24-23.8c10.2-5.7,21.8-8.5,34.7-8.5,12.7,0,24,2.8,34,8.4a59.3,59.3,0,0,1,23.4,23.7c5.6,10.2,8.4,21.9,8.4,35.3A62.29,62.29,0,0,1,1150.7,304.2Zm-90.1-43.3q-10.2,8.7-12.3,23.1h73.9c-1.3-9.4-5.3-17.1-12-22.9s-15-8.8-24.9-8.8C1075.6,252.3,1067.3,255.1,1060.6,260.9Z\"\n}));\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M249.9,167.2h0c39.8,0,71.1,31.6,71.1,72,0,39.4-33.4,72.8-73.1,72.8H178.8V237.8c.1-39.7,31.3-70.6,71.1-70.6m0-47.6c-67.4,0-119.9,52.5-119.9,118.1V359.6H247.9c67.4,0,122.1-54.7,122.1-120.3A119.42,119.42,0,0,0,249.9,119.6Z\"\n});\n\nvar SvgDfuseLogo = function SvgDfuseLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 1280 491.6\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDfuseLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dfuse-logo.6ce63f4d.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Group 7\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Assets\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group-7\",\n  transform: \"translate(2.000000, 1.000000)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M143.941924,27 C145.938304,27 147.594367,27.6288121 148.910163,28.8864551 C150.225959,30.1440982 150.883848,31.8059587 150.883848,33.8720866 L150.883848,60.4774868 C154.059907,56.614726 157.916493,53.605411 162.453721,51.4494515 C166.990948,49.293492 171.891081,48.2155284 177.154265,48.2155284 C183.687873,48.2155284 189.608866,49.8324738 194.917423,53.066413 C200.225979,56.3003523 204.400166,60.7694097 207.440109,66.4737192 C210.480051,72.1780287 212,78.5335224 212,85.5403908 C212,92.5472592 210.366623,98.9027528 207.099819,104.607062 C203.833015,110.311372 199.318541,114.802887 193.556261,118.081742 C187.793982,121.360597 181.419273,123 174.431942,123 C167.444611,123 161.115273,121.360597 155.443739,118.081742 C149.772204,114.802887 145.280416,110.311372 141.96824,104.607062 C138.656063,98.9027528 137,92.5472592 137,85.5403908 L137,33.8720866 C137,31.8059587 137.635202,30.1440982 138.905626,28.8864551 C140.17605,27.6288121 141.854799,27 143.941924,27 Z M174.430986,110 C179.031948,110 183.195756,108.911122 186.922535,106.733333 C190.649314,104.555545 193.593886,101.555575 195.756338,97.7333333 C197.91879,93.911092 199,89.644468 199,84.9333333 C199,80.2221987 197.91879,75.9777967 195.756338,72.2 C193.593886,68.4222033 190.649314,65.4444553 186.922535,63.2666667 C183.195756,61.088878 179.031948,60 174.430986,60 C169.830024,60 165.666216,61.088878 161.939437,63.2666667 C158.212657,65.4444553 155.29109,68.4222033 153.174648,72.2 C151.058205,75.9777967 150,80.2221987 150,84.9333333 C150,89.644468 151.058205,93.911092 153.174648,97.7333333 C155.29109,101.555575 158.212657,104.555545 161.939437,106.733333 C165.666216,108.911122 169.830024,110 174.430986,110 Z M231,33.7048029 C231,31.7380509 231.636357,30.1289143 232.909091,28.8773448 C234.181825,27.6257754 235.818172,27 237.818182,27 C239.818192,27 241.454539,27.6257754 242.727273,28.8773448 C244.000006,30.1289143 244.636364,31.7380509 244.636364,33.7048029 L244.636364,97.1922291 C244.636364,100.499948 245.272721,103.226541 246.545455,105.372089 C247.818188,107.517636 249.454535,108.590394 251.454545,108.590394 L254.863636,108.590394 C256.681827,108.590394 258.159085,109.216169 259.295455,110.467739 C260.431824,111.719308 261,113.328445 261,115.295197 C261,117.261949 260.136372,118.871086 258.409091,120.122655 C256.68181,121.374225 254.454559,122 251.727273,122 L251.454545,122 C247.545435,122 244.022743,120.949591 240.886364,118.848743 C237.749984,116.747894 235.31819,113.79781 233.590909,109.998403 C231.863628,106.198995 231,101.930314 231,97.1922291 L231,33.7048029 Z M303.568058,48 C310.736878,48 317.156959,49.5990831 322.828494,52.7972973 C328.500028,55.9955115 332.946445,60.4324041 336.167877,66.1081081 C339.389308,71.7838122 341,78.2702338 341,85.5675676 C341,92.7748108 339.411994,99.2161878 336.235935,104.891892 C333.059875,110.567596 328.636145,115.004489 322.96461,118.202703 C317.293075,121.400917 310.827623,123 303.568058,123 C296.308494,123 289.820355,121.400917 284.103448,118.202703 C278.386541,115.004489 273.940125,110.567596 270.764065,104.891892 C267.588006,99.2161878 266,92.7748108 266,85.5675676 C266,78.2702338 267.588006,71.7838122 270.764065,66.1081081 C273.940125,60.4324041 278.386541,55.9955115 284.103448,52.7972973 C289.820355,49.5990831 296.308494,48 303.568058,48 Z M304.569014,60 C299.876033,60 295.666216,61.066656 291.939437,63.2 C288.212657,65.333344 285.29109,68.311092 283.174648,72.1333333 C281.058205,75.9555747 280,80.2666427 280,85.0666667 C280,89.8666907 281.058205,94.1555367 283.174648,97.9333333 C285.29109,101.71113 288.212657,104.666656 291.939437,106.8 C295.666216,108.933344 299.876033,110 304.569014,110 C309.261995,110 313.471812,108.933344 317.198592,106.8 C320.925371,104.666656 323.823933,101.71113 325.894366,97.9333333 C327.964799,94.1555367 329,89.8666907 329,85.0666667 C329,80.2666427 327.964799,75.9555747 325.894366,72.1333333 C323.823933,68.311092 320.925371,65.333344 317.198592,63.2 C313.471812,61.066656 309.261995,60 304.569014,60 Z M395.928721,48 C406.648551,48 415.551327,52.0540135 422.637317,60.1621622 C423.545777,61.1531581 424,62.3243176 424,63.6756757 C424,65.6576676 423.000709,67.3243176 421.002096,68.6756757 C420.093636,69.3063095 419.048923,69.6216216 417.867925,69.6216216 C415.778466,69.6216216 414.006995,68.8108189 412.553459,67.1891892 C410.282309,64.7567446 407.806792,62.9774831 405.126834,61.8513514 C402.446877,60.7252196 399.38087,60.1621622 395.928721,60.1621622 C388.933578,60.1621622 383.255787,62.4819588 378.895178,67.1216216 C374.534569,71.7612845 372.354298,77.9098716 372.354298,85.5675676 C372.354298,90.4324568 373.3763,94.7792601 375.420335,98.6081081 C377.464371,102.436956 380.325977,105.432422 384.005241,107.594595 C387.684505,109.756768 391.88607,110.837838 396.610063,110.837838 C402.787592,110.837838 407.784048,109.261277 411.599581,106.108108 C413.325655,104.846841 415.006281,104.216216 416.641509,104.216216 C417.913354,104.216216 419.094334,104.621618 420.184486,105.432432 C421.910561,106.873881 422.773585,108.495486 422.773585,110.297297 C422.773585,111.648655 422.228517,112.864859 421.138365,113.945946 C414.597452,119.982012 406.421433,123 396.610063,123 C389.433228,123 382.983257,121.378395 377.259958,118.135135 C371.536659,114.891876 367.06256,110.409939 363.837526,104.689189 C360.612493,98.9684399 359,92.5946297 359,85.5675676 C359,78.3603243 360.56707,71.896425 363.701258,66.1756757 C366.835445,60.4549264 371.2187,55.9955115 376.851153,52.7972973 C382.483606,49.5990831 388.842732,48 395.928721,48 Z M501.495283,112.39964 C502.498433,113.473099 503,114.814903 503,116.425093 C503,118.393102 502.179253,120.047994 500.537736,121.389819 C499.169804,122.463278 497.7107,123 496.160377,123 C494.154078,123 492.512585,122.194917 491.235849,120.584728 L465.245283,89.0520102 L458.40566,94.9560084 L458.40566,115.48582 C458.40566,117.45383 457.7901,119.041632 456.558962,120.249274 C455.327824,121.456916 453.70913,122.060728 451.70283,122.060728 C449.696531,122.060728 448.077836,121.456916 446.846698,120.249274 C445.61556,119.041632 445,117.45383 445,115.48582 L445,33.5749071 C445,31.6068979 445.61556,30.019096 446.846698,28.811454 C448.077836,27.603812 449.696531,27 451.70283,27 C453.70913,27 455.327824,27.603812 456.558962,28.811454 C457.7901,30.019096 458.40566,31.6068979 458.40566,33.5749071 L458.40566,78.4516497 L491.646226,49.3342038 C492.831767,48.1712893 494.245275,47.5898407 495.886792,47.5898407 C497.801896,47.5898407 499.352195,48.3054697 500.537736,49.7367492 C501.723276,50.8996637 502.316038,52.2861949 502.316038,53.8963843 C502.316038,55.7749386 501.586485,57.2956502 500.127358,58.4585648 L474.957547,80.4643764 L501.495283,112.39964 Z M560.11501,48 C566.391844,48 572.031814,49.3381421 577.035088,52.0144665 C582.038362,54.690791 585.949953,58.5937055 588.769981,63.7233273 C591.590008,68.8529491 593,75.0307053 593,82.2567812 L593,115.175407 C593,117.138045 592.340487,118.766118 591.021442,120.059675 C589.702398,121.353231 588.042245,122 586.040936,122 C584.039626,122 582.379474,121.353231 581.060429,120.059675 C579.741384,118.766118 579.081871,117.138045 579.081871,115.175407 L579.081871,82.2567812 C579.081871,75.0307053 577.103334,69.5666249 573.146199,65.8643761 C569.189064,62.1621274 563.935705,60.3110307 557.385965,60.3110307 C553.565283,60.3110307 550.085786,61.0693113 546.947368,62.5858951 C543.808951,64.102479 541.352835,66.1542969 539.578947,68.7414105 C537.805059,71.3285241 536.918129,74.227832 536.918129,77.4394213 L536.918129,115.175407 C536.918129,117.138045 536.281358,118.766118 535.007797,120.059675 C533.734237,121.353231 532.051342,122 529.959064,122 C527.957755,122 526.297602,121.353231 524.978558,120.059675 C523.659513,118.766118 523,117.138045 523,115.175407 L523,55.4936709 C523,53.4418222 523.659513,51.7914469 524.978558,50.5424955 C526.297602,49.2935441 527.957755,48.6690778 529.959064,48.6690778 C532.051342,48.6690778 533.734237,49.2935441 535.007797,50.5424955 C536.281358,51.7914469 536.918129,53.4418222 536.918129,55.4936709 L536.918129,56.965642 C539.829124,54.1108959 543.28588,51.9029614 547.288499,50.3417722 C551.291118,48.7805829 555.566579,48 560.11501,48 Z M650.568058,48 C657.555389,48 663.884727,49.6441277 669.556261,52.9324324 C675.227796,56.2207372 679.719584,60.7251966 683.03176,66.4459459 C686.343937,72.1666953 688,78.5405054 688,85.5675676 L688,115.702703 C688,117.684695 687.342112,119.328822 686.026316,120.635135 C684.71052,121.941448 683.054456,122.594595 681.058076,122.594595 C679.061696,122.594595 677.405633,121.941448 676.089837,120.635135 C674.774041,119.328822 674.116152,117.684695 674.116152,115.702703 L674.116152,110.702703 C670.940093,114.576596 667.083507,117.594584 662.546279,119.756757 C658.009052,121.91893 653.108919,123 647.845735,123 C641.312127,123 635.391134,121.378395 630.082577,118.135135 C624.774021,114.891876 620.599834,110.409939 617.559891,104.689189 C614.519949,98.9684399 613,92.5946297 613,85.5675676 C613,78.5405054 614.633377,72.1666953 617.900181,66.4459459 C621.166985,60.7251966 625.681459,56.2207372 631.443739,52.9324324 C637.206018,49.6441277 643.580727,48 650.568058,48 Z M650.569014,110 C655.169976,110 659.333784,108.911122 663.060563,106.733333 C666.787343,104.555545 669.70891,101.577797 671.825352,97.8 C673.941795,94.0222033 675,89.7778013 675,85.0666667 C675,80.355532 673.941795,76.088908 671.825352,72.2666667 C669.70891,68.4444253 666.787343,65.4444553 663.060563,63.2666667 C659.333784,61.088878 655.169976,60 650.569014,60 C645.968052,60 641.804244,61.088878 638.077465,63.2666667 C634.350686,65.4444553 631.406114,68.4444253 629.243662,72.2666667 C627.08121,76.088908 626,80.355532 626,85.0666667 C626,89.7778013 627.08121,94.0222033 629.243662,97.8 C631.406114,101.577797 634.350686,104.555545 638.077465,106.733333 C641.804244,108.911122 645.968052,110 650.569014,110 Z M740.15896,108.590394 C741.789025,108.590394 743.170033,109.216169 744.302023,110.467739 C745.434013,111.719308 746,113.328445 746,115.295197 C746,117.261949 745.252898,118.871086 743.758671,120.122655 C742.264443,121.374225 740.340089,122 737.985549,122 L735.540462,122 C731.103061,122 727.050596,120.860195 723.382948,118.58055 C719.7153,116.300906 716.840087,113.194378 714.757225,109.260874 C712.674363,105.32737 711.632948,100.902245 711.632948,95.9853646 L711.632948,60.1817169 L705.384393,60.1817169 C703.482649,60.1817169 701.943166,59.645338 700.765896,58.5725642 C699.588626,57.4997903 699,56.1588432 699,54.5496824 C699,52.761726 699.588626,51.3313824 700.765896,50.2586085 C701.943166,49.1858347 703.482649,48.6494558 705.384393,48.6494558 L711.632948,48.6494558 L711.632948,33.7048029 C711.632948,31.7380509 712.266853,30.1289143 713.534682,28.8773448 C714.802511,27.6257754 716.432553,27 718.424855,27 C720.417158,27 722.0472,27.6257754 723.315029,28.8773448 C724.582858,30.1289143 725.216763,31.7380509 725.216763,33.7048029 L725.216763,48.6494558 L736.763006,48.6494558 C738.664749,48.6494558 740.204233,49.1858347 741.381503,50.2586085 C742.558773,51.3313824 743.147399,52.761726 743.147399,54.5496824 C743.147399,56.1588432 742.558773,57.4997903 741.381503,58.5725642 C740.204233,59.645338 738.664749,60.1817169 736.763006,60.1817169 L725.216763,60.1817169 L725.216763,95.9853646 C725.216763,99.5612774 726.212899,102.556059 728.205202,104.969801 C730.197505,107.383542 732.642567,108.590394 735.540462,108.590394 L740.15896,108.590394 Z M765,55.8994516 C765,53.8250963 765.663392,52.1566181 766.990196,50.8939671 C768.317,49.6313161 769.986918,49 772,49 C774.104586,49 775.797379,49.6313161 777.078431,50.8939671 C778.359484,52.1566181 779,53.8250963 779,55.8994516 L779,116.100548 C779,118.084714 778.359484,119.730646 777.078431,121.038391 C775.797379,122.346137 774.104586,123 772,123 C769.986918,123 768.317,122.346137 766.990196,121.038391 C765.663392,119.730646 765,118.084714 765,116.100548 L765,55.8994516 Z M772,18 C774.454558,18 776.568173,18.8863548 778.340909,20.6590909 C780.113645,22.431827 781,24.5454423 781,27 C781,29.4545577 780.113645,31.568173 778.340909,33.3409091 C776.568173,35.1136452 774.454558,36 772,36 C769.545442,36 767.431827,35.1136452 765.659091,33.3409091 C763.886355,31.568173 763,29.4545577 763,27 C763,24.5454423 763.886355,22.431827 765.659091,20.6590909 C767.431827,18.8863548 769.545442,18 772,18 Z M863.311195,49.6709559 C864.495262,50.2077233 865.406069,50.9457674 866.043643,51.8851103 C866.681218,52.8244532 867,53.8756069 867,55.0386029 C867,55.843754 866.772298,56.693623 866.316888,57.5882353 L837.352941,117.571691 C835.98671,120.523912 833.891855,122 831.068311,122 C829.519916,122 828.244787,121.664525 827.242884,120.993566 C826.240982,120.322607 825.330175,119.181993 824.510436,117.571691 L795.54649,57.5882353 C795.182161,56.8725454 795,56.0674064 795,55.1727941 C795,52.7573409 796.27513,50.9234131 798.825427,49.6709559 C799.645165,49.2236497 800.601513,49 801.694497,49 C802.787482,49 803.83491,49.2907446 804.836812,49.8722426 C805.838715,50.4537407 806.6129,51.2812446 807.159393,52.3547794 L830.931689,102.676471 L854.43074,52.3547794 C854.977232,51.2812446 855.774188,50.4537407 856.821632,49.8722426 C857.869075,49.2907446 858.984814,49 860.16888,49 C861.352947,49 862.400375,49.2236497 863.311195,49.6709559 Z M945,84.3513514 C945,86.0630716 944.407199,87.4819764 943.22158,88.6081081 C942.035961,89.7342399 940.531159,90.2972973 938.707129,90.2972973 L886.722543,90.2972973 C887.72576,96.6036351 890.621363,101.693674 895.409441,105.567568 C900.197519,109.441461 906.057127,111.378378 912.988439,111.378378 C915.724484,111.378378 918.574487,110.882888 921.538536,109.891892 C924.502584,108.900896 926.942187,107.684692 928.857418,106.243243 C930.134239,105.252247 931.639041,104.756757 933.371869,104.756757 C935.104697,104.756757 936.472699,105.207203 937.475915,106.108108 C939.117542,107.459466 939.938343,108.990982 939.938343,110.702703 C939.938343,112.324332 939.208742,113.67567 937.749518,114.756757 C934.648668,117.189201 930.795463,119.171164 926.189788,120.702703 C921.584113,122.234242 917.183708,123 912.988439,123 C905.509918,123 898.806709,121.400917 892.878613,118.202703 C886.950516,115.004489 882.32211,110.567596 878.993256,104.891892 C875.664402,99.2161878 874,92.7748108 874,85.5675676 C874,78.3603243 875.573202,71.896425 878.719653,66.1756757 C881.866104,60.4549264 886.24371,55.9955115 891.852601,52.7972973 C897.461492,49.5990831 903.8227,48 910.936416,48 C917.95893,48 924.023738,49.5315162 929.131021,52.5945946 C934.238304,55.657673 938.159909,59.9369095 940.895954,65.4324324 C943.631998,70.9279554 945,77.2341986 945,84.3513514 Z M911.312312,60 C904.589556,60 899.133154,61.8140408 894.942943,65.4421769 C890.752732,69.0703129 888.105111,73.9228721 887,80 L933,80 C932.171167,73.9228721 929.868888,69.0703129 926.093093,65.4421769 C922.317298,61.8140408 917.390421,60 911.312312,60 Z\",\n  id: \"comfortaa\",\n  stroke: \"#3B4043\",\n  strokeWidth: 1.13558743,\n  fill: \"#3C4043\"\n}), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"line-logo\",\n  stroke: \"#000000\",\n  strokeWidth: 3\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1.4902102,27.7964794 L47.3438839,1.15698977 C47.9650586,0.796107469 48.7320658,0.796104023 49.3532438,1.15698074 L71.2734953,13.8916689 C71.8934484,14.251834 72.2731781,14.9162998 72.2687855,15.6332666 L72.1036633,42.5852199 L95.035662,55.907688 C95.6518298,56.265654 96.0309898,56.9244304 96.0309898,57.6370329 L96.0309898,110.938646 C96.0309898,111.651254 95.6518249,112.310033 95.0356507,112.667998 L49.1837906,139.305482 C48.5616602,139.666907 47.7933413,139.666308 47.1717749,139.303915 L1.4875432,112.668504 C0.872889163,112.31014 0.494897959,111.652214 0.494897959,110.94072 L0.494897959,56.4849362 L0.494897959,29.5258153 C0.494897959,28.8132191 0.874051161,28.1544478 1.4902102,27.7964794 Z\",\n  id: \"Stroke-1\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.2471296,125.887106 L24.2471296,98.0866809 L0.494996939,84.2872482 L47.5201542,111.407958 C48.1414899,111.766299 48.9071419,111.764478 49.526766,111.403185 L96.0310888,84.2872482 L72.2759867,98.1879574 L72.2759867,71.5406471 C72.2759867,70.8269657 71.8956875,70.1673625 71.2780462,69.8097869 L48.2635378,56.4858298 L72.1037622,42.5851206 L25.4059069,69.5090893 C24.7959394,69.8607703 24.0453554,69.8631685 23.433153,69.5153926 L0.494996939,56.4848369\",\n  id: \"Stroke-3\"\n}))));\n\nvar SvgBlocknativeLogo = function SvgBlocknativeLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"948px\",\n    height: \"143px\",\n    viewBox: \"0 0 948 143\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBlocknativeLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/blocknative-logo.b4fb6a29.svg\";\nexport { ForwardRef as ReactComponent };","import {\n    Container,\n    Divider,\n    Header,\n    Icon,\n    Image,\n    List,\n    Popup,\n    Segment,\n} from 'semantic-ui-react'\nimport GitcoinIcon from '../icons/gitcoinIcon.png'\nimport pkg from '../../package.json'\nimport React from 'react'\nimport { ReactComponent as DfuseLogo } from '../icons/dfuse-logo.svg'\nimport { ReactComponent as BlocknativeLogo } from '../icons/blocknative-logo.svg'\n\nconst Footer = () => {\n    return (\n        <Container textAlign='center'>\n            <Divider />\n            <Segment basic>\n                <List horizontal size={'small'} verticalAlign={'bottom'}>\n                    <List.Item\n                        as='a'\n                        href='https://dfuse.io/'\n                        rel='noopener noreferrer'\n                        target='_blank'\n                    >\n                        <List.Content>\n                            <List.Header>\n                                <DfuseLogo height={30} />\n                            </List.Header>\n                            powered by dfuse.io\n                        </List.Content>\n                    </List.Item>\n                    <List.Item\n                        as='a'\n                        href='https://www.blocknative.com/onboard'\n                        rel='noopener noreferrer'\n                        target='_blank'\n                    >\n                        <List.Content>\n                            <List.Header>\n                                <BlocknativeLogo height={22} width={200} />\n                            </List.Header>\n                            powered by Onboard.js\n                        </List.Content>\n                    </List.Item>\n                </List>\n            </Segment>\n            <Segment basic>\n                <List horizontal size={'small'} verticalAlign={'top'}>\n                    <List.Item\n                        as='a'\n                        href='https://twitter.com/TripleSpeeder'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <Popup\n                            content='@triplespeeder'\n                            trigger={<Icon size='big' name='twitter' />}\n                        />\n                    </List.Item>\n                    <List.Item\n                        as='a'\n                        href='https://t.me/triplespeeder'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <Popup\n                            content='@triplespeeder'\n                            trigger={<Icon size='big' name='telegram' />}\n                        />\n                    </List.Item>\n                    <List.Item as='a' href='mailto:michael@m-bauer.org'>\n                        <Popup\n                            content='michael@m-bauer.org'\n                            trigger={<Icon size='big' name='mail outline' />}\n                        />\n                    </List.Item>\n                    <List.Item\n                        as='a'\n                        href='https://github.com/TripleSpeeder/token-allowance-checker'\n                        title='github.com/TripleSpeeder/token-allowance-checker'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <Popup\n                            content='github.com/TripleSpeeder/token-allowance-checker'\n                            trigger={<Icon size='big' name='github' />}\n                        />\n                    </List.Item>\n                    <List.Item\n                        as='a'\n                        href='https://www.reddit.com/u/TripleSpeeder'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <Popup\n                            content='u/TripleSpeeder'\n                            trigger={<Icon size='big' name='reddit' />}\n                        />\n                    </List.Item>\n                    <List.Item\n                        as='a'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={\n                            'https://gitcoin.co/grants/480/token-allowance-checker?tab=description'\n                        }\n                    >\n                        <Popup\n                            content='Gitcoin grant page'\n                            trigger={<Image avatar src={GitcoinIcon} />}\n                        />\n                    </List.Item>\n                    <List.Item>\n                        <Popup\n                            content='Donate to tac.dappstar.eth'\n                            trigger={<Icon size='big' name={'ethereum'} />}\n                        />\n                    </List.Item>\n                </List>\n                <Header size={'tiny'}>\n                    (c) Michael Bauer\n                    <Header.Subheader>v{pkg.version}</Header.Subheader>\n                </Header>\n            </Segment>\n        </Container>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\nimport { HashRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport {\n    Button,\n    Container,\n    Grid,\n    Header,\n    Icon,\n    Segment,\n} from 'semantic-ui-react'\nimport AllowanceLister from '../features/allowancesList/AllowanceLister'\nimport OnboardGate from '../features/onboard/OnboardGate'\nimport AddressInputContainer from '../features/addressInput/AddressInputContainer'\nimport AddressExtractor from '../components/AddressExtractor'\nimport { useSelector } from 'react-redux'\nimport { RootState } from './rootReducer'\nimport ResponsiveApp from './ResponsiveApp'\nimport Footer from './Footer'\n\nconst App: React.FC = () => {\n    const { mobile } = useSelector((state: RootState) => state.respsonsive)\n\n    const size = mobile ? 'small' : 'huge'\n\n    const startButton = (\n        <Segment basic textAlign='center'>\n            <Button primary as={Link} to='/address/' size='massive'>\n                Check Allowances\n                <Icon name='arrow right' />\n            </Button>\n        </Segment>\n    )\n\n    return (\n        <Router>\n            <ResponsiveApp>\n                <Switch>\n                    <Route path={['/address/:address', '/address']}>\n                        <Container>\n                            <OnboardGate>\n                                <AddressExtractor>\n                                    <AddressInputContainer />\n                                    <AllowanceLister />\n                                </AddressExtractor>\n                            </OnboardGate>\n                        </Container>\n                    </Route>\n                    <Route path='/'>\n                        {startButton}\n                        <Segment basic vertical size={size}>\n                            <Grid container stackable verticalAlign='top'>\n                                <Grid.Row>\n                                    <Grid.Column width={8}>\n                                        <Header>Control your approvals</Header>\n                                        <p>\n                                            <em>Token Allowance Checker</em>{' '}\n                                            shows all approvals for your\n                                            ERC20-compliant tokens, and the\n                                            option to change the approved amount\n                                            - or completely zero it.\n                                        </p>\n                                    </Grid.Column>\n                                    <Grid.Column width={8}>\n                                        <Header>\n                                            The unlimited approval problem\n                                        </Header>\n                                        <p>\n                                            Many DApps have the habit of\n                                            requiring you to approve effectively\n                                            unlimited amount of tokens. This\n                                            helps improving the user experience,\n                                            as you only have to sign off an\n                                            approval once and it will be enough\n                                            for all future transactions.\n                                        </p>\n                                        <p>\n                                            However this also means that the\n                                            DApp (or the person/entity\n                                            controlling it) can at any time\n                                            transfer <em>all of your tokens</em>\n                                            , without requiring any further\n                                            approval.\n                                        </p>\n                                        <p>\n                                            In addition, there is no concept of\n                                            expiring approvals. Once approved,\n                                            the approval will remain forever. If\n                                            you do not trust a DApp or its\n                                            operators anymore, there is usually\n                                            no easy way to remove the approval.\n                                        </p>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Segment>\n                    </Route>\n                </Switch>\n                <Footer />\n            </ResponsiveApp>\n        </Router>\n    )\n}\n\nexport default App\n","import { combineReducers } from '@reduxjs/toolkit'\nimport onboardReducer from 'features/onboard/onboardSlice'\nimport addressesReducer from 'features/addressInput/AddressSlice'\nimport tokenContractReducer from 'features/tokenContracts/tokenContractsSlice'\nimport allowancesReducer from 'features/allowancesList/AllowancesListSlice'\nimport balancesReducer from 'features/balances/BalancesSlice'\nimport editAllowanceReducer from 'features/editAllowance/EditAllowanceSlice'\nimport transactionTrackerReducer from 'features/transactionTracker/TransactionTrackerSlice'\nimport responsiveLayoutReducer from 'features/responsiveLayout/responsiveSlice'\n\nconst rootReducer = combineReducers({\n    onboard: onboardReducer,\n    addresses: addressesReducer,\n    tokenContracts: tokenContractReducer,\n    allowances: allowancesReducer,\n    balances: balancesReducer,\n    editAllowance: editAllowanceReducer,\n    transactions: transactionTrackerReducer,\n    respsonsive: responsiveLayoutReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore, Action, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { ThunkAction } from 'redux-thunk'\nimport rootReducer, { RootState } from './rootReducer'\nimport {\n    setOnboardAPI,\n    setWeb3Instance,\n    setWallet,\n} from '../features/onboard/onboardSlice'\nimport { addContract } from 'features/tokenContracts/tokenContractsSlice'\nimport { setAllowanceValue } from 'features/allowancesList/AllowancesListSlice'\nimport { setBalanceValue, addBalance } from 'features/balances/BalancesSlice'\n\nconst customizedMiddleware = getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [\n            setOnboardAPI.type,\n            setWeb3Instance.type,\n            setWallet.type,\n            addContract.type,\n            setAllowanceValue.type,\n            addBalance.type,\n            setBalanceValue.type,\n        ],\n        ignoredPaths: [\n            'onboard.web3',\n            'onboard.wallet',\n            'onboard.onboardAPI',\n            'tokenContracts.contractsById',\n            'allowances.allowanceValuesById',\n            'balances.balancesById',\n        ],\n    },\n    immutableCheck: {\n        ignoredPaths: [\n            'onboard.web3',\n            'onboard.wallet',\n            'onboard.onboardAPI',\n            'tokenContracts.contractsById',\n        ],\n        warnAfter: 100, // ms\n    },\n})\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: customizedMiddleware,\n})\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./rootReducer', () => {\n        const newRootReducer = require('./rootReducer').default\n        store.replaceReducer(newRootReducer)\n    })\n}\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './app/store'\nimport './index.css'\n\nconst render = () => {\n    const App = require('./app/App').default\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    )\n}\n\nrender()\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n    module.hot.accept('./app/App', render)\n}\n","interface Credentials {\n    endpoint: string\n    apikey: string\n}\n\ntype NetworkKeys = {\n    [key: number]: Credentials\n}\n\ntype Site = 'dfuse' | 'etherscan' | 'infura' | 'onboard'\ntype SiteCredentials = {\n    [key in Site]: NetworkKeys\n}\n\nconst apiKeys: SiteCredentials = {\n    dfuse: {\n        1: {\n            endpoint: 'mainnet.eth.dfuse.io',\n            apikey: 'web_085aeaac9c520204b1a9dcaa357e5460',\n        },\n        3: {\n            endpoint: 'ropsten.eth.dfuse.io',\n            apikey: 'web_085aeaac9c520204b1a9dcaa357e5460',\n        },\n    },\n    etherscan: {\n        1: {\n            apikey: 'THS8KWYM6KZ8WBP3DXKUDR7UKCRB8YIRGH',\n            endpoint: 'api.etherscan.io',\n        },\n        3: {\n            apikey: 'THS8KWYM6KZ8WBP3DXKUDR7UKCRB8YIRGH',\n            endpoint: 'api-ropsten.etherscan.io',\n        },\n    },\n    infura: {\n        1: {\n            apikey: '7f230a5ca832426796454c28577d93f2',\n            endpoint: 'mainnet.infura.io/v3/',\n        },\n        3: {\n            apikey: '7f230a5ca832426796454c28577d93f2',\n            endpoint: 'ropsten.infura.io/v3/',\n        },\n    },\n    onboard: {\n        1: {\n            apikey: 'f4b71bf0-fe50-4eeb-bc2b-b323527ed9e6',\n            endpoint: '',\n        },\n        3: {\n            apikey: 'f4b71bf0-fe50-4eeb-bc2b-b323527ed9e6',\n            endpoint: '',\n        },\n    },\n}\n\nexport default apiKeys\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface ResponsiveState {\n    mobile: boolean\n}\n\nconst initialState: ResponsiveState = {\n    mobile: false,\n}\n\nconst responsiveSlice = createSlice({\n    name: 'responsive',\n    initialState: initialState,\n    reducers: {\n        setMobile(state, action: PayloadAction<boolean>) {\n            state.mobile = action.payload\n        },\n    },\n})\n\nexport const { setMobile } = responsiveSlice.actions\n\nexport default responsiveSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AppDispatch, AppThunk } from '../../app/store'\nimport { addContractThunk } from 'features/tokenContracts/tokenContractsSlice'\nimport {\n    addAddressThunk,\n    AddressId,\n    EthAddressPayload,\n    addAddress,\n    fetchEtherscanNameThunk,\n} from '../addressInput/AddressSlice'\nimport BN from 'bn.js'\nimport {\n    TransactionId,\n    addTransaction,\n    EditAllowanceTransaction,\n} from '../transactionTracker/TransactionTrackerSlice'\nimport ERC20Data from '@openzeppelin/contracts/build/contracts/ERC20Detailed.json'\nimport { setNetworkId } from '../onboard/onboardSlice'\nimport { getDfuseClient } from '../../api/dfuse/dfuseio'\nimport createAndVerifyERC20 from '../../utils/contractVerifier'\nimport {\n    checkLogTopic,\n    topicHashApprove,\n    decodeLog,\n    checkDecodedData,\n} from 'utils/logEventVerifier'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst contract = require('@truffle/contract')\n\nconst searchTransactions = `query ($query: String! $limit: Int64! $cursor: String) {\n      searchTransactions(\n        indexName: LOGS, \n        query: $query, \n        limit: $limit, \n        sort: DESC,\n        cursor: $cursor,\n      ) {\n        pageInfo {\n          endCursor\n        }\n        edges {\n          node {\n            hash\n            block {\n              number\n              header {\n                timestamp\n              }\n            }\n            matchingLogs {\n              data\n              topics\n              address\n            }\n          }\n        }\n      }\n    }`\n\nexport type AllowanceId = string\n\nexport interface Allowance {\n    id: AllowanceId\n    tokenContractId: AddressId\n    ownerId: AddressId\n    spenderId: AddressId\n    editTransactionId?: TransactionId\n    lastChangedTimestamp: number\n}\n\nexport interface AllowanceValue {\n    allowanceId: AllowanceId\n    value: BN\n    state: QueryStates\n}\n\nexport enum QueryStates {\n    QUERY_STATE_INITIAL,\n    QUERY_STATE_RUNNING,\n    QUERY_STATE_ERROR,\n    QUERY_STATE_COMPLETE,\n}\n\nexport interface QueryState {\n    state: QueryStates\n    currentPage: number\n    error?: string\n}\n\ninterface AllowancesState {\n    allowancesById: Record<AllowanceId, Allowance>\n    allowanceValuesById: Record<AllowanceId, AllowanceValue>\n    allowanceIdsByOwnerId: Record<AddressId, AllowanceId[]>\n    allowanceQueryStateByOwner: Record<AddressId, QueryState>\n}\n\ninterface AllowancePayload {\n    id: AllowanceId\n    allowance: Allowance\n}\n\ninterface QueryStatePayload {\n    ownerId: AddressId\n    queryState: QueryState\n}\n\n// initial state\nconst initialState: AllowancesState = {\n    allowancesById: {},\n    allowanceValuesById: {},\n    allowanceIdsByOwnerId: {},\n    allowanceQueryStateByOwner: {},\n}\n\nconst defaultQueryStateByOwner: QueryState = {\n    currentPage: 0,\n    state: QueryStates.QUERY_STATE_INITIAL,\n}\n\nexport const buildAllowanceId = (\n    tokenContractId: AddressId,\n    ownerId: AddressId,\n    spenderId: AddressId\n) => {\n    return `${ownerId}-${tokenContractId}-${spenderId}`\n}\n\nconst allowancesSlice = createSlice({\n    name: 'Allowances',\n    initialState: initialState,\n    reducers: {\n        addAllowance: {\n            reducer(state, action: PayloadAction<AllowancePayload>) {\n                const { id, allowance } = action.payload\n                if (Object.keys(state.allowancesById).includes(id)) {\n                    // already known.\n                    return\n                }\n                state.allowancesById[id] = allowance\n                state.allowanceIdsByOwnerId[allowance.ownerId].push(\n                    allowance.id\n                )\n                state.allowanceValuesById[id] = {\n                    allowanceId: id,\n                    state: QueryStates.QUERY_STATE_INITIAL,\n                    value: new BN('-1'),\n                }\n            },\n            prepare(\n                tokenContractId: AddressId,\n                ownerId: AddressId,\n                spenderId: AddressId,\n                timestamp: number\n            ) {\n                const id = buildAllowanceId(tokenContractId, ownerId, spenderId)\n                return {\n                    payload: {\n                        id,\n                        allowance: {\n                            id,\n                            tokenContractId,\n                            ownerId,\n                            spenderId,\n                            lastChangedTimestamp: timestamp,\n                        },\n                    },\n                }\n            },\n        },\n        setQueryState(state, action: PayloadAction<QueryStatePayload>) {\n            const { ownerId, queryState } = action.payload\n            state.allowanceQueryStateByOwner[ownerId] = queryState\n        },\n        setAllowanceValue(state, action: PayloadAction<AllowanceValue>) {\n            const allowanceValue = action.payload\n            state.allowanceValuesById[\n                allowanceValue.allowanceId\n            ] = allowanceValue\n        },\n    },\n    extraReducers: {\n        [addAddress.type](state, action: PayloadAction<EthAddressPayload>) {\n            const { id: ownerId } = action.payload\n            if (Object.keys(state.allowanceIdsByOwnerId).includes(ownerId)) {\n                // owner already known.\n                return\n            }\n            state.allowanceIdsByOwnerId[ownerId] = []\n            state.allowanceQueryStateByOwner[ownerId] = defaultQueryStateByOwner\n        },\n        [addTransaction.type](\n            state,\n            action: PayloadAction<EditAllowanceTransaction>\n        ) {\n            const { allowanceId, transactionId } = action.payload\n            state.allowancesById[allowanceId].editTransactionId = transactionId\n        },\n        [setNetworkId.type](state, action: PayloadAction<number>) {\n            const networkId = action.payload\n            console.log(\n                `Resetting allowances due to network change to ${networkId}`\n            )\n            Object.keys(state.allowanceQueryStateByOwner).forEach((ownerId) => {\n                state.allowanceQueryStateByOwner[\n                    ownerId\n                ] = defaultQueryStateByOwner\n            })\n            Object.keys(state.allowanceIdsByOwnerId).forEach((ownerId) => {\n                state.allowanceIdsByOwnerId[ownerId] = []\n            })\n            state.allowanceValuesById = {}\n            state.allowancesById = {}\n        },\n    },\n})\n\nexport const {\n    addAllowance,\n    setQueryState,\n    setAllowanceValue,\n} = allowancesSlice.actions\n\nexport default allowancesSlice.reducer\n\nexport const fetchAllowanceValueThunk = (\n    allowanceId: AllowanceId\n): AppThunk => async (dispatch: AppDispatch, getState) => {\n    // indicate start of loading\n    dispatch(\n        setAllowanceValue({\n            allowanceId,\n            value: new BN('-1'),\n            state: QueryStates.QUERY_STATE_RUNNING,\n        })\n    )\n\n    const allowance = getState().allowances.allowancesById[allowanceId]\n    const owner = getState().addresses.addressesById[allowance.ownerId]\n    const spender = getState().addresses.addressesById[allowance.spenderId]\n    const tokenContract = getState().tokenContracts.contractsById[\n        allowance.tokenContractId\n    ]\n\n    try {\n        const value = await tokenContract.contractInstance.allowance(\n            owner.address,\n            spender.address\n        )\n        dispatch(\n            setAllowanceValue({\n                allowanceId,\n                value,\n                state: QueryStates.QUERY_STATE_COMPLETE,\n            })\n        )\n    } catch (error) {\n        console.log(\n            `Failed to get allowance from token ${tokenContract.addressId}`\n        )\n        dispatch(\n            setAllowanceValue({\n                allowanceId,\n                value: new BN('-1'),\n                state: QueryStates.QUERY_STATE_ERROR,\n            })\n        )\n    }\n}\n\nexport const fetchAllowancesThunk = (ownerId: AddressId): AppThunk => async (\n    dispatch,\n    getState\n) => {\n    const web3 = getState().onboard.web3\n    if (!web3) {\n        console.log(`Missing web3!`)\n        return\n    }\n    const owner = getState().addresses.addressesById[ownerId]\n    const { networkId } = getState().onboard\n\n    let currentPage = 0\n    // update query state to indicate start of loading\n    dispatch(\n        setQueryState({\n            ownerId,\n            queryState: {\n                state: QueryStates.QUERY_STATE_RUNNING,\n                currentPage,\n            },\n        })\n    )\n\n    // prepare ERC20 contract\n    const erc20Contract = contract(ERC20Data)\n    erc20Contract.setProvider(web3.currentProvider)\n\n    // query dfuse API\n    try {\n        const client = getDfuseClient({ networkId })\n        // search page by page until no more results are found\n        let cursor = ''\n        let numPageResults = 0\n        const badContracts: Array<string> = []\n        const knownContracts: Array<string> = []\n        const knownSpenders: Array<string> = []\n\n        do {\n            console.log(\n                `Getting page ${currentPage}. Last page result: ${numPageResults}.`\n            )\n            const response = await client.graphql(searchTransactions, {\n                variables: {\n                    limit: '50',\n                    query: `topic.0:${topicHashApprove} topic.1:${owner.address}`,\n                    cursor: cursor,\n                },\n            })\n            // abort if any errors reported\n            if (response.errors) {\n                throw response.errors\n            }\n\n            // get actual results\n            const edges = response.data.searchTransactions.edges || []\n            for (let edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n                const { node } = edges[edgeIndex]\n                const timestamp = parseInt(node.block.header.timestamp)\n                for (let index = 0; index < node.matchingLogs.length; index++) {\n                    const logEntry = node.matchingLogs[index]\n                    const tokenContractAddress = logEntry.address.toLowerCase()\n\n                    if (badContracts.includes(tokenContractAddress)) {\n                        // skip logEvents created by already-known bad contracts\n                        continue\n                    }\n\n                    if (!checkLogTopic(logEntry)) {\n                        // issues with topic indicate a problem on dfuse side. Ignore this\n                        // logEvent, but do not blacklist contract.\n                        continue\n                    }\n\n                    const decoded = decodeLog(logEntry, web3)\n                    if (!decoded) {\n                        // If decoding fails, blacklist contract\n                        badContracts.push(tokenContractAddress)\n                        continue\n                    }\n\n                    if (\n                        !checkDecodedData(\n                            decoded.spender,\n                            decoded.owner,\n                            owner.address\n                        )\n                    ) {\n                        // ignore logEvents with inplausible data, but do not blacklist contract\n                        continue\n                    }\n\n                    // pre-checks passed. Now check contract\n                    if (!knownContracts.includes(tokenContractAddress)) {\n                        const contractInstance = await createAndVerifyERC20({\n                            erc20Contract,\n                            contractAddress: tokenContractAddress,\n                        })\n                        if (contractInstance) {\n                            knownContracts.push(tokenContractAddress)\n                            // console.log(`Adding tokenContract ${tokenContractAddress}`)\n                            dispatch(addContractThunk(contractInstance))\n                        } else {\n                            // contract failed verification\n                            badContracts.push(tokenContractAddress)\n                            continue\n                        }\n                    }\n\n                    // All checks passed. Now add spender address\n                    const spenderAddress = decoded.spender.toLowerCase()\n                    if (!knownSpenders.includes(spenderAddress)) {\n                        knownSpenders.push(spenderAddress)\n                        // console.log(`Adding Spender ${spenderAddress} for ${tokenContractAddress}`)\n                        dispatch(addAddressThunk(spenderAddress))\n                        // look for spender contract name on Etherscan\n                        dispatch(fetchEtherscanNameThunk(spenderAddress))\n                    }\n\n                    // Finally add allowance entry\n                    dispatch(\n                        addAllowance(\n                            tokenContractAddress,\n                            ownerId,\n                            spenderAddress,\n                            timestamp\n                        )\n                    )\n                }\n            }\n            numPageResults = edges.length\n            currentPage++\n            // get start cursor for next page\n            cursor = response.data.searchTransactions.pageInfo.endCursor\n            dispatch(\n                setQueryState({\n                    ownerId,\n                    queryState: {\n                        state: QueryStates.QUERY_STATE_RUNNING,\n                        currentPage,\n                    },\n                })\n            )\n        } while (numPageResults > 0)\n\n        dispatch(\n            setQueryState({\n                ownerId,\n                queryState: {\n                    state: QueryStates.QUERY_STATE_COMPLETE,\n                    currentPage,\n                },\n            })\n        )\n    } catch (errors) {\n        console.log(errors)\n        dispatch(\n            setQueryState({\n                ownerId,\n                queryState: {\n                    state: QueryStates.QUERY_STATE_ERROR,\n                    currentPage,\n                    error: JSON.stringify(errors),\n                },\n            })\n        )\n    }\n}\n","import { createDfuseClient } from '@dfuse/client'\nimport apiKeys from '../apikeys'\n\ninterface CreateClientParams {\n    networkId: number\n}\n\nconst getDfuseClient = ({ networkId }: CreateClientParams) => {\n    const credentials = apiKeys.dfuse[networkId]\n    if (!credentials) {\n        throw Error(`Network ${networkId} not supported by dfuse.io`)\n    }\n\n    return createDfuseClient({\n        apiKey: credentials.apikey,\n        network: credentials.endpoint,\n    })\n}\n\nexport { getDfuseClient }\n","import { ERC20DetailedContract, ERC20DetailedInstance } from '../contracts'\n\ninterface VerifierParams {\n    erc20Contract: ERC20DetailedContract\n    contractAddress: string\n}\n\nconst createAndVerifyERC20 = async ({\n    erc20Contract,\n    contractAddress,\n}: VerifierParams) => {\n    let contractInstance: ERC20DetailedInstance\n\n    // instantiate contract\n    try {\n        contractInstance = await erc20Contract.at(contractAddress)\n    } catch (error) {\n        console.log(\n            `Error instantiating contract at ${contractAddress}: ${error}`\n        )\n        return false\n    }\n\n    // check required methods by calling them\n    try {\n        await contractInstance.totalSupply()\n        await contractInstance.balanceOf(contractAddress)\n        await contractInstance.allowance(contractAddress, contractAddress)\n        // TODO: Check if approve() method is available!\n    } catch (error) {\n        console.log(\n            `Contract at ${contractAddress} does not implement required ERC20 methods.`\n        )\n        return false\n    }\n\n    return contractInstance\n}\n\nexport default createAndVerifyERC20\n","export const topicHashApprove =\n    '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925'\n\nexport const eventABI = [\n    {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n    },\n    {\n        indexed: true,\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n    },\n    {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n    },\n]\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const checkLogTopic = (logEntry: any) => {\n    // Apparently dfuse query results based on topic sometimes return wrong topics. Double-check that the\n    // logEntry actually is of the expected topic.\n    if (logEntry.topics[0] !== topicHashApprove) {\n        console.log(\n            `Skipping log event. Topic is wrong, expected ${topicHashApprove}, got ${logEntry.topics[0]}.`\n        )\n        return false\n    }\n    return true\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const decodeLog = (logEntry: any, web3: Web3) => {\n    if (logEntry.data === '0x') {\n        console.log(\n            `Detected bad contract at ${logEntry.address}: LogEntry.data is missing.`\n        )\n        return false\n    }\n    let decoded\n    try {\n        decoded = web3.eth.abi.decodeLog(\n            eventABI,\n            logEntry.data,\n            logEntry.topics.slice(1)\n        )\n    } catch (e) {\n        console.log(\n            `Detected bad contract at ${logEntry.address}: Can not decode logEntry:`\n        )\n        console.log(logEntry)\n        return false\n    }\n    return decoded\n}\n\nexport const checkDecodedData = (\n    spender: string,\n    owner: string,\n    expectedOwner: string\n) => {\n    // check if spender is not zero. Some contracts emit logs with spender 0x0...\n    if (!parseInt(spender)) {\n        console.log(`Skipping log event: Invalid spender ${spender}`)\n        return false\n    }\n\n    if (owner.toLowerCase() !== expectedOwner.toLowerCase()) {\n        console.log(\n            `Skipping log event due to owner mismatch. Expected ${expectedOwner}, got ${owner}`\n        )\n        return false\n    }\n\n    return true\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport namehash from 'eth-ens-namehash'\nimport { AppDispatch, AppThunk } from '../../app/store'\nimport * as H from 'history'\n\nexport const zeroAddress = '0x0000000000000000000000000000000000000000'\n\nexport enum ResolvingStates {\n    Initial,\n    ResolvingForward,\n    ResolvingReverse,\n    Resolved,\n}\n\nexport enum CheckAddressStates {\n    Initial,\n    Resolving,\n    Valid,\n    Invalid,\n}\n\nexport type AddressId = string\n\n// the plain address data without internal info like ID or resolving state\nexport interface EthAddress {\n    address: string // the actual address\n    ensName?: string // ensName for this address\n    resolvingState: ResolvingStates\n    esContractName?: string\n}\n\nexport interface EthAddressPayload {\n    id: AddressId\n    ethAddress: EthAddress\n}\n\ninterface EtherscanContractNamePayload {\n    id: AddressId\n    esContractName: string\n}\n\ninterface ResolvingStatePayload {\n    id: AddressId\n    resolvingState: ResolvingStates\n}\n\ninterface ENSNamePayload {\n    id: AddressId\n    ensName: string\n}\n\n// The state contains all known EthAddressess, indexed by the address id\ninterface EthAddressesState {\n    addressesById: Record<AddressId, EthAddress>\n    checkAddressId: AddressId | undefined\n    checkAddressState: CheckAddressStates\n    walletAddressId: AddressId | undefined\n    prevWalletAddressId: AddressId | undefined\n}\n\n// initial state\nconst initialState: EthAddressesState = {\n    addressesById: {},\n    walletAddressId: undefined,\n    prevWalletAddressId: undefined,\n    checkAddressId: undefined,\n    checkAddressState: CheckAddressStates.Initial,\n}\n\nconst addressSlice = createSlice({\n    name: 'ethAddresses',\n    initialState: initialState,\n    reducers: {\n        addAddress: {\n            reducer(state, action: PayloadAction<EthAddressPayload>) {\n                const { id, ethAddress } = action.payload\n                state.addressesById[id] = ethAddress\n            },\n            prepare(address: string, ensName?: string) {\n                address = address.toLowerCase()\n                return {\n                    payload: {\n                        id: address,\n                        ethAddress: {\n                            address: address,\n                            resolvingState: ResolvingStates.Initial,\n                            ensName,\n                        },\n                    },\n                }\n            },\n        },\n        setResolvingState(state, action: PayloadAction<ResolvingStatePayload>) {\n            const { id, resolvingState } = action.payload\n            state.addressesById[id].resolvingState = resolvingState\n        },\n        setENSName(state, action: PayloadAction<ENSNamePayload>) {\n            const { id, ensName } = action.payload\n            state.addressesById[id].ensName = ensName\n        },\n        setCheckAddressId(state, action: PayloadAction<AddressId>) {\n            state.checkAddressId = action.payload\n        },\n        setCheckAddressState(state, action: PayloadAction<CheckAddressStates>) {\n            state.checkAddressState = action.payload\n        },\n        setWalletAddressId(state, action: PayloadAction<AddressId>) {\n            state.prevWalletAddressId = state.walletAddressId\n            state.walletAddressId = action.payload\n        },\n        setEtherscanContractName(\n            state,\n            action: PayloadAction<EtherscanContractNamePayload>\n        ) {\n            const { id, esContractName } = action.payload\n            state.addressesById[id].esContractName = esContractName\n        },\n    },\n})\n\nexport const {\n    addAddress,\n    setResolvingState,\n    setENSName,\n    setCheckAddressId,\n    setCheckAddressState,\n    setWalletAddressId,\n    setEtherscanContractName,\n} = addressSlice.actions\n\nexport default addressSlice.reducer\n\nexport const fetchEtherscanNameThunk = (\n    addressId: AddressId\n): AppThunk => async (dispatch: AppDispatch, getState) => {\n    const { networkId } = getState().onboard\n    const apiKey = 'THS8KWYM6KZ8WBP3DXKUDR7UKCRB8YIRGH'\n    let apiHost\n    switch (networkId) {\n        case 1:\n            // mainnet\n            apiHost = 'api.etherscan.io'\n            break\n        case 3:\n            // Ropsten\n            apiHost = 'api-ropsten.etherscan.io'\n            break\n        default:\n            throw Error(`Network ${networkId} not supported`)\n    }\n    const requestUrl = `https://${apiHost}/api?module=contract&action=getsourcecode&address=${addressId}&apikey=${apiKey}`\n    const response = await fetch(requestUrl)\n    const data = await response.json()\n    if (data.message === 'OK') {\n        const contractName: string = data?.result[0]?.ContractName\n        if (contractName?.length) {\n            dispatch(\n                setEtherscanContractName({\n                    id: addressId,\n                    esContractName: contractName,\n                })\n            )\n        }\n    } else {\n        console.log(\n            `Got message ${data.message} fetching contract data from Etherscan API.`\n        )\n    }\n}\n\n/*\n *  Lookup ENS name and add resolved address if successfull\n */\nconst resolveAndAddENSName = (\n    ensName: string,\n    dispatch: AppDispatch,\n    web3: Web3\n) => {\n    return new Promise<AddressId>(async (resolve, reject) => {\n        console.log(`Start resolveAndAddENSName for ${ensName}`)\n        let resolvedAddress\n        try {\n            resolvedAddress = (\n                await web3.eth.ens.getAddress(ensName)\n            ).toLowerCase()\n            console.log(`Resolved ${ensName} to ${resolvedAddress}`)\n            dispatch(addAddress(resolvedAddress, ensName))\n        } catch (e) {\n            console.log('Could not resolve ' + ensName)\n            reject('Could not resolve ' + ensName)\n        }\n        console.log(`End resolveAndAddENSName for ${ensName}`)\n        resolve(resolvedAddress)\n    })\n}\n\n/*\n * Add address and do reverse ENS lookup in background\n */\nconst resolveAndAddAddress = (\n    address: string,\n    dispatch: AppDispatch,\n    web3: Web3\n) => {\n    return new Promise<AddressId>(async resolve => {\n        // first add plain address\n        dispatch(addAddress(address))\n\n        // look for reverse ENS name\n        dispatch(\n            setResolvingState({\n                id: address,\n                resolvingState: ResolvingStates.ResolvingReverse,\n            })\n        )\n        try {\n            const reverseENSLookupName = address.substr(2) + '.addr.reverse'\n            const ResolverContract = await web3.eth.ens.resolver(\n                reverseENSLookupName\n            )\n            const reverseENS = await ResolverContract.methods\n                .name(namehash.hash(reverseENSLookupName))\n                .call()\n            console.log(`Got reverseENS: ${reverseENS}`)\n            // add ENS name to plain address\n            dispatch(\n                setENSName({\n                    id: address,\n                    ensName: reverseENS,\n                })\n            )\n        } catch (error) {\n            // console.log(`Error getting reverse ENS: ${error}`)\n        }\n        dispatch(\n            setResolvingState({\n                id: address,\n                resolvingState: ResolvingStates.Resolved,\n            })\n        )\n        resolve(address)\n    })\n}\n\nexport const redirectToAddress = (\n    addressId: AddressId,\n    history: H.History,\n    replace = false\n): AppThunk => (dispatch: AppDispatch, getState) => {\n    addressId = addressId.toLowerCase()\n    const checkAddress = getState().addresses.addressesById[addressId]\n    // history.push(`/address/${checkAddress.ensName ?? checkAddress.address}`)\n    const func = replace ? history.replace : history.push\n    if (checkAddress.ensName) {\n        console.log(`Routing to /address/${checkAddress.ensName}`)\n        func(`/address/${checkAddress.ensName}`)\n    } else {\n        console.log(`Routing to /address/${checkAddress.address}`)\n        func(`/address/${checkAddress.address}`)\n    }\n}\n\nexport const addAddressThunk = (\n    address: string,\n    history: H.History | undefined = undefined\n): AppThunk => async (dispatch: AppDispatch, getState) => {\n    const web3 = getState().onboard.web3\n    address = address.toLowerCase()\n    let addressId\n    if (address.endsWith('.eth')) {\n        // is ENS name already known?\n        const known = Object.values(getState().addresses.addressesById).filter(\n            addressEntry => addressEntry?.ensName?.toLowerCase() === address\n        )\n        addressId = known.length ? known[0].address : undefined\n        if (!addressId) {\n            // not known, try to resolve it\n            try {\n                addressId = await resolveAndAddENSName(address, dispatch, web3)\n            } catch (e) {\n                // provided name can not be resolved\n                return\n            }\n        }\n    } else {\n        // address is plain eth address\n        addressId = address\n        // is address already known?\n        if (\n            !Object.keys(getState().addresses.addressesById).includes(address)\n        ) {\n            // add address and look for reverse ENS in background\n            addressId = await resolveAndAddAddress(address, dispatch, web3)\n        }\n    }\n    // redirect to address if requested\n    history && dispatch(redirectToAddress(addressId, history))\n}\n\nexport const setAddressFromParamsThunk = (\n    checkAddress: string\n): AppThunk => async (dispatch: AppDispatch, getState) => {\n    const web3 = getState().onboard.web3\n    if (!web3) {\n        console.log(`Cant set address ${checkAddress} - web3 missing!`)\n        return\n    }\n\n    if (checkAddress.endsWith('.eth')) {\n        // checkAddress is ENS name\n        // TODO: dispatch(setCheckAddressENSName(checkAddress)\n        dispatch(setCheckAddressState(CheckAddressStates.Resolving))\n        try {\n            const addressId = await resolveAndAddENSName(\n                checkAddress,\n                dispatch,\n                web3\n            )\n            if (addressId === zeroAddress) {\n                throw Error(`${checkAddress} resolved to ${zeroAddress}`)\n            } else {\n                dispatch(setCheckAddressId(addressId))\n                dispatch(setCheckAddressState(CheckAddressStates.Valid))\n            }\n        } catch (e) {\n            dispatch(setCheckAddressState(CheckAddressStates.Invalid))\n        }\n    } else {\n        // checkAddress is plain eth address.\n        checkAddress = checkAddress.toLowerCase()\n        const validAddress = /^(0x)?[0-9a-f]{40}$/i.test(checkAddress)\n        if (validAddress) {\n            resolveAndAddAddress(checkAddress, dispatch, web3)\n            dispatch(setCheckAddressState(CheckAddressStates.Valid))\n            dispatch(setCheckAddressId(checkAddress))\n        } else {\n            dispatch(setCheckAddressState(CheckAddressStates.Invalid))\n        }\n    }\n}\n\nexport const setWalletAddressThunk = (\n    walletAddressId: string,\n    history: H.History\n): AppThunk => async (dispatch: AppDispatch, getState) => {\n    if (\n        !Object.keys(getState().addresses.addressesById).includes(\n            walletAddressId\n        )\n    ) {\n        console.log(`Got new address from wallet: ${walletAddressId}`)\n        const web3 = getState().onboard.web3\n        await resolveAndAddAddress(walletAddressId, dispatch, web3)\n    } else {\n        console.log(`Got known address from wallet: ${walletAddressId}`)\n    }\n    dispatch(setWalletAddressId(walletAddressId))\n\n    // When user changes the wallet address, assume that he wants to check the selected address\n    const prevWalletAddressId = getState().addresses.prevWalletAddressId\n    if (prevWalletAddressId && prevWalletAddressId !== walletAddressId) {\n        console.log(\n            `setWalletAddressThunk: redirecting to new wallet address ${walletAddressId}`\n        )\n        dispatch(redirectToAddress(walletAddressId, history))\n    }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport Onboard from 'bnc-onboard'\nimport Web3 from 'web3'\nimport * as H from 'history'\nimport { AppDispatch, AppThunk } from '../../app/store'\nimport { API, Wallet, WalletInitOptions } from 'bnc-onboard/dist/src/interfaces'\nimport { setWalletAddressThunk } from '../addressInput/AddressSlice'\nimport apiKeys from '../../api/apikeys'\n\nconst infuraCredentials = apiKeys.infura[1]\nconst onboardCredentials = apiKeys.onboard[1]\n\nconst wallets: Partial<WalletInitOptions>[] = [\n    { walletName: 'metamask' },\n    { walletName: 'coinbase' },\n    {\n        walletName: 'walletConnect',\n        infuraKey: infuraCredentials.apikey,\n    },\n    { walletName: 'tokenpocket' },\n    {\n        walletName: 'ledger',\n        rpcUrl: `${infuraCredentials.endpoint}${infuraCredentials.apikey}`,\n    },\n    {\n        walletName: 'trezor',\n        appUrl: 'https://tac.dappstar.io',\n        email: 'michael@m-bauer.org',\n        rpcUrl: `${infuraCredentials.endpoint}${infuraCredentials.apikey}`,\n    },\n    { walletName: 'status' },\n    { walletName: 'trust' },\n    { walletName: 'dapper' },\n    { walletName: 'authereum' },\n    { walletName: 'opera' },\n    { walletName: 'operaTouch' },\n    { walletName: 'torus' },\n    { walletName: 'unilogin' },\n    {\n        walletName: 'imToken',\n        rpcUrl: `${infuraCredentials.endpoint}${infuraCredentials.apikey}`,\n    },\n    {\n        walletName: 'huobiwallet',\n        rpcUrl: `${infuraCredentials.endpoint}${infuraCredentials.apikey}`,\n    },\n]\n\n// Define contents of onboard state\ninterface OnboardState {\n    onboardAPI: API | null\n    web3?: Web3\n    wallet?: Wallet\n    networkId: number\n    requiredNetworkId: number\n}\n\nconst initialState: OnboardState = {\n    networkId: 0,\n    requiredNetworkId: 1,\n    onboardAPI: null,\n    wallet: undefined,\n}\n\nconst onboardSlice = createSlice({\n    name: 'onboard',\n    initialState: initialState,\n    reducers: {\n        setOnboardAPI(state, action: PayloadAction<API>) {\n            state.onboardAPI = action.payload\n        },\n        setWallet(state, action: PayloadAction<Wallet>) {\n            state.wallet = action.payload\n        },\n        setWeb3Instance(state, action: PayloadAction<Web3>) {\n            state.web3 = action.payload\n        },\n        setNetworkId(state, action: PayloadAction<number>) {\n            state.networkId = action.payload\n        },\n        setRequiredNetworkId(state, action: PayloadAction<number>) {\n            state.requiredNetworkId = action.payload\n        },\n    },\n})\n\nexport const {\n    setOnboardAPI,\n    setNetworkId,\n    setWeb3Instance,\n    setWallet,\n    setRequiredNetworkId,\n} = onboardSlice.actions\n\nexport default onboardSlice.reducer\n\nexport const checkWallet = (): AppThunk => async (\n    dispatch: AppDispatch,\n    getState\n) => {\n    console.log(`checking wallet...`)\n    const onboardAPI = getState().onboard.onboardAPI\n    if (onboardAPI) {\n        const result = await onboardAPI.walletCheck()\n        console.log(`walletCheck result: ${result}`)\n    } else {\n        console.log(`dispatched checkWallet() without initialization...`)\n    }\n}\n\nexport const selectWallet = (history: H.History): AppThunk => async (\n    dispatch: AppDispatch,\n    getState\n) => {\n    console.log(`Selecting wallet...`)\n    const onboardAPI = getState().onboard.onboardAPI\n    if (onboardAPI) {\n        const result = await onboardAPI.walletSelect()\n        if (!result) {\n            // user closed modal without selecting a wallet. If there was a\n            // wallet selected previously just keep using it. Otherwise, send\n            // her back to home page.\n            // Should actually just check for getState().wallet below, but unfortunately the wallet object is\n            // existing in onboardAPI.getState(), but all members are 'null'. This is not expected\n            // according to typescript defintions.\n            if (!onboardAPI.getState().wallet?.name) {\n                console.log(`No wallet selected.`)\n                history.push('/')\n            }\n        } else {\n            // to get access to account\n            dispatch(checkWallet())\n        }\n    } else {\n        console.log(`dispatched selectWallet() without initialization...`)\n    }\n}\n\nexport const setRequiredNetworkIdThunk = (networkId: number): AppThunk => (\n    dispatch: AppDispatch,\n    getState\n) => {\n    dispatch(setRequiredNetworkId(networkId))\n    const onboardAPI = getState().onboard.onboardAPI\n    if (onboardAPI) {\n        // update existing onboardAPI object\n        onboardAPI.config({ networkId: networkId })\n        // issue checkWallet to make sure user has selected expected network in e.g. Metamask\n        dispatch(checkWallet())\n    } else {\n        // onboardAPI not yet initialized\n    }\n}\n\nexport const initialize = (history: H.History): AppThunk => async (\n    dispatch: AppDispatch,\n    getState\n) => {\n    const requiredNetworkId = getState().onboard.requiredNetworkId\n    console.log(`Initializing OnBoard.js for networkId ${requiredNetworkId}...`)\n    const onboard = Onboard({\n        dappId: onboardCredentials.apikey,\n        networkId: requiredNetworkId,\n        hideBranding: false,\n        subscriptions: {\n            wallet: (wallet) => {\n                // store selected wallet\n                dispatch(setWallet(wallet))\n                dispatch(setWeb3Instance(new Web3(wallet.provider)))\n            },\n            address: (addressId) => {\n                if (addressId) {\n                    console.log(`Wallet address changed to ${addressId}!`)\n                    dispatch(\n                        setWalletAddressThunk(addressId.toLowerCase(), history)\n                    )\n                } else {\n                    console.log(`No access to wallet address`)\n                }\n            },\n            network: (networkId) => {\n                const prevNetworkId = getState().onboard.networkId\n                if (prevNetworkId !== 0 && prevNetworkId !== networkId) {\n                    console.log(\n                        `Switching network from ${prevNetworkId} to ${networkId}`\n                    )\n                }\n                dispatch(setRequiredNetworkIdThunk(networkId))\n                dispatch(setNetworkId(networkId))\n            },\n            balance: () => {\n                /* do nothing*/\n            },\n        },\n        walletSelect: {\n            heading: '',\n            description: '',\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            wallets: wallets,\n        },\n    })\n    dispatch(setOnboardAPI(onboard))\n}\n","import { AllowanceId } from '../allowancesList/AllowancesListSlice'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport enum TransactionStates {\n    INITIAL,\n    SUBMITTED,\n    CONFIRMED,\n    FAILED,\n}\n\nexport type TransactionId = string\nexport interface EditAllowanceTransaction {\n    transactionId: TransactionId\n    allowanceId: AllowanceId\n    transactionState: TransactionStates\n    transactionHash?: string\n    error?: string\n}\n\ninterface TransactionTrackerState {\n    transactionsById: Record<TransactionId, EditAllowanceTransaction>\n}\n\ninterface UpdateTransactionPayload {\n    transactionId: TransactionId\n    transactionState?: TransactionStates\n    transactionHash?: string\n    error?: string\n}\n\nconst initialState: TransactionTrackerState = {\n    transactionsById: {},\n}\n\nconst TransactionTrackerSlice = createSlice({\n    name: 'transactionTracker',\n    initialState: initialState,\n    reducers: {\n        addTransaction(state, action: PayloadAction<EditAllowanceTransaction>) {\n            const editAllowanceTransaction = action.payload\n            state.transactionsById[\n                editAllowanceTransaction.transactionId\n            ] = editAllowanceTransaction\n        },\n        updateTransaction(\n            state,\n            action: PayloadAction<UpdateTransactionPayload>\n        ) {\n            const {\n                transactionId,\n                transactionState,\n                error,\n                transactionHash,\n            } = action.payload\n            transactionState &&\n                (state.transactionsById[\n                    transactionId\n                ].transactionState = transactionState)\n            error && (state.transactionsById[transactionId].error = error)\n            transactionHash &&\n                (state.transactionsById[\n                    transactionId\n                ].transactionHash = transactionHash)\n        },\n    },\n})\n\nexport const {\n    addTransaction,\n    updateTransaction,\n} = TransactionTrackerSlice.actions\nexport default TransactionTrackerSlice.reducer\n","module.exports = __webpack_public_path__ + \"static/media/gitcoinIcon.2c2a98ad.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 871;","interface ContractMetadata {\n    name: string\n    symbol: string\n}\ninterface ContractInfo {\n    [key: string]: ContractMetadata\n}\n\nexport interface WellKnownContracts {\n    [key: number]: ContractInfo\n}\n\nexport const wellKnownContracts: WellKnownContracts = {\n    // main network\n    1: {\n        '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359': {\n            name: 'Sai Stablecoin',\n            symbol: 'SAI',\n        },\n        '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2': {\n            name: 'Maker Token',\n            symbol: 'MKR',\n        },\n        '0xecf8f87f810ecf450940c9f60066b4a7a501d6a7': {\n            name: 'Old Wrapped Ether',\n            symbol: 'WETH',\n        },\n        '0xc66ea802717bfb9833400264dd12c2bceaa34a6d': {\n            name: 'Old Maker Token',\n            symbol: 'MKR',\n        },\n        '0xbb9bc244d798123fde783fcc1c72d3bb8c189413': {\n            name: 'TheDAO Token',\n            symbol: 'TheDAO',\n        },\n        '0x86fa049857e0209aa7d9e616f7eb3b3b78ecfdb0': {\n            name: 'EOS: Old Token',\n            symbol: 'EOS',\n        },\n    },\n    // Ropsten\n    3: {},\n}\n\nexport default wellKnownContracts\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { v4 as uuidv4 } from 'uuid'\nimport { AppThunk } from '../../app/store'\nimport wellKnownContracts from '../../utils/wellKnownContracts'\nimport { ERC20DetailedInstance } from '../../contracts'\nimport ERC20Detailed from 'contracts'\nimport { AddressId, addAddressThunk } from 'features/addressInput/AddressSlice'\nimport {\n    AllowanceId,\n    fetchAllowanceValueThunk,\n} from '../allowancesList/AllowancesListSlice'\nimport {\n    addTransaction,\n    TransactionStates,\n    updateTransaction,\n} from 'features/transactionTracker/TransactionTrackerSlice'\nimport BN from 'bn.js'\nimport { setNetworkId } from '../onboard/onboardSlice'\n\ninterface TokenContract {\n    addressId: AddressId\n    name: string\n    symbol: string\n    decimals: BN\n    totalSupply: BN\n    contractInstance: ERC20DetailedInstance\n}\ninterface TokenContractPayload {\n    id: AddressId\n    tokenContract: TokenContract\n}\n\ninterface TokenContractsState {\n    contractsById: Record<AddressId, TokenContract>\n}\n\nconst initialState: TokenContractsState = {\n    contractsById: {},\n}\n\nconst tokenContractSlice = createSlice({\n    name: 'tokenContracts',\n    initialState: initialState,\n    reducers: {\n        addContract: {\n            reducer(state, action: PayloadAction<TokenContractPayload>) {\n                const { id, tokenContract } = action.payload\n                state.contractsById[id] = tokenContract\n            },\n            prepare(\n                contractAddress: AddressId,\n                tokenName: string,\n                tokenSymbol: string,\n                decimals: BN,\n                totalSupply: BN,\n                contractInstance: ERC20Detailed.ERC20DetailedInstance\n            ) {\n                return {\n                    payload: {\n                        id: contractAddress,\n                        tokenContract: {\n                            addressId: contractAddress,\n                            name: tokenName,\n                            symbol: tokenSymbol,\n                            decimals,\n                            totalSupply,\n                            contractInstance,\n                        },\n                    },\n                }\n            },\n        },\n    },\n    extraReducers: {\n        [setNetworkId.type](state, action: PayloadAction<number>) {\n            const networkId = action.payload\n            console.log(\n                `Clearing token contracts due to network change to ${networkId}`\n            )\n            state.contractsById = {}\n        },\n    },\n})\n\nexport const { addContract } = tokenContractSlice.actions\n\nexport default tokenContractSlice.reducer\n\nexport const addContractThunk = (\n    contractInstance: ERC20Detailed.ERC20DetailedInstance\n): AppThunk => async (dispatch, getState) => {\n    const { networkId } = getState().onboard\n    const contractAddress = contractInstance.address.toLowerCase()\n    let tokenName = ''\n    let tokenSymbol = ''\n    // Some contracts like MKR and SAI do not implement the correct ERC20 name and symbol.\n    // Get their data from hardocded fallback\n    if (Object.keys(wellKnownContracts[networkId]).includes(contractAddress)) {\n        tokenName = wellKnownContracts[networkId][contractAddress].name\n        tokenSymbol = wellKnownContracts[networkId][contractAddress].symbol\n    } else {\n        try {\n            tokenName = await contractInstance.name()\n            tokenSymbol = await contractInstance.symbol()\n        } catch (error) {\n            // Most likely token contract does not implement the name() method. Ignore error.\n            console.log(`Failed to get name/symbol of contract at ${contractAddress}. Please raise\n                an issue to add this token at https://github.com/TripleSpeeder/token-allowance-checker/issues!`)\n        }\n    }\n    let decimals = new BN('0')\n    try {\n        decimals = await contractInstance.decimals()\n    } catch (error) {\n        console.log(\n            `Contract at ${contractAddress} does not provide decimals(). Assuming 0.`\n        )\n    }\n    let totalSupply\n    try {\n        totalSupply = await contractInstance.totalSupply()\n    } catch (error) {\n        console.log(\n            `Failed to call totalSupply() at ${contractAddress}. Ignoring contract.`\n        )\n        return\n    }\n    dispatch(addAddressThunk(contractAddress))\n    dispatch(\n        addContract(\n            contractAddress,\n            tokenName,\n            tokenSymbol,\n            decimals,\n            totalSupply,\n            contractInstance\n        )\n    )\n}\n\nexport const setAllowanceThunk = (\n    tokenContractId: AddressId,\n    spender: AddressId,\n    allowance: BN,\n    allowanceId: AllowanceId\n): AppThunk => async (dispatch, getState) => {\n    console.log(\n        `Setting new allowance ${allowance.toString()} for tokenContractId ${tokenContractId}`\n    )\n    const { contractInstance } = getState().tokenContracts.contractsById[\n        tokenContractId\n    ]\n    const { walletAddressId } = getState().addresses\n    const transactionId: string = uuidv4()\n    dispatch(\n        addTransaction({\n            transactionId,\n            allowanceId,\n            transactionState: TransactionStates.SUBMITTED,\n        })\n    )\n    try {\n        const result = await contractInstance.approve(\n            spender,\n            allowance.toString(),\n            {\n                from: walletAddressId,\n            }\n        )\n        console.log(`transaction confirmed: ${result.tx}. Reloading allowance.`)\n        dispatch(\n            updateTransaction({\n                transactionId,\n                transactionState: TransactionStates.CONFIRMED,\n                transactionHash: result.tx,\n            })\n        )\n        dispatch(fetchAllowanceValueThunk(allowanceId))\n    } catch (e) {\n        console.log(`Error while approving: ${e.message}`)\n        dispatch(\n            updateTransaction({\n                transactionId,\n                transactionState: TransactionStates.FAILED,\n                error: e.message,\n            })\n        )\n    }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AddressId } from 'features/addressInput/AddressSlice'\nimport { QueryStates } from '../allowancesList/AllowancesListSlice'\nimport BN from 'bn.js'\nimport { AppDispatch, AppThunk } from '../../app/store'\n\nexport type BalanceId = string\n\ninterface Balance {\n    id: BalanceId\n    addressId: AddressId\n    tokenContractId: AddressId\n    queryState: QueryStates\n    value: BN\n}\n\ninterface BalancePayload {\n    id: BalanceId\n    balance: Balance\n}\n\ninterface ValuePayload {\n    id: BalanceId\n    value: BN\n}\n\ninterface QueryStatePayload {\n    id: BalanceId\n    queryState: QueryStates\n}\n\ninterface BalancesState {\n    balancesById: Record<BalanceId, Balance>\n}\n\nconst initialState: BalancesState = {\n    balancesById: {},\n}\n\nconst balancesSlice = createSlice({\n    name: 'balances',\n    initialState: initialState,\n    reducers: {\n        addBalance: {\n            reducer(state, action: PayloadAction<BalancePayload>) {\n                const { id, balance } = action.payload\n                state.balancesById[id] = balance\n            },\n            prepare(\n                id: BalanceId,\n                addressId: AddressId,\n                tokenContractId: AddressId\n            ) {\n                return {\n                    payload: {\n                        id: id,\n                        balance: {\n                            id,\n                            addressId,\n                            tokenContractId,\n                            queryState: QueryStates.QUERY_STATE_INITIAL,\n                            value: new BN('-1'),\n                        },\n                    },\n                }\n            },\n        },\n        setBalanceValue(state, action: PayloadAction<ValuePayload>) {\n            const { id, value } = action.payload\n            state.balancesById[id].value = value\n        },\n        setBalanceQuerystate(state, action: PayloadAction<QueryStatePayload>) {\n            const { id, queryState } = action.payload\n            state.balancesById[id].queryState = queryState\n        },\n    },\n})\n\nexport const buildBalanceId = (\n    addressId: AddressId,\n    tokenContractId: AddressId\n) => {\n    return `${addressId}-${tokenContractId}`\n}\n\nexport const {\n    addBalance,\n    setBalanceValue,\n    setBalanceQuerystate,\n} = balancesSlice.actions\n\n/*\n Create a new balance entry and fetch balance\n */\nexport const addBalanceThunk = (\n    addressId: AddressId,\n    tokenContractId: AddressId\n): AppThunk => async (dispatch: AppDispatch, getState) => {\n    const balanceId = buildBalanceId(addressId, tokenContractId)\n    dispatch(addBalance(balanceId, addressId, tokenContractId))\n    dispatch(\n        setBalanceQuerystate({\n            id: balanceId,\n            queryState: QueryStates.QUERY_STATE_RUNNING,\n        })\n    )\n    const tokenContract = getState().tokenContracts.contractsById[\n        tokenContractId\n    ]\n    const address = getState().addresses.addressesById[addressId]\n    try {\n        const balance = await tokenContract.contractInstance.balanceOf(\n            address.address\n        )\n        dispatch(\n            setBalanceValue({\n                id: balanceId,\n                value: balance,\n            })\n        )\n        dispatch(\n            setBalanceQuerystate({\n                id: balanceId,\n                queryState: QueryStates.QUERY_STATE_COMPLETE,\n            })\n        )\n    } catch (error) {\n        console.log(`Error getting balance: ${error}`)\n        dispatch(\n            setBalanceQuerystate({\n                id: balanceId,\n                queryState: QueryStates.QUERY_STATE_ERROR,\n            })\n        )\n    }\n}\nexport default balancesSlice.reducer\n"],"sourceRoot":""}