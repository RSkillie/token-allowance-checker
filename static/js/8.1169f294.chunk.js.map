{"version":3,"sources":["../node_modules/bnc-onboard/dist/esm/ledger-a060ac3c.js","../node_modules/@ledgerhq/errors/dist/index.js","../node_modules/hdkey/lib/hdkey.js","../node_modules/bnc-onboard/dist/esm/hd-wallet-51f07955.js","../node_modules/coinstring/lib/coinstring.js","../node_modules/coinstring/node_modules/bs58/lib/bs58.js","../../src/TransportU2F.js","../node_modules/u2f-api/index.js","../node_modules/u2f-api/lib/u2f-api.js","../node_modules/u2f-api/lib/google-u2f-api.js","../../src/Transport.js","../../src/index.js","../../src/Eth.js","../../src/utils.js","../node_modules/@ledgerhq/hw-app-eth/node_modules/bignumber.js/bignumber.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","prototype","toString","call","slice","constructor","name","test","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","ledgerProvider","_x2","_ledgerProvider","mark","_callee12","options","networkId","rpcUrl","LedgerTransport","BigNumber","networkName","dPath","addressToPath","enabled","customPath","account","provider","transport","eth","disconnect","setPath","_setPath","isCustomPath","enable","addresses","setPrimaryAccount","getAddress","_getAddress","getPublicKey","_getPublicKey","getPrimaryAddress","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","getBalance","_signTransaction","_signTransaction2","wrap","_context12","prev","_callee11","transactionData","path","transaction","ledgerResult","_context11","values","Transaction","chain","raw","buffer","Buffer","signTransaction","serialize","sent","v","r","s","abrupt","concat","t0","close","finish","stop","_x8","address","sendAsync","jsonrpc","method","params","id","e","res","result","all","map","_ref3","_callee5","balance","_context5","_x7","_callee10","getMore","currentAccounts","paths","_i2","_paths","_context10","size","set","generateAddresses","forEach","_ref4","_x6","_callee9","accounts","_context9","_callee8","publicKey","chainCode","_context8","Error","_callee7","_context7","_x5","entries","accountIndex","findIndex","_ref","unshift","splice","Map","keys","_callee6","custom","_context6","isValidPath","_x3","_x4","createProvider","getAccounts","callback","send","create","TransportU2F","Eth","t1","ledger","preferred","label","iconSrc","svg","wallet","_wallet","_callee4","helpers","_context4","connect","get","_get","_callee","_context","network","_get2","_callee2","_context2","_get3","_callee3","_context3","_x","type","desktop","mobile","osExclusions","errorClasses","deserializers","addCustomErrorDeserializer","deserializer","createCustomErrorClass","C","message","fields","assign","stack","EthAppPleaseEnableContractData","TransportRaceCondition","TransportError","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","TransportStatusError","statusCode","statusText","find","k","smsg","code","getAltStatusMessage","statusCodeStr","assert","require","crypto","cs","secp256k1","MASTER_SECRET","BITCOIN_VERSIONS","private","public","HDKey","versions","depth","index","_privateKey","_publicKey","_fingerprint","parentFingerprint","hdkey","version","allocUnsafe","writeUInt32BE","writeUInt8","fingerprint","copy","hash160","buf","sha","createHash","update","digest","defineProperty","_identifier","identifier","equal","privateKeyVerify","publicKeyCreate","readUInt32BE","publicKeyVerify","publicKeyConvert","encode","alloc","privateKey","derive","split","c","hardened","childIndex","parseInt","deriveChild","data","isHardened","indexBuffer","pk","zb","I","createHmac","IL","IR","hd","privateKeyTweakAdd","publicKeyTweakAdd","sign","hash","signature","verify","wipePrivateData","randomBytes","toJSON","xpriv","privateExtendedKey","xpub","publicExtendedKey","fromMasterSeed","seedBuffer","fromExtendedKey","base58key","keyBuffer","decode","readUInt8","fromJSON","obj","HARDENED_OFFSET","module","exports","config","idMgmt","HookedWalletSubprovider","rpcSubProvider","RpcSource","includes","Web3ProviderEngine","addProvider","SubscriptionSubprovider","FilterSubprovider","start","offset","hdk","dkey","publicToAddress","toChecksumAddress","parts","accountFieldDigit","Number","isNaN","changeFieldDigit","addressFieldDigit","base58","payload","Uint8Array","checksum","sha256x2","base58str","versionLength","endPos","bytes","newChecksum","isValid","createEncoder","createDecoder","createValidator","ALPHABET","ALPHABET_MAP","charAt","j","digits","carry","stringOutput","string","reverse","wrapU2FTransportError","originalError","webSafe64","base64","attemptExchange","keyHandle","apdu","wrapApdu","challenge","signRequest","appId","location","origin","log","timeoutMillis","response","signatureData","substring","transportInstances","scrambleKey","unwrap","u2fError","t","isSupported","list","supported","listen","observer","unsubscribed","descriptor","unsubscribe","API","chromeApi","isBrowser","navigator","userAgent","isSafari","match","isEDGE","_backend","getBackend","notSupported","u2f","native","window","protocol","MessageChannel","ok","bind","ensureSupport","register","ErrorCodes","ErrorNames","makeError","msg","errorCode","metaData","deferPromise","promise","ret","cancel","backend","_ensureSupport","registerRequests","signRequests","timeout","makeDefault","func","global","CANCELLED","OTHER_ERROR","BAD_REQUEST","CONFIGURATION_UNSUPPORTED","DEVICE_INELIGIBLE","TIMEOUT","EXTENSION_ID","MessageTypes","Request","Response","SignRequest","SignResponse","RegisterRequest","RegisterResponse","port_","getMessagePort","chrome","runtime","U2F_SIGN_REQUEST","sendMessage","lastError","getIframePort_","getChromeRuntimePort_","port","setTimeout","WrappedChromeRuntimePort_","postMessage","addEventListener","eventName","handler","toLowerCase","onMessage","addListener","console","iframeOrigin","iframe","document","createElement","src","setAttribute","body","appendChild","hasCalledBack","channel","port1","ready","removeEventListener","contentWindow","port2","EXTENSION_TIMEOUT_SEC","waitingForPort_","reqCounter_","callbackMap_","getPortSingleton_","responseHandler_","shift","reqId","cb","opt_timeoutSeconds","req","timeoutSeconds","requestId","U2F_REGISTER_REQUEST","a","statusList","cla","ins","p1","sw","busyPromise","resolveBusy","unresponsiveReached","f","clearTimeout","decorateAppAPIMethod","_appAPIlock","openTimeout","found","sub","complete","listenTimeoutId","listenTimeout","Transport","open","ErrorMessage_ListenTimeout","ErrorMessage_NoDeviceFound","subscribers","String","date","Date","dispatch","hexBuffer","str","maybeHexBuffer","splitPath","boolDisplay","boolChaincode","publicKeyLength","addressLength","rawTx","toSend","maxChunkSize","chunkSize","apduResponse","remapTransactionRelatedErrors","sourceTokenAddressHex","destinationTokenAddressHex","sourceQuantization","destinationQuantization","amountSell","amountBuy","transferTokenAddressHex","targetPublicKeyHex","transferQuantization","amountTransfer","operationContractHex","operationQuantization","components","element","number","foreach","array","iterate","globalObject","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","POWS_TEN","bitFloor","coeffToString","z","charCodeAt","compare","x","y","b","xc","yc","l","intCheck","min","max","isOdd","toExponential","toFixedPoint","zs","clone","configObject","div","convertBase","parseNumeric","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","alphabet","caseChanged","isNum","_isBigNumber","indexOf","replace","search","round","DEBUG","toUpperCase","format","rm","c0","ne","maxOrMin","m","normalise","pop","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","p","hasOwnProperty","getRandomValues","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","random","random53bitInt","dp","rand","Uint32Array","sum","plus","toBaseOut","baseIn","baseOut","arrL","callerIsToString","pow","multiply","base","temp","xlo","xhi","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","define"],"mappings":"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","file":"static/js/8.1169f294.chunk.js","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'web3-provider-engine';\nimport 'web3-provider-engine/subproviders/rpc';\nimport 'web3-provider-engine/subproviders/hooked-wallet';\nimport 'web3-provider-engine/subproviders/subscriptions';\nimport 'web3-provider-engine/subproviders/filters';\nimport { c as createProvider, i as isValidPath, g as generateAddresses } from './hd-wallet-51f07955.js';\nimport 'hdkey';\nimport 'ethereumjs-util';\nimport buffer from 'buffer';\nimport { Transaction } from 'ethereumjs-tx';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport Eth from '@ledgerhq/hw-app-eth';\nvar ledgerIcon = \"\\n\\t<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 450 450\\\" width=\\\"37\\\" height=\\\"37\\\"><style>.st0{fill:currentColor}</style><g id=\\\"squares_1_\\\"><path class=\\\"st0\\\" d=\\\"M578.2 392.7V24.3h25.6v344.1h175.3v24.3H578.2zm327.5 5.1c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5H804.6c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.3 2.6-28.9 3.9-43.5 3.8zM898 135.6c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm238-21.8c19.2 0 37.1 3.8 51.2 10.2 14.1 7.7 26.9 19.2 38.4 37.1h1.3c-1.3-21.7-1.3-42.2-1.3-62.7V0h24.3v392.7h-16.6l-6.4-42.2c-20.5 30.7-51.2 47.3-89.6 47.3s-66.5-11.5-87-35.8c-20.5-23-29.4-57.6-29.4-102.3 0-47.3 10.2-83.2 29.4-108.7 19.2-25.6 48.6-37.2 85.7-37.2zm0 21.8c-29.4 0-52.4 10.2-67.8 32-15.3 20.5-23 51.2-23 92.1 0 78 30.7 116.4 90.8 116.4 30.7 0 53.7-9 67.8-26.9 14.1-17.9 21.7-47.3 21.7-89.6v-3.8c0-42.2-7.7-72.9-21.7-90.8-12.8-20.5-35.8-29.4-67.8-29.4zm379.9-16.6v17.9l-56.3 3.8c15.3 19.2 23 39.7 23 61.4 0 26.9-9 47.3-26.9 64-17.9 16.6-40.9 24.3-70.4 24.3-12.8 0-21.7 0-25.6-1.3-10.2 5.1-17.9 11.5-23 17.9-5.1 7.7-7.7 14.1-7.7 23s3.8 15.3 10.2 19.2c6.4 3.8 17.9 6.4 33.3 6.4h47.3c29.4 0 52.4 6.4 67.8 17.9s24.3 29.4 24.3 53.7c0 29.4-11.5 51.2-34.5 66.5-23 15.3-56.3 23-99.8 23-34.5 0-61.4-6.4-80.6-20.5-19.2-12.8-28.1-32-28.1-55 0-19.2 6.4-34.5 17.9-47.3s28.1-20.5 47.3-25.6c-7.7-3.8-15.3-9-19.2-15.3-5-6.2-7.7-13.8-7.7-21.7 0-17.9 11.5-34.5 34.5-48.6-15.3-6.4-28.1-16.6-37.1-30.7-9-14.1-12.8-30.7-12.8-48.6 0-26.9 9-49.9 25.6-66.5 17.9-16.6 40.9-24.3 70.4-24.3 17.9 0 32 1.3 42.2 5.1h85.7v1.3h.2zm-222.6 319.8c0 37.1 28.1 56.3 84.4 56.3 71.6 0 107.5-23 107.5-69.1 0-16.6-5.1-28.1-16.6-35.8-11.5-7.7-29.4-11.5-55-11.5h-44.8c-49.9 1.2-75.5 20.4-75.5 60.1zm21.8-235.4c0 21.7 6.4 37.1 19.2 49.9 12.8 11.5 29.4 17.9 51.2 17.9 23 0 40.9-6.4 52.4-17.9 12.8-11.5 17.9-28.1 17.9-49.9 0-23-6.4-40.9-19.2-52.4-12.8-11.5-29.4-17.9-52.4-17.9-21.7 0-39.7 6.4-51.2 19.2-12.8 11.4-17.9 29.3-17.9 51.1z\\\"/><path class=\\\"st0\\\" d=\\\"M1640 397.8c-39.7 0-70.4-12.8-93.4-37.1-21.7-24.3-33.3-58.8-33.3-103.6 0-43.5 10.2-79.3 32-104.9 21.7-26.9 49.9-39.7 87-39.7 32 0 57.6 11.5 76.8 33.3 19.2 23 28.1 53.7 28.1 92.1v20.5h-197c0 37.1 9 66.5 26.9 85.7 16.6 20.5 42.2 29.4 74.2 29.4 15.3 0 29.4-1.3 40.9-3.8 11.5-2.6 26.9-6.4 44.8-14.1v24.3c-15.3 6.4-29.4 11.5-42.2 14.1-14.1 2.6-28.2 3.8-44.8 3.8zm-6.4-262.2c-26.9 0-47.3 9-64 25.6-15.3 17.9-25.6 42.2-28.1 75.5h168.9c0-32-6.4-56.3-20.5-74.2-12.8-18-32-26.9-56.3-26.9zm245.6-21.8c11.5 0 24.3 1.3 37.1 3.8l-5.1 24.3c-11.8-2.6-23.8-3.9-35.8-3.8-23 0-42.2 10.2-57.6 29.4-15.3 20.5-23 44.8-23 75.5v149.7h-25.6V119h21.7l2.6 49.9h1.3c11.5-20.5 23-34.5 35.8-42.2 15.4-9 30.7-12.9 48.6-12.9zM333.9 12.8h-183v245.6h245.6V76.7c.1-34.5-28.1-63.9-62.6-63.9zm-239.2 0H64c-34.5 0-64 28.1-64 64v30.7h94.7V12.8zM0 165h94.7v94.7H0V165zm301.9 245.6h30.7c34.5 0 64-28.1 64-64V316h-94.7v94.6zm-151-94.6h94.7v94.7h-94.7V316zM0 316v30.7c0 34.5 28.1 64 64 64h30.7V316H0z\\\"/></g></svg>\\n\";\nvar LEDGER_LIVE_PATH = \"m/44'/60'\";\nvar ACCOUNTS_TO_GET = 5;\n\nfunction ledger(options) {\n  var rpcUrl = options.rpcUrl,\n      LedgerTransport = options.LedgerTransport,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Ledger',\n    svg: svg || ledgerIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName;\n                _context4.next = 3;\n                return ledgerProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  LedgerTransport: LedgerTransport,\n                  BigNumber: BigNumber,\n                  networkName: networkName\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Ledger',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction ledgerProvider(_x2) {\n  return _ledgerProvider.apply(this, arguments);\n}\n\nfunction _ledgerProvider() {\n  _ledgerProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(options) {\n    var networkId, rpcUrl, LedgerTransport, BigNumber, networkName, dPath, addressToPath, enabled, customPath, account, provider, transport, eth, disconnect, setPath, _setPath, isCustomPath, enable, addresses, setPrimaryAccount, getAddress, _getAddress, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, _signTransaction, _signTransaction2;\n\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(transactionData) {\n                var path, transaction, ledgerResult;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        _context11.prev = 1;\n                        transaction = new Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        transaction.raw[6] = buffer.Buffer.from([networkId]); // v\n\n                        transaction.raw[7] = buffer.Buffer.from([]); // r\n\n                        transaction.raw[8] = buffer.Buffer.from([]); // s\n\n                        _context11.next = 8;\n                        return eth.signTransaction(path, transaction.serialize().toString('hex'));\n\n                      case 8:\n                        ledgerResult = _context11.sent;\n                        transaction.v = buffer.Buffer.from(ledgerResult.v, 'hex');\n                        transaction.r = buffer.Buffer.from(ledgerResult.r, 'hex');\n                        transaction.s = buffer.Buffer.from(ledgerResult.s, 'hex');\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 15:\n                        _context11.prev = 15;\n                        _context11.t0 = _context11[\"catch\"](1);\n                        throw _context11.t0;\n\n                      case 18:\n                        _context11.prev = 18;\n                        transport.close();\n                        return _context11.finish(18);\n\n                      case 21:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11, null, [[1, 15, 18, 21]]);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(getMore) {\n                var currentAccounts, paths, i, _i2, _paths, path, res, addressInfo;\n\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", []);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = LEDGER_LIVE_PATH;\n                        }\n\n                        if (!(dPath === LEDGER_LIVE_PATH)) {\n                          _context10.next = 21;\n                          break;\n                        }\n\n                        currentAccounts = addressToPath.size;\n                        paths = [];\n\n                        for (i = currentAccounts; i < ACCOUNTS_TO_GET + currentAccounts; i++) {\n                          paths.push(\"\".concat(LEDGER_LIVE_PATH, \"/\").concat(i, \"'/0/0\"));\n                        }\n\n                        _i2 = 0, _paths = paths;\n\n                      case 10:\n                        if (!(_i2 < _paths.length)) {\n                          _context10.next = 19;\n                          break;\n                        }\n\n                        path = _paths[_i2];\n                        _context10.next = 14;\n                        return eth.getAddress(path);\n\n                      case 14:\n                        res = _context10.sent;\n                        addressToPath.set(res.address, path);\n\n                      case 16:\n                        _i2++;\n                        _context10.next = 10;\n                        break;\n\n                      case 19:\n                        _context10.next = 33;\n                        break;\n\n                      case 21:\n                        if (account) {\n                          _context10.next = 31;\n                          break;\n                        }\n\n                        _context10.prev = 22;\n                        _context10.next = 25;\n                        return getPublicKey();\n\n                      case 25:\n                        account = _context10.sent;\n                        _context10.next = 31;\n                        break;\n\n                      case 28:\n                        _context10.prev = 28;\n                        _context10.t0 = _context10[\"catch\"](22);\n                        throw _context10.t0;\n\n                      case 31:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n\n                      case 33:\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 34:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[22, 28]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", accounts && getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var result, publicKey, chainCode;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return eth.getAddress(dPath, false, true);\n\n                      case 5:\n                        result = _context8.sent;\n                        publicKey = result.publicKey, chainCode = result.chainCode;\n                        account = {\n                          publicKey: publicKey,\n                          chainCode: chainCode,\n                          path: dPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 11:\n                        _context8.prev = 11;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was a problem accessing your Ledger accounts.');\n\n                      case 14:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 11]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(path) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        _context7.next = 3;\n                        return eth.getAddress(path);\n\n                      case 3:\n                        result = _context7.sent;\n                        return _context7.abrupt(\"return\", result.address);\n\n                      case 7:\n                        _context7.prev = 7;\n                        _context7.t0 = _context7[\"catch\"](0);\n\n                      case 9:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 7]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 10;\n                          break;\n                        }\n\n                        _context6.next = 6;\n                        return getAddress(path);\n\n                      case 6:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 10:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 13:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              transport.close();\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            networkId = options.networkId, rpcUrl = options.rpcUrl, LedgerTransport = options.LedgerTransport, BigNumber = options.BigNumber, networkName = options.networkName;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            _context12.prev = 38;\n\n            if (!LedgerTransport) {\n              _context12.next = 45;\n              break;\n            }\n\n            _context12.next = 42;\n            return LedgerTransport.create();\n\n          case 42:\n            _context12.t0 = _context12.sent;\n            _context12.next = 48;\n            break;\n\n          case 45:\n            _context12.next = 47;\n            return TransportU2F.create();\n\n          case 47:\n            _context12.t0 = _context12.sent;\n\n          case 48:\n            transport = _context12.t0;\n            eth = new Eth(transport);\n            _context12.next = 55;\n            break;\n\n          case 52:\n            _context12.prev = 52;\n            _context12.t1 = _context12[\"catch\"](38);\n            throw new Error('Error connecting to Ledger wallet');\n\n          case 55:\n            return _context12.abrupt(\"return\", provider);\n\n          case 56:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[38, 52]]);\n  }));\n  return _ledgerProvider.apply(this, arguments);\n}\n\nexport default ledger;","/* eslint-disable no-continue */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n","var assert = require('assert')\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = require('crypto')\nvar cs = require('coinstring')\nvar secp256k1 = require('secp256k1')\n\nvar MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8')\nvar HARDENED_OFFSET = 0x80000000\nvar LEN = 78\n\n// Bitcoin hardcoded by default, can use package `coininfo` for others\nvar BITCOIN_VERSIONS = {private: 0x0488ADE4, public: 0x0488B21E}\n\nfunction HDKey (versions) {\n  this.versions = versions || BITCOIN_VERSIONS\n  this.depth = 0\n  this.index = 0\n  this._privateKey = null\n  this._publicKey = null\n  this.chainCode = null\n  this._fingerprint = 0\n  this.parentFingerprint = 0\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', { get: function () { return this._fingerprint } })\nObject.defineProperty(HDKey.prototype, 'identifier', { get: function () { return this._identifier } })\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', { get: function () { return this.identifier } })\n\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function () {\n    return this._privateKey\n  },\n  set: function (value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.')\n    assert(secp256k1.privateKeyVerify(value) === true, 'Invalid private key')\n\n    this._privateKey = value\n    this._publicKey = secp256k1.publicKeyCreate(value, true)\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function () {\n    return this._publicKey\n  },\n  set: function (value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.')\n    assert(secp256k1.publicKeyVerify(value) === true, 'Invalid public key')\n\n    this._publicKey = secp256k1.publicKeyConvert(value, true) // force compressed point\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n    this._privateKey = null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function () {\n    if (this._privateKey) return cs.encode(serialize(this, this.versions.private, Buffer.concat([Buffer.alloc(1, 0), this.privateKey])))\n    else return null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function () {\n    return cs.encode(serialize(this, this.versions.public, this.publicKey))\n  }\n})\n\nHDKey.prototype.derive = function (path) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this\n  }\n\n  var entries = path.split('/')\n  var hdkey = this\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"')\n      return\n    }\n\n    var hardened = (c.length > 1) && (c[c.length - 1] === \"'\")\n    var childIndex = parseInt(c, 10) // & (HARDENED_OFFSET - 1)\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index')\n    if (hardened) childIndex += HARDENED_OFFSET\n\n    hdkey = hdkey.deriveChild(childIndex)\n  })\n\n  return hdkey\n}\n\nHDKey.prototype.deriveChild = function (index) {\n  var isHardened = index >= HARDENED_OFFSET\n  var indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  var data\n\n  if (isHardened) { // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key')\n\n    var pk = this.privateKey\n    var zb = Buffer.alloc(1, 0)\n    pk = Buffer.concat([zb, pk])\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data = Buffer.concat([pk, indexBuffer])\n  } else { // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer])\n  }\n\n  var I = crypto.createHmac('sha512', this.chainCode).update(data).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hd = new HDKey(this.versions)\n\n  // Private parent key -> private child key\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = secp256k1.privateKeyTweakAdd(this.privateKey, IL)\n      // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.derive(index + 1)\n    }\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = secp256k1.publicKeyTweakAdd(this.publicKey, IL, true)\n      // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.derive(index + 1, isHardened)\n    }\n  }\n\n  hd.chainCode = IR\n  hd.depth = this.depth + 1\n  hd.parentFingerprint = this.fingerprint// .readUInt32BE(0)\n  hd.index = index\n\n  return hd\n}\n\nHDKey.prototype.sign = function (hash) {\n  return secp256k1.sign(hash, this.privateKey).signature\n}\n\nHDKey.prototype.verify = function (hash, signature) {\n  return secp256k1.verify(hash, signature, this.publicKey)\n}\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) crypto.randomBytes(this._privateKey.length).copy(this._privateKey)\n  this._privateKey = null\n  return this\n}\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  }\n}\n\nHDKey.fromMasterSeed = function (seedBuffer, versions) {\n  var I = crypto.createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hdkey = new HDKey(versions)\n  hdkey.chainCode = IR\n  hdkey.privateKey = IL\n\n  return hdkey\n}\n\nHDKey.fromExtendedKey = function (base58key, versions) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS\n  var hdkey = new HDKey(versions)\n\n  var keyBuffer = cs.decode(base58key)\n\n  var version = keyBuffer.readUInt32BE(0)\n  assert(version === versions.private || version === versions.public, 'Version mismatch: does not match private or public')\n\n  hdkey.depth = keyBuffer.readUInt8(4)\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5)\n  hdkey.index = keyBuffer.readUInt32BE(9)\n  hdkey.chainCode = keyBuffer.slice(13, 45)\n\n  var key = keyBuffer.slice(45)\n  if (key.readUInt8(0) === 0) { // private\n    assert(version === versions.private, 'Version mismatch: version does not match private')\n    hdkey.privateKey = key.slice(1) // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public')\n    hdkey.publicKey = key\n  }\n\n  return hdkey\n}\n\nHDKey.fromJSON = function (obj) {\n  return HDKey.fromExtendedKey(obj.xpriv)\n}\n\nfunction serialize (hdkey, version, key) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  var buffer = Buffer.allocUnsafe(LEN)\n\n  buffer.writeUInt32BE(version, 0)\n  buffer.writeUInt8(hdkey.depth, 4)\n\n  var fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000\n  buffer.writeUInt32BE(fingerprint, 5)\n  buffer.writeUInt32BE(hdkey.index, 9)\n\n  hdkey.chainCode.copy(buffer, 13)\n  key.copy(buffer, 45)\n\n  return buffer\n}\n\nfunction hash160 (buf) {\n  var sha = crypto.createHash('sha256').update(buf).digest()\n  return crypto.createHash('ripemd160').update(sha).digest()\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET\nmodule.exports = HDKey\n","import Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\nimport HDKey from 'hdkey';\nimport { publicToAddress, toChecksumAddress } from 'ethereumjs-util';\nimport buffer from 'buffer';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl;\n  var idMgmt = new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine();\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  return provider;\n}\n\nvar numberToGet = 5;\n\nfunction generateAddresses(account, offset) {\n  var publicKey = account.publicKey,\n      chainCode = account.chainCode,\n      path = account.path;\n  var hdk = new HDKey();\n  hdk.publicKey = new buffer.Buffer(publicKey, 'hex');\n  hdk.chainCode = new buffer.Buffer(chainCode, 'hex');\n  var addresses = [];\n\n  for (var i = offset; i < numberToGet + offset; i++) {\n    var dkey = hdk.deriveChild(i);\n    var address = publicToAddress(dkey.publicKey, true).toString('hex');\n    addresses.push({\n      dPath: \"\".concat(path, \"/\").concat(i),\n      address: toChecksumAddress(address)\n    });\n  }\n\n  return addresses;\n}\n\nfunction isValidPath(path) {\n  var parts = path.split('/');\n\n  if (parts[0] !== 'm') {\n    return false;\n  }\n\n  if (parts[1] !== \"44'\") {\n    return false;\n  }\n\n  if (parts[2] !== \"60'\" && parts[2] !== \"1'\") {\n    return false;\n  }\n\n  if (parts[3] === undefined) {\n    return true;\n  }\n\n  var accountFieldDigit = Number(parts[3][0]);\n\n  if (isNaN(accountFieldDigit) || accountFieldDigit < 0 || parts[3][1] !== \"'\") {\n    return false;\n  }\n\n  if (parts[4] === undefined) {\n    return true;\n  }\n\n  var changeFieldDigit = Number(parts[4][0]);\n\n  if (isNaN(changeFieldDigit) || changeFieldDigit < 0) {\n    return false;\n  }\n\n  if (parts[5] === undefined) {\n    return true;\n  }\n\n  var addressFieldDigit = Number(parts[5][0]);\n\n  if (isNaN(addressFieldDigit) || addressFieldDigit < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { createProvider as c, generateAddresses as g, isValidPath as i };","var base58 = require('bs58')\nvar createHash = require('create-hash')\n\nfunction encode (payload, version) {\n  if (Array.isArray(payload) || payload instanceof Uint8Array) {\n    payload = new Buffer(payload)\n  }\n\n  var buf\n  if (version != null) {\n    if (typeof version === 'number') {\n      version = new Buffer([version])\n    }\n    buf = Buffer.concat([version, payload])\n  } else {\n    buf = payload\n  }\n\n  var checksum = sha256x2(buf).slice(0, 4)\n  var result = Buffer.concat([buf, checksum])\n  return base58.encode(result)\n}\n\nfunction decode (base58str, version) {\n  var arr = base58.decode(base58str)\n  var buf = new Buffer(arr)\n  var versionLength\n\n  if (version == null) {\n    versionLength = 0\n  } else {\n    if (typeof version === 'number') version = new Buffer([version])\n\n    versionLength = version.length\n    var versionCompare = buf.slice(0, versionLength)\n    if (versionCompare.toString('hex') !== version.toString('hex')) {\n      throw new Error('Invalid version')\n    }\n  }\n\n  var checksum = buf.slice(-4)\n  var endPos = buf.length - 4\n  var bytes = buf.slice(0, endPos)\n\n  var newChecksum = sha256x2(bytes).slice(0, 4)\n  if (checksum.toString('hex') !== newChecksum.toString('hex')) {\n    throw new Error('Invalid checksum')\n  }\n\n  return bytes.slice(versionLength)\n}\n\nfunction isValid (base58str, version) {\n  try {\n    decode(base58str, version)\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nfunction createEncoder (version) {\n  return function (payload) {\n    return encode(payload, version)\n  }\n}\n\nfunction createDecoder (version) {\n  return function (base58str) {\n    return decode(base58str, version)\n  }\n}\n\nfunction createValidator (version) {\n  return function (base58str) {\n    return isValid(base58str, version)\n  }\n}\n\nfunction sha256x2 (buffer) {\n  var sha = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(sha).digest()\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  isValid: isValid,\n  createEncoder: createEncoder,\n  createDecoder: createDecoder,\n  createValidator: createValidator\n}\n","// Base58 encoding/decoding\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\nvar ALPHABET_MAP = {}\nfor(var i = 0; i < ALPHABET.length; i++) {\n  ALPHABET_MAP[ALPHABET.charAt(i)] = i\n}\nvar BASE = 58\n\nfunction encode(buffer) {\n  if (buffer.length === 0) return ''\n\n  var i, j, digits = [0]\n  for (i = 0; i < buffer.length; i++) {\n    for (j = 0; j < digits.length; j++) digits[j] <<= 8\n\n    digits[0] += buffer[i]\n\n    var carry = 0\n    for (j = 0; j < digits.length; ++j) {\n      digits[j] += carry\n\n      carry = (digits[j] / BASE) | 0\n      digits[j] %= BASE\n    }\n\n    while (carry) {\n      digits.push(carry % BASE)\n\n      carry = (carry / BASE) | 0\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) digits.push(0)\n\n  // convert digits to a string\n  var stringOutput = \"\"\n  for (var i = digits.length - 1; i >= 0; i--) {\n    stringOutput = stringOutput + ALPHABET[digits[i]]\n  }\n  return stringOutput\n}\n\nfunction decode(string) {\n  if (string.length === 0) return []\n\n  var i, j, bytes = [0]\n  for (i = 0; i < string.length; i++) {\n    var c = string[i]\n    if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character')\n\n    for (j = 0; j < bytes.length; j++) bytes[j] *= BASE\n    bytes[0] += ALPHABET_MAP[c]\n\n    var carry = 0\n    for (j = 0; j < bytes.length; ++j) {\n      bytes[j] += carry\n\n      carry = bytes[j] >> 8\n      bytes[j] &= 0xff\n    }\n\n    while (carry) {\n      bytes.push(carry & 0xff)\n\n      carry >>= 8\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; string[i] === '1' && i < string.length - 1; i++) bytes.push(0)\n\n  return bytes.reverse()\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n}\n","//@flow\n\nimport { sign, isSupported } from \"u2f-api\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportError } from \"@ledgerhq/errors\";\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new TransportError(message, id);\n  // $FlowFixMe\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu: Buffer, key: Buffer) {\n  const result = Buffer.alloc(apdu.length);\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n  return result;\n}\n\n// Convert from normal to web-safe, strip trailing \"=\"s\nconst webSafe64 = (base64: string) =>\n  base64\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=+$/, \"\");\n\n// Convert from web-safe to normal, add trailing \"=\"s\nconst normal64 = (base64: string) =>\n  base64.replace(/-/g, \"+\").replace(/_/g, \"/\") +\n  \"==\".substring(0, (3 * base64.length) % 4);\n\nfunction attemptExchange(\n  apdu: Buffer,\n  timeoutMillis: number,\n  scrambleKey: Buffer,\n  unwrap: boolean\n): Promise<Buffer> {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from(\n    \"0000000000000000000000000000000000000000000000000000000000000000\",\n    \"hex\"\n  );\n  const signRequest = {\n    version: \"U2F_V2\",\n    keyHandle: webSafe64(keyHandle.toString(\"base64\")),\n    challenge: webSafe64(challenge.toString(\"base64\")),\n    appId: location.origin\n  };\n  log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n  return sign(signRequest, timeoutMillis / 1000).then(response => {\n    const { signatureData } = response;\n    if (typeof signatureData === \"string\") {\n      const data = Buffer.from(normal64(signatureData), \"base64\");\n      let result;\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach(t => t.emit(\"disconnect\"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from \"@ledgerhq/hw-transport-u2f\";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\nexport default class TransportU2F extends Transport<null> {\n  static isSupported = isSupported;\n\n  /*\n   */\n  static list = (): * =>\n    // this transport is not discoverable but we are going to guess if it is here with isSupported()\n    isSupported().then(supported => (supported ? [null] : []));\n\n  /*\n   */\n  static listen = (observer: *) => {\n    let unsubscribed = false;\n    isSupported().then(supported => {\n      if (unsubscribed) return;\n      if (supported) {\n        observer.next({ type: \"add\", descriptor: null });\n        observer.complete();\n      } else {\n        observer.error(\n          new TransportError(\n            \"U2F browser support is needed for Ledger. \" +\n              \"Please use Chrome, Opera or Firefox with a U2F extension. \" +\n              \"Also make sure you're on an HTTPS connection\",\n            \"U2FNotSupported\"\n          )\n        );\n      }\n    });\n    return {\n      unsubscribe: () => {\n        unsubscribed = true;\n      }\n    };\n  };\n\n  scrambleKey: Buffer;\n\n  unwrap: boolean = true;\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_: *, _openTimeout?: number = 5000): Promise<TransportU2F> {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    transportInstances.push(this);\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  async exchange(apdu: Buffer): Promise<Buffer> {\n    try {\n      return await attemptExchange(\n        apdu,\n        this.exchangeTimeout,\n        this.scrambleKey,\n        this.unwrap\n      );\n    } catch (e) {\n      const isU2FError = typeof e.metaData === \"object\";\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        }\n        // the wrapping make error more usable and \"printable\" to the end user.\n        throw wrapU2FTransportError(\n          e,\n          \"Failed to sign with Ledger device: U2F \" + e.metaData.type,\n          \"U2F_\" + e.metaData.code\n        );\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   */\n  setScrambleKey(scrambleKey: string) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n\n  /**\n   */\n  setUnwrap(unwrap: boolean) {\n    this.unwrap = unwrap;\n  }\n\n  close(): Promise<void> {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n}\n","'use strict';\nmodule.exports = require( './lib/u2f-api' );","'use strict';\n\nmodule.exports = API;\n\nvar chromeApi = require( './google-u2f-api' );\n\n// Feature detection (yes really)\nvar isBrowser = ( typeof navigator !== 'undefined' ) && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match( /Safari\\// )\n\t&& !navigator.userAgent.match( /Chrome\\// );\nvar isEDGE = isBrowser && navigator.userAgent.match( /Edge\\/1[2345]/ );\n\nvar _backend = null;\nfunction getBackend( Promise )\n{\n\tif ( !_backend )\n\t\t_backend = new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction notSupported( )\n\t\t\t{\n\t\t\t\t// Note; {native: true} means *not* using Google's hack\n\t\t\t\tresolve( { u2f: null, native: true } );\n\t\t\t}\n\n\t\t\tif ( !isBrowser )\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( isSafari )\n\t\t\t\t// Safari doesn't support U2F, and the Safari-FIDO-U2F\n\t\t\t\t// extension lacks full support (Multi-facet apps), so we\n\t\t\t\t// block it until proper support.\n\t\t\t\treturn notSupported( );\n\n\t\t\tvar hasNativeSupport =\n\t\t\t\t( typeof window.u2f !== 'undefined' ) &&\n\t\t\t\t( typeof window.u2f.sign === 'function' );\n\n\t\t\tif ( hasNativeSupport )\n\t\t\t\tresolve( { u2f: window.u2f, native: true } );\n\n\t\t\tif ( isEDGE )\n\t\t\t\t// We don't want to check for Google's extension hack on EDGE\n\t\t\t\t// as it'll cause trouble (popups, etc)\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( location.protocol === 'http:' )\n\t\t\t\t// U2F isn't supported over http, only https\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( typeof MessageChannel === 'undefined' )\n\t\t\t\t// Unsupported browser, the chrome hack would throw\n\t\t\t\treturn notSupported( );\n\n\t\t\t// Test for google extension support\n\t\t\tchromeApi.isSupported( function( ok )\n\t\t\t{\n\t\t\t\tif ( ok )\n\t\t\t\t\tresolve( { u2f: chromeApi, native: false } );\n\t\t\t\telse\n\t\t\t\t\tnotSupported( );\n\t\t\t} );\n\t\t} );\n\n\treturn _backend;\n}\n\nfunction API( Promise )\n{\n\treturn {\n\t\tisSupported   : isSupported.bind( Promise ),\n\t\tensureSupport : ensureSupport.bind( Promise ),\n\t\tregister      : register.bind( Promise ),\n\t\tsign          : sign.bind( Promise ),\n\t\tErrorCodes    : API.ErrorCodes,\n\t\tErrorNames    : API.ErrorNames\n\t};\n}\n\nAPI.ErrorCodes = {\n\tCANCELLED: -1,\n\tOK: 0,\n\tOTHER_ERROR: 1,\n\tBAD_REQUEST: 2,\n\tCONFIGURATION_UNSUPPORTED: 3,\n\tDEVICE_INELIGIBLE: 4,\n\tTIMEOUT: 5\n};\nAPI.ErrorNames = {\n\t\"-1\": \"CANCELLED\",\n\t\"0\": \"OK\",\n\t\"1\": \"OTHER_ERROR\",\n\t\"2\": \"BAD_REQUEST\",\n\t\"3\": \"CONFIGURATION_UNSUPPORTED\",\n\t\"4\": \"DEVICE_INELIGIBLE\",\n\t\"5\": \"TIMEOUT\"\n};\n\nfunction makeError( msg, err )\n{\n\tvar code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\tvar type = API.ErrorNames[ '' + code ];\n\tvar error = new Error( msg );\n\terror.metaData = {\n\t\ttype: type,\n\t\tcode: code\n\t}\n\treturn error;\n}\n\nfunction deferPromise( Promise, promise )\n{\n\tvar ret = { };\n\tret.promise = new Promise( function( resolve, reject ) {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t\tpromise.then( resolve, reject );\n\t} );\n\t/**\n\t * Reject request promise and disconnect port if 'disconnect' flag is true\n\t * @param {string} msg\n\t * @param {boolean} disconnect\n\t */\n\tret.promise.cancel = function( msg, disconnect )\n\t{\n\t\tgetBackend( Promise )\n\t\t.then( function( backend )\n\t\t{\n\t\t\tif ( disconnect && !backend.native )\n\t\t\t\tbackend.u2f.disconnect( );\n\n\t\t\tret.reject( makeError( msg, { errorCode: -1 } ) );\n\t\t} );\n\t};\n\treturn ret;\n}\n\nfunction defer( Promise, fun )\n{\n\treturn deferPromise( Promise, new Promise( function( resolve, reject )\n\t{\n\t\ttry\n\t\t{\n\t\t\tfun && fun( resolve, reject );\n\t\t}\n\t\tcatch ( err )\n\t\t{\n\t\t\treject( err );\n\t\t}\n\t} ) );\n}\n\nfunction isSupported( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\treturn !!backend.u2f;\n\t} );\n}\n\nfunction _ensureSupport( backend )\n{\n\tif ( !backend.u2f )\n\t{\n\t\tif ( location.protocol === 'http:' )\n\t\t\tthrow new Error( \"U2F isn't supported over http, only https\" );\n\t\tthrow new Error( \"U2F not supported\" );\n\t}\n}\n\nfunction ensureSupport( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( _ensureSupport );\n}\n\nfunction register( registerRequests, signRequests /* = null */, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( registerRequests ) )\n\t\tregisterRequests = [ registerRequests ];\n\n\tif ( typeof signRequests === 'number' && typeof timeout === 'undefined' )\n\t{\n\t\ttimeout = signRequests;\n\t\tsignRequests = null;\n\t}\n\n\tif ( !signRequests )\n\t\tsignRequests = [ ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = registerRequests[ 0 ].appId;\n\n\t\t\t\tu2f.register(\n\t\t\t\t\tappId, registerRequests, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.register(\n\t\t\t\t\tregisterRequests, signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction sign( signRequests, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( signRequests ) )\n\t\tsignRequests = [ signRequests ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = signRequests[ 0 ].appId;\n\t\t\t\tvar challenge = signRequests[ 0 ].challenge;\n\n\t\t\t\tu2f.sign( appId, challenge, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.sign( signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction makeDefault( func )\n{\n\tAPI[ func ] = function( )\n\t{\n\t\tif ( !global.Promise )\n\t\t\t// This is very unlikely to ever happen, since browsers\n\t\t\t// supporting U2F will most likely support Promises.\n\t\t\tthrow new Error( \"The platform doesn't natively support promises\" );\n\n\t\tvar args = [ ].slice.call( arguments );\n\t\treturn API( global.Promise )[ func ].apply( null, args );\n\t};\n}\n\n// Provide default functions using the built-in Promise if available.\nmakeDefault( 'isSupported' );\nmakeDefault( 'ensureSupport' );\nmakeDefault( 'register' );\nmakeDefault( 'sign' );\n","// Copyright 2014 Google Inc. All rights reserved\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n/**\n * @fileoverview The U2F api.\n */\n\n'use strict';\n\n/** Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\nmodule.exports = u2f; // Adaptation for u2f-api package\n\n/**\n * The U2F extension id\n * @type {string}\n * @const\n */\nu2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {string}\n */\nu2f.MessageTypes = {\n  'U2F_REGISTER_REQUEST': 'u2f_register_request',\n  'U2F_SIGN_REQUEST': 'u2f_sign_request',\n  'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n  'U2F_SIGN_RESPONSE': 'u2f_sign_response'\n};\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n  'OK': 0,\n  'OTHER_ERROR': 1,\n  'BAD_REQUEST': 2,\n  'CONFIGURATION_UNSUPPORTED': 3,\n  'DEVICE_INELIGIBLE': 4,\n  'TIMEOUT': 5\n};\n\n/**\n * A message type for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   signRequests: Array.<u2f.SignRequest>,\n *   registerRequests: ?Array.<u2f.RegisterRequest>,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.Request;\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.Response;\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   appId: string\n * }}\n */\nu2f.RegisterRequest;\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   registrationData: string,\n *   clientData: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n// Low level MessagePort API support\n\n/**\n * Call MessagePort disconnect\n */\nu2f.disconnect = function() {\n  if (u2f.port_ && u2f.port_.port_) {\n    u2f.port_.port_.disconnect();\n    u2f.port_ = null;\n  }\n};\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function(callback) {\n  if (typeof chrome != 'undefined' && chrome.runtime) {\n    // The actual message here does not matter, but we need to get a reply\n    // for the callback to run. Thus, send an empty signature request\n    // in order to get a failure response.\n    var msg = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: []\n    };\n    chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function() {\n      if (!chrome.runtime.lastError) {\n        // We are on a whitelisted origin and can talk directly\n        // with the extension.\n        u2f.getChromeRuntimePort_(callback);\n      } else {\n        // chrome.runtime was available, but we couldn't message\n        // the extension directly, use iframe\n        u2f.getIframePort_(callback);\n      }\n    });\n  } else {\n    // chrome.runtime was not available at all, which is normal\n    // when this origin doesn't have access to any extensions.\n    u2f.getIframePort_(callback);\n  }\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function(callback) {\n  var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n    {'includeTlsChannelId': true});\n  setTimeout(function() {\n    callback(null, new u2f.WrappedChromeRuntimePort_(port));\n  }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function(port) {\n  this.port_ = port;\n};\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function(message) {\n  this.port_.postMessage(message);\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message' || name == 'onmessage') {\n    this.port_.onMessage.addListener(function(message) {\n      // Emulate a minimal MessageEvent object\n      handler({'data': message});\n    });\n  } else {\n    console.error('WrappedChromeRuntimePort only supports onMessage');\n  }\n};\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function(callback) {\n  // Create the iframe\n  var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n  var iframe = document.createElement('iframe');\n  iframe.src = iframeOrigin + '/u2f-comms.html';\n  iframe.setAttribute('style', 'display:none');\n  document.body.appendChild(iframe);\n\n  var hasCalledBack = false;\n\n  var channel = new MessageChannel();\n  var ready = function(message) {\n    if (message.data == 'ready') {\n      channel.port1.removeEventListener('message', ready);\n      if (!hasCalledBack)\n      {\n        hasCalledBack = true;\n        callback(null, channel.port1);\n      }\n    } else {\n      console.error('First event on iframe port was not \"ready\"');\n    }\n  };\n  channel.port1.addEventListener('message', ready);\n  channel.port1.start();\n\n  iframe.addEventListener('load', function() {\n    // Deliver the port to the iframe and initialize\n    iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n  });\n\n  // Give this 200ms to initialize, after that, we treat this method as failed\n  setTimeout(function() {\n    if (!hasCalledBack)\n    {\n      hasCalledBack = true;\n      callback(new Error(\"IFrame extension not supported\"));\n    }\n  }, 200);\n};\n\n\n// High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array.<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function(callback) {\n  if (u2f.port_) {\n    callback(null, u2f.port_);\n  } else {\n    if (u2f.waitingForPort_.length == 0) {\n      u2f.getMessagePort(function(err, port) {\n        if (!err) {\n          u2f.port_ = port;\n          u2f.port_.addEventListener('message',\n            /** @type {function(Event)} */ (u2f.responseHandler_));\n        }\n\n        // Careful, here be async callbacks. Maybe.\n        while (u2f.waitingForPort_.length)\n          u2f.waitingForPort_.shift()(err, port);\n      });\n    }\n    u2f.waitingForPort_.push(callback);\n  }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function(message) {\n  var response = message.data;\n  var reqId = response['requestId'];\n  if (!reqId || !u2f.callbackMap_[reqId]) {\n    console.error('Unknown or missing requestId in response.');\n    return;\n  }\n  var cb = u2f.callbackMap_[reqId];\n  delete u2f.callbackMap_[reqId];\n  cb(null, response['responseData']);\n};\n\n/**\n * Calls the callback with true or false as first and only argument\n * @param {Function} callback\n */\nu2f.isSupported = function(callback) {\n  u2f.getPortSingleton_(function(err, port) {\n    callback(!err);\n  });\n}\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function(signRequests, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: signRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {Array.<u2f.RegisterRequest>} registerRequests\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function(registerRequests, signRequests,\n    callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n      signRequests: signRequests,\n      registerRequests: registerRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n","//@flow\n\nimport EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError\n} from \"@ledgerhq/errors\";\n\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage\n};\n\n/**\n */\nexport type Subscription = { unsubscribe: () => void };\n\n/**\n */\nexport type Device = Object;\n\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport type DescriptorEvent<Descriptor> = {\n  type: \"add\" | \"remove\",\n  descriptor: Descriptor,\n  deviceModel?: ?DeviceModel,\n  device?: Device\n};\n/**\n */\nexport type Observer<Ev> = $ReadOnly<{\n  next: (event: Ev) => mixed,\n  error: (e: any) => mixed,\n  complete: () => mixed\n}>;\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport<Descriptor> {\n  exchangeTimeout: number = 30000;\n  unresponsiveTimeout: number = 15000;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static +isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static +list: () => Promise<Array<Descriptor>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\nconst sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n})\n   */\n  static +listen: (\n    observer: Observer<DescriptorEvent<Descriptor>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\nTransportFoo.open(descriptor).then(transport => ...)\n   */\n  static +open: (\n    descriptor: Descriptor,\n    timeout?: number\n  ) => Promise<Transport<Descriptor>>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: Function) {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: Function) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: *) {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n    if (!statusList.some(s => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\nTransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout?: number = 3000,\n    listenTimeout?: number\n  ): Promise<Transport<Descriptor>> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: e => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: e => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        }\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: ?Promise<void>;\n\n  // $FlowFixMe\n  exchangeAtomicImpl = async f => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n    let resolveBusy;\n    const busyPromise = new Promise(r => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n    try {\n      const res = await f();\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Object,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock = null;\n  decorateAppAPIMethod<R, A: any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: *,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","// @flow\n\n/**\n * A Log object\n */\nexport type Log = {\n  type: string,\n  message?: string,\n  data?: any,\n  id: string, // unique amount all logs\n  date: Date // date of the log\n};\n\nexport type Unsubscribe = () => void;\n\nlet id = 0;\nconst subscribers = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = { type, id: String(++id), date: new Date() };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Log => void): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\nglobal.__ledgerLogsListen = listen;\n","/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\n// FIXME drop:\nimport { splitPath, foreach } from \"./utils\";\nimport { EthAppPleaseEnableContractData } from \"@ledgerhq/errors\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { BigNumber } from \"bignumber.js\";\n\nfunction hexBuffer(str: string): Buffer {\n  return Buffer.from(str.startsWith(\"0x\") ? str.slice(2) : str, \"hex\");\n}\n\nfunction maybeHexBuffer(str: ?string): ?Buffer {\n  if (!str) return null;\n  return hexBuffer(str);\n}\n\nconst remapTransactionRelatedErrors = e => {\n  if (e && e.statusCode === 0x6a80) {\n    return new EthAppPleaseEnableContractData(\n      \"Please enable Contract data on the Ethereum app Settings\"\n    );\n  }\n  return e;\n};\n\n/**\n * Ethereum API\n *\n * @example\n * import Eth from \"@ledgerhq/hw-app-eth\";\n * const eth = new Eth(transport)\n */\nexport default class Eth {\n  transport: Transport<*>;\n\n  constructor(transport: Transport<*>, scrambleKey: string = \"w0w\") {\n    this.transport = transport;\n    transport.decorateAppAPIMethods(\n      this,\n      [\n        \"getAddress\",\n        \"provideERC20TokenInformation\",\n        \"signTransaction\",\n        \"signPersonalMessage\",\n        \"getAppConfiguration\",\n        \"starkGetPublicKey\",\n        \"starkSignOrder\",\n        \"starkSignTransfer\",\n        \"starkProvideQuantum\"\n      ],\n      scrambleKey\n    );\n  }\n\n  /**\n   * get Ethereum address for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @option boolChaincode optionally enable or not the chaincode request\n   * @return an object with a publicKey, address and (optionally) chainCode\n   * @example\n   * eth.getAddress(\"44'/60'/0'/0/0\").then(o => o.address)\n   */\n  getAddress(\n    path: string,\n    boolDisplay?: boolean,\n    boolChaincode?: boolean\n  ): Promise<{\n    publicKey: string,\n    address: string,\n    chainCode?: string\n  }> {\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport\n      .send(\n        0xe0,\n        0x02,\n        boolDisplay ? 0x01 : 0x00,\n        boolChaincode ? 0x01 : 0x00,\n        buffer\n      )\n      .then(response => {\n        let result = {};\n        let publicKeyLength = response[0];\n        let addressLength = response[1 + publicKeyLength];\n        result.publicKey = response\n          .slice(1, 1 + publicKeyLength)\n          .toString(\"hex\");\n        result.address =\n          \"0x\" +\n          response\n            .slice(\n              1 + publicKeyLength + 1,\n              1 + publicKeyLength + 1 + addressLength\n            )\n            .toString(\"ascii\");\n        if (boolChaincode) {\n          result.chainCode = response\n            .slice(\n              1 + publicKeyLength + 1 + addressLength,\n              1 + publicKeyLength + 1 + addressLength + 32\n            )\n            .toString(\"hex\");\n        }\n        return result;\n      });\n  }\n\n  /**\n   * This commands provides a trusted description of an ERC 20 token\n   * to associate a contract address with a ticker and number of decimals.\n   *\n   * It shall be run immediately before performing a transaction involving a contract\n   * calling this contract address to display the proper token information to the user if necessary.\n   *\n   * @param {*} info: a blob from \"erc20.js\" utilities that contains all token information.\n   *\n   * @example\n   * import { byContractAddress } from \"@ledgerhq/hw-app-eth/erc20\"\n   * const zrxInfo = byContractAddress(\"0xe41d2489571d322189246dafa5ebde1f4699f498\")\n   * if (zrxInfo) await appEth.provideERC20TokenInformation(zrxInfo)\n   * const signed = await appEth.signTransaction(path, rawTxHex)\n   */\n  provideERC20TokenInformation({ data }: { data: Buffer }): Promise<boolean> {\n    return this.transport.send(0xe0, 0x0a, 0x00, 0x00, data).then(\n      () => true,\n      e => {\n        if (e && e.statusCode === 0x6d00) {\n          // this case happen for older version of ETH app, since older app version had the ERC20 data hardcoded, it's fine to assume it worked.\n          // we return a flag to know if the call was effective or not\n          return false;\n        }\n        throw e;\n      }\n    );\n  }\n\n  /**\n   * You can sign a transaction and retrieve v, r, s given the raw transaction and the BIP 32 path of the account to sign\n   * @example\n   eth.signTransaction(\"44'/60'/0'/0/0\", \"e8018504e3b292008252089428ee52a8f3d6e5d15f8b131996950d7f296c7952872bd72a2487400080\").then(result => ...)\n   */\n  signTransaction(\n    path: string,\n    rawTxHex: string\n  ): Promise<{\n    s: string,\n    v: string,\n    r: string\n  }> {\n    let paths = splitPath(path);\n    let offset = 0;\n    let rawTx = Buffer.from(rawTxHex, \"hex\");\n    let toSend = [];\n    let response;\n    while (offset !== rawTx.length) {\n      let maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 : 150;\n      let chunkSize =\n        offset + maxChunkSize > rawTx.length\n          ? rawTx.length - offset\n          : maxChunkSize;\n      let buffer = Buffer.alloc(\n        offset === 0 ? 1 + paths.length * 4 + chunkSize : chunkSize\n      );\n      if (offset === 0) {\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n          buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        rawTx.copy(buffer, 1 + 4 * paths.length, offset, offset + chunkSize);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    return foreach(toSend, (data, i) =>\n      this.transport\n        .send(0xe0, 0x04, i === 0 ? 0x00 : 0x80, 0x00, data)\n        .then(apduResponse => {\n          response = apduResponse;\n        })\n    ).then(\n      () => {\n        const v = response.slice(0, 1).toString(\"hex\");\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return { v, r, s };\n      },\n      e => {\n        throw remapTransactionRelatedErrors(e);\n      }\n    );\n  }\n\n  /**\n   */\n  getAppConfiguration(): Promise<{\n    arbitraryDataEnabled: number,\n    erc20ProvisioningNecessary: number,\n    starkEnabled: number,\n    version: string\n  }> {\n    return this.transport.send(0xe0, 0x06, 0x00, 0x00).then(response => {\n      let result = {};\n      result.arbitraryDataEnabled = response[0] & 0x01;\n      result.erc20ProvisioningNecessary = response[0] & 0x02;\n      result.starkEnabled = response[0] & 0x04;\n      result.version = \"\" + response[1] + \".\" + response[2] + \".\" + response[3];\n      return result;\n    });\n  }\n\n  /**\n  * You can sign a message according to eth_sign RPC call and retrieve v, r, s given the message and the BIP 32 path of the account to sign.\n  * @example\neth.signPersonalMessage(\"44'/60'/0'/0/0\", Buffer.from(\"test\").toString(\"hex\")).then(result => {\n  var v = result['v'] - 27;\n  v = v.toString(16);\n  if (v.length < 2) {\n    v = \"0\" + v;\n  }\n  console.log(\"Signature 0x\" + result['r'] + result['s'] + v);\n})\n   */\n  signPersonalMessage(\n    path: string,\n    messageHex: string\n  ): Promise<{\n    v: number,\n    s: string,\n    r: string\n  }> {\n    let paths = splitPath(path);\n    let offset = 0;\n    let message = Buffer.from(messageHex, \"hex\");\n    let toSend = [];\n    let response;\n    while (offset !== message.length) {\n      let maxChunkSize = offset === 0 ? 150 - 1 - paths.length * 4 - 4 : 150;\n      let chunkSize =\n        offset + maxChunkSize > message.length\n          ? message.length - offset\n          : maxChunkSize;\n      let buffer = Buffer.alloc(\n        offset === 0 ? 1 + paths.length * 4 + 4 + chunkSize : chunkSize\n      );\n      if (offset === 0) {\n        buffer[0] = paths.length;\n        paths.forEach((element, index) => {\n          buffer.writeUInt32BE(element, 1 + 4 * index);\n        });\n        buffer.writeUInt32BE(message.length, 1 + 4 * paths.length);\n        message.copy(\n          buffer,\n          1 + 4 * paths.length + 4,\n          offset,\n          offset + chunkSize\n        );\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    return foreach(toSend, (data, i) =>\n      this.transport\n        .send(0xe0, 0x08, i === 0 ? 0x00 : 0x80, 0x00, data)\n        .then(apduResponse => {\n          response = apduResponse;\n        })\n    ).then(() => {\n      const v = response[0];\n      const r = response.slice(1, 1 + 32).toString(\"hex\");\n      const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n      return { v, r, s };\n    });\n  }\n\n  /**\n   * get Stark public key for a given BIP 32 path.\n   * @param path a path in BIP 32 format\n   * @option boolDisplay optionally enable or not the display\n   * @return the Stark public key\n   */\n  starkGetPublicKey(path: string, boolDisplay?: boolean): Promise<Buffer> {\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return this.transport\n      .send(0xf0, 0x02, boolDisplay ? 0x01 : 0x00, 0x00, buffer)\n      .then(response => {\n        return response.slice(0, response.length - 2);\n      });\n  }\n\n  /**\n   * sign a Stark order\n   * @param path a path in BIP 32 format\n   * @option sourceTokenAddress contract address of the source token (not present for ETH)\n   * @param sourceQuantization quantization used for the source token\n   * @option destinationTokenAddress contract address of the destination token (not present for ETH)\n   * @param destinationQuantization quantization used for the destination token\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountSell amount to sell\n   * @param amountBuy amount to buy\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @return the signature\n   */\n  starkSignOrder(\n    path: string,\n    sourceTokenAddress?: string,\n    sourceQuantization: BigNumber,\n    destinationTokenAddress?: string,\n    destinationQuantization: BigNumber,\n    sourceVault: number,\n    destinationVault: number,\n    amountSell: BigNumber,\n    amountBuy: BigNumber,\n    nonce: number,\n    timestamp: number\n  ): Promise<Buffer> {\n    const sourceTokenAddressHex = maybeHexBuffer(sourceTokenAddress);\n    const destinationTokenAddressHex = maybeHexBuffer(destinationTokenAddress);\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(\n      1 + paths.length * 4 + 20 + 32 + 20 + 32 + 4 + 4 + 8 + 8 + 4 + 4,\n      0\n    );\n    let offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    if (sourceTokenAddressHex) {\n      sourceTokenAddressHex.copy(buffer, offset);\n    }\n    offset += 20;\n    Buffer.from(sourceQuantization.toString(16).padStart(64, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 32;\n    if (destinationTokenAddressHex) {\n      destinationTokenAddressHex.copy(buffer, offset);\n    }\n    offset += 20;\n    Buffer.from(\n      destinationQuantization.toString(16).padStart(64, \"0\"),\n      \"hex\"\n    ).copy(buffer, offset);\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountSell.toString(16).padStart(16, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 8;\n    Buffer.from(amountBuy.toString(16).padStart(16, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n    return this.transport\n      .send(0xf0, 0x04, 0x01, 0x00, buffer)\n      .then(response => {\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return { r, s };\n      });\n  }\n\n  /**\n   * sign a Stark transfer\n   * @param path a path in BIP 32 format\n   * @option transferTokenAddress contract address of the token to be transferred (not present for ETH)\n   * @param transferQuantization quantization used for the token to be transferred\n   * @param targetPublicKey target Stark public key\n   * @param sourceVault ID of the source vault\n   * @param destinationVault ID of the destination vault\n   * @param amountTransfer amount to transfer\n   * @param nonce transaction nonce\n   * @param timestamp transaction validity timestamp\n   * @return the signature\n   */\n  starkSignTransfer(\n    path: string,\n    transferTokenAddress?: string,\n    transferQuantization: BigNumber,\n    targetPublicKey: string,\n    sourceVault: number,\n    destinationVault: number,\n    amountTransfer: BigNumber,\n    nonce: number,\n    timestamp: number\n  ): Promise<Buffer> {\n    const transferTokenAddressHex = maybeHexBuffer(transferTokenAddress);\n    const targetPublicKeyHex = hexBuffer(targetPublicKey);\n    let paths = splitPath(path);\n    let buffer = Buffer.alloc(\n      1 + paths.length * 4 + 20 + 32 + 32 + 4 + 4 + 8 + 4 + 4,\n      0\n    );\n    let offset = 0;\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n      buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    offset = 1 + 4 * paths.length;\n    if (transferTokenAddressHex) {\n      transferTokenAddressHex.copy(buffer, offset);\n    }\n    offset += 20;\n    Buffer.from(\n      transferQuantization.toString(16).padStart(64, \"0\"),\n      \"hex\"\n    ).copy(buffer, offset);\n    offset += 32;\n    targetPublicKeyHex.copy(buffer, offset);\n    offset += 32;\n    buffer.writeUInt32BE(sourceVault, offset);\n    offset += 4;\n    buffer.writeUInt32BE(destinationVault, offset);\n    offset += 4;\n    Buffer.from(amountTransfer.toString(16).padStart(16, \"0\"), \"hex\").copy(\n      buffer,\n      offset\n    );\n    offset += 8;\n    buffer.writeUInt32BE(nonce, offset);\n    offset += 4;\n    buffer.writeUInt32BE(timestamp, offset);\n    return this.transport\n      .send(0xf0, 0x04, 0x02, 0x00, buffer)\n      .then(response => {\n        const r = response.slice(1, 1 + 32).toString(\"hex\");\n        const s = response.slice(1 + 32, 1 + 32 + 32).toString(\"hex\");\n        return { r, s };\n      });\n  }\n\n  /**\n   * provide quantization information before singing a deposit or withdrawal Stark powered contract call\n   *\n   * It shall be run following a provideERC20TokenInformation call for the given contract\n   *\n   * @param operationContract contract address of the token to be transferred (not present for ETH)\n   * @param operationQuantization quantization used for the token to be transferred\n   */\n  starkProvideQuantum(\n    operationContract?: string,\n    operationQuantization: BigNumber\n  ): Promise<boolean> {\n    const operationContractHex = maybeHexBuffer(operationContract);\n    let buffer = Buffer.alloc(20 + 32, 0);\n    if (operationContractHex) {\n      operationContractHex.copy(buffer, 0);\n    }\n    Buffer.from(\n      operationQuantization.toString(16).padStart(64, \"0\"),\n      \"hex\"\n    ).copy(buffer, 20);\n    return this.transport.send(0xf0, 0x08, 0x00, 0x00, buffer).then(\n      () => true,\n      e => {\n        if (e && e.statusCode === 0x6d00) {\n          // this case happen for ETH application versions not supporting Stark extensions\n          return false;\n        }\n        throw e;\n      }\n    );\n  }\n}\n","/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\ntype Defer<T> = {\n  promise: Promise<T>,\n  resolve: T => void,\n  reject: any => void\n};\n\nexport function defer<T>(): Defer<T> {\n  let resolve, reject;\n  let promise = new Promise(function(success, failure) {\n    resolve = success;\n    reject = failure;\n  });\n  if (!resolve || !reject) throw \"defer() error\"; // this never happens and is just to make flow happy\n  return { promise, resolve, reject };\n}\n\n// TODO use bip32-path library\nexport function splitPath(path: string): number[] {\n  let result = [];\n  let components = path.split(\"/\");\n  components.forEach(element => {\n    let number = parseInt(element, 10);\n    if (isNaN(number)) {\n      return; // FIXME shouldn't it throws instead?\n    }\n    if (element.length > 1 && element[element.length - 1] === \"'\") {\n      number += 0x80000000;\n    }\n    result.push(number);\n  });\n  return result;\n}\n\n// TODO use async await\n\nexport function eachSeries<A>(arr: A[], fun: A => Promise<*>): Promise<*> {\n  return arr.reduce((p, e) => p.then(() => fun(e)), Promise.resolve());\n}\n\nexport function foreach<T, A>(\n  arr: T[],\n  callback: (T, number) => Promise<A>\n): Promise<A[]> {\n  function iterate(index, array, result) {\n    if (index >= array.length) {\n      return result;\n    } else\n      return callback(array[index], index).then(function(res) {\n        result.push(res);\n        return iterate(index + 1, array, result);\n      });\n  }\n  return Promise.resolve().then(() => iterate(0, arr, []));\n}\n\nexport function doIf(\n  condition: boolean,\n  callback: () => any | Promise<any>\n): Promise<void> {\n  return Promise.resolve().then(() => {\n    if (condition) {\n      return callback();\n    }\n  });\n}\n\nexport function asyncWhile<T>(\n  predicate: () => boolean,\n  callback: () => Promise<T>\n): Promise<Array<T>> {\n  function iterate(result) {\n    if (!predicate()) {\n      return result;\n    } else {\n      return callback().then(res => {\n        result.push(res);\n        return iterate(result);\n      });\n    }\n  }\n  return Promise.resolve([]).then(iterate);\n}\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n"],"sourceRoot":""}